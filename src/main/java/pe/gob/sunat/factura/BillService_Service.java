package pe.gob.sunat.factura;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-04-10T16:25:46.748-05:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "billService",
                  wsdlLocation = "file:/home/admin/git/openfact/src/main/resources/wsdl/billService.wsdl",
                  targetNamespace = "http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/")
public class BillService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", "billService");
    public final static QName BillServicePort0 = new QName("http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", "BillServicePort.0");
    public final static QName BillServicePort1 = new QName("http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", "BillServicePort.1");
    public final static QName BillServicePort = new QName("http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", "BillServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/admin/git/openfact/src/main/resources/wsdl/billService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(BillService_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/home/admin/git/openfact/src/main/resources/wsdl/billService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public BillService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public BillService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BillService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public BillService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public BillService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public BillService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns BillService
     */
    @WebEndpoint(name = "BillServicePort.0")
    public BillService getBillServicePort0() {
        return super.getPort(BillServicePort0, BillService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BillService
     */
    @WebEndpoint(name = "BillServicePort.0")
    public BillService getBillServicePort0(WebServiceFeature... features) {
        return super.getPort(BillServicePort0, BillService.class, features);
    }


    /**
     *
     * @return
     *     returns BillService
     */
    @WebEndpoint(name = "BillServicePort.1")
    public BillService getBillServicePort1() {
        return super.getPort(BillServicePort1, BillService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BillService
     */
    @WebEndpoint(name = "BillServicePort.1")
    public BillService getBillServicePort1(WebServiceFeature... features) {
        return super.getPort(BillServicePort1, BillService.class, features);
    }


    /**
     *
     * @return
     *     returns BillService
     */
    @WebEndpoint(name = "BillServicePort")
    public BillService getBillServicePort() {
        return super.getPort(BillServicePort, BillService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BillService
     */
    @WebEndpoint(name = "BillServicePort")
    public BillService getBillServicePort(WebServiceFeature... features) {
        return super.getPort(BillServicePort, BillService.class, features);
    }

}
