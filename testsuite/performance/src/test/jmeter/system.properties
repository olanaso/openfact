#
# Copyright 2016 Red Hat, Inc. and/or its affiliates
# and other contributors as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Thread variables used by JMeter. NumThreads is number of worker threads. Loops is number of iterations per each worker. Total number of tests is numThreads*loops.
# reampTime is pause between startup of individual threads
openfact.jmeter.numThreads=1
openfact.jmeter.loops=10
openfact.jmeter.rampTime=0

## Choose implementation of KeycloakSessionFactory
openfact.model.provider=jpa

## Configure JPA (just hbm2ddl schema configurable here. Rest of the stuff in META-INF/persistence.xml)
openfact.jpa.hbm2ddl.auto=create
# openfact.jpa.hbm2ddl.auto=update


## Specify Openfact worker class
openfact.perf.workerClass=org.openfact.testsuite.performance.CreateOrganizationsWorker
# openfact.perf.workerClass=org.openfact.testsuite.performance.CreateInvoicesWorker
# openfact.perf.workerClass=org.openfact.testsuite.performance.ReadInvoicesWorker
# openfact.perf.workerClass=org.openfact.testsuite.performance.RemoveInvoicesWorker


## Properties for CreateOrganizations test. This test is used to create some organizations.
# Each iteration of single worker thread will add one organization and it will add some config to it
# Offset where to start creating organizations. Count (total number of organizations to create) is configurable as number of JMeter threads*loopCount
# For example: if offset==1 and in JMeter properties we have openfact.jmeter.loops=10 and openfact.jmeter.numThreads=2 then we will create 20 organizations in total and we will create organizations "organization1" - "organization10"
# NOTE: Count (total number of organizations to create) is configurable as number of JMeter threads*loopCount
openfact.perf.createOrganizations.organizations.offset=1
# Whether to create required credentials in each organization (If true, we will create "password", "totp" and client-certificate)
openfact.perf.createOrganizations.createRequiredCredentials=true


## Properties for CreateInvoices test. This test is used to create some invoices
# Each iteration of single worker thread will add one invoice and it will add some default roles, passwords and bind him with some social accounts
# Each worker will use separate organization dedicated just for him, so each worker will create invoice1, invoice2, ... , invoiceN . N (number of invoices to create per organization)
# is configurable in JMeter configuration as loopCount. Total number of created invoices for whole test will be threads*loopCount
# NOTE: For each thread, the corresponding organization must already exists
# Organization where to start creating invoices
openfact.perf.createInvoices.organizations.offset=1
# Whether to add basic attributes like firstName/lastName/email to each invoice
openfact.perf.createInvoices.addBasicInvoiceAttributes=true

## Properties for ReadInvoices test. This test is used to read some invoices from DB and alternatively read some of his properties (passwords, roles, scopes, federatedIdentities)
openfact.perf.readInvoices.organizations.offset=1
# Number of read invoices in each iteration
openfact.perf.readInvoices.readInvoicesPerIteration=5
# Number of invoices to read in each organization. After reading all 100 invoices, reading will start again from invoice1
openfact.perf.readInvoices.countOfInvoicesPerOrganization=100


## Properties for RemoveInvoices worker. This test is used to remove some invoices from DB (and all their stuff actually)
# Similarly like in CreateInvoices test, each worker works just with one organization. Number of removed invoices depends on JMeter property loopCount
openfact.perf.removeInvoices.organizations.offset=1
