//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "ShipmentStageType")
@Table(name = "SHIPMENTSTAGETYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class ShipmentStageType {

    protected IDType ID;
    protected TransportModeCodeTypeCommBas transportModeCode;
    protected TransportMeansTypeCodeType transportMeansTypeCode;
    protected TransitDirectionCodeType transitDirectionCode;
    protected PreCarriageIndicatorType preCarriageIndicator;
    protected OnCarriageIndicatorType onCarriageIndicator;
    protected PeriodEntity transitPeriod;
    protected List<PartyEntity> carrierParty;
    protected TransportMeansType transportMeans;
    protected LocationCommAggEntity loadingPortLocation;
    protected LocationCommAggEntity unloadingPortLocation;
    protected LocationCommAggEntity transshipPortLocation;
    protected String id;

    @ManyToOne(targetEntity = IDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ID_SHIPMENTSTAGETYPE_OFID")
    public IDType getID() {
        return ID;
    }

    public void setID(IDType value) {
        this.ID = value;
    }

    @ManyToOne(targetEntity = TransportModeCodeTypeCommBas.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TRANSPORTMODECODE_SHIPMENTST_0")
    public TransportModeCodeTypeCommBas getTransportModeCode() {
        return transportModeCode;
    }

    public void setTransportModeCode(TransportModeCodeTypeCommBas value) {
        this.transportModeCode = value;
    }

    @ManyToOne(targetEntity = TransportMeansTypeCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TRANSPORTMEANSTYPECODE_SHIPM_0")
    public TransportMeansTypeCodeType getTransportMeansTypeCode() {
        return transportMeansTypeCode;
    }

    public void setTransportMeansTypeCode(TransportMeansTypeCodeType value) {
        this.transportMeansTypeCode = value;
    }

    @ManyToOne(targetEntity = TransitDirectionCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TRANSITDIRECTIONCODE_SHIPMEN_0")
    public TransitDirectionCodeType getTransitDirectionCode() {
        return transitDirectionCode;
    }

    public void setTransitDirectionCode(TransitDirectionCodeType value) {
        this.transitDirectionCode = value;
    }

    @ManyToOne(targetEntity = PreCarriageIndicatorType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PRECARRIAGEINDICATOR_SHIPMEN_0")
    public PreCarriageIndicatorType getPreCarriageIndicator() {
        return preCarriageIndicator;
    }

    public void setPreCarriageIndicator(PreCarriageIndicatorType value) {
        this.preCarriageIndicator = value;
    }

    @ManyToOne(targetEntity = OnCarriageIndicatorType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ONCARRIAGEINDICATOR_SHIPMENT_0")
    public OnCarriageIndicatorType getOnCarriageIndicator() {
        return onCarriageIndicator;
    }

    public void setOnCarriageIndicator(OnCarriageIndicatorType value) {
        this.onCarriageIndicator = value;
    }

    @ManyToOne(targetEntity = PeriodEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TRANSITPERIOD_SHIPMENTSTAGET_0")
    public PeriodEntity getTransitPeriod() {
        return transitPeriod;
    }

    public void setTransitPeriod(PeriodEntity value) {
        this.transitPeriod = value;
    }

    @OneToMany(targetEntity = PartyEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CARRIERPARTY_SHIPMENTSTAGETY_0")
    public List<PartyEntity> getCarrierParty() {
        if (carrierParty == null) {
            carrierParty = new ArrayList<PartyEntity>();
        }
        return this.carrierParty;
    }

    public void setCarrierParty(List<PartyEntity> carrierParty) {
        this.carrierParty = carrierParty;
    }

    @ManyToOne(targetEntity = TransportMeansType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TRANSPORTMEANS_SHIPMENTSTAGE_0")
    public TransportMeansType getTransportMeans() {
        return transportMeans;
    }

    public void setTransportMeans(TransportMeansType value) {
        this.transportMeans = value;
    }

    @ManyToOne(targetEntity = LocationCommAggEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LOADINGPORTLOCATION_SHIPMENT_0")
    public LocationCommAggEntity getLoadingPortLocation() {
        return loadingPortLocation;
    }

    public void setLoadingPortLocation(LocationCommAggEntity value) {
        this.loadingPortLocation = value;
    }

    @ManyToOne(targetEntity = LocationCommAggEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "UNLOADINGPORTLOCATION_SHIPME_0")
    public LocationCommAggEntity getUnloadingPortLocation() {
        return unloadingPortLocation;
    }

    public void setUnloadingPortLocation(LocationCommAggEntity value) {
        this.unloadingPortLocation = value;
    }

    @ManyToOne(targetEntity = LocationCommAggEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TRANSSHIPPORTLOCATION_SHIPME_0")
    public LocationCommAggEntity getTransshipPortLocation() {
        return transshipPortLocation;
    }

    public void setTransshipPortLocation(LocationCommAggEntity value) {
        this.transshipPortLocation = value;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
