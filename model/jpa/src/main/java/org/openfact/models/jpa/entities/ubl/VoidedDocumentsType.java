//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.openfact.models.jpa.entities.ubl.common.*;

@Entity(name = "VoidedDocumentsType")
@Table(name = "VOIDEDDOCUMENTSTYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class VoidedDocumentsType {

    protected UBLExtensionsType ublExtensions;
    protected UBLVersionIDType ublVersionID;
    protected CustomizationIDType customizationID;
    protected IDType ID;
    protected ReferenceDateType referenceDate;
    protected IssueDateType issueDate;
    protected List<NoteType> note;
    protected List<SignatureType> signature;
    protected SupplierPartyType accountingSupplierParty;
    protected List<VoidedDocumentsLineType> voidedDocumentsLine;
    protected String id;

    @ManyToOne(targetEntity = UBLExtensionsType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "UBLEXTENSIONS_VOIDEDDOCUMENT_0")
    public UBLExtensionsType getUBLExtensions() {
        return ublExtensions;
    }

    public void setUBLExtensions(UBLExtensionsType value) {
        this.ublExtensions = value;
    }

    @ManyToOne(targetEntity = UBLVersionIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "UBLVERSIONID_VOIDEDDOCUMENTS_0")
    public UBLVersionIDType getUBLVersionID() {
        return ublVersionID;
    }

    public void setUBLVersionID(UBLVersionIDType value) {
        this.ublVersionID = value;
    }

    @ManyToOne(targetEntity = CustomizationIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CUSTOMIZATIONID_VOIDEDDOCUME_0")
    public CustomizationIDType getCustomizationID() {
        return customizationID;
    }

    public void setCustomizationID(CustomizationIDType value) {
        this.customizationID = value;
    }

    @ManyToOne(targetEntity = IDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ID_VOIDEDDOCUMENTSTYPE_OFID")
    public IDType getID() {
        return ID;
    }

    public void setID(IDType value) {
        this.ID = value;
    }

    @ManyToOne(targetEntity = ReferenceDateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "REFERENCEDATE_VOIDEDDOCUMENT_0")
    public ReferenceDateType getReferenceDate() {
        return referenceDate;
    }

    public void setReferenceDate(ReferenceDateType value) {
        this.referenceDate = value;
    }

    @ManyToOne(targetEntity = IssueDateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ISSUEDATE_VOIDEDDOCUMENTSTYP_0")
    public IssueDateType getIssueDate() {
        return issueDate;
    }

    public void setIssueDate(IssueDateType value) {
        this.issueDate = value;
    }

    @OneToMany(targetEntity = NoteType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NOTE_VOIDEDDOCUMENTSTYPE_OFID")
    public List<NoteType> getNote() {
        if (note == null) {
            note = new ArrayList<NoteType>();
        }
        return this.note;
    }

    public void setNote(List<NoteType> note) {
        this.note = note;
    }

    @OneToMany(targetEntity = SignatureType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SIGNATURE_VOIDEDDOCUMENTSTYP_0")
    public List<SignatureType> getSignature() {
        if (signature == null) {
            signature = new ArrayList<SignatureType>();
        }
        return this.signature;
    }

    public void setSignature(List<SignatureType> signature) {
        this.signature = signature;
    }

    @ManyToOne(targetEntity = SupplierPartyType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ACCOUNTINGSUPPLIERPARTY_VOID_0")
    public SupplierPartyType getAccountingSupplierParty() {
        return accountingSupplierParty;
    }

    public void setAccountingSupplierParty(SupplierPartyType value) {
        this.accountingSupplierParty = value;
    }

    @OneToMany(targetEntity = VoidedDocumentsLineType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "VOIDEDDOCUMENTSLINE_VOIDEDDO_0")
    public List<VoidedDocumentsLineType> getVoidedDocumentsLine() {
        if (voidedDocumentsLine == null) {
            voidedDocumentsLine = new ArrayList<VoidedDocumentsLineType>();
        }
        return this.voidedDocumentsLine;
    }

    public void setVoidedDocumentsLine(List<VoidedDocumentsLineType> voidedDocumentsLine) {
        this.voidedDocumentsLine = voidedDocumentsLine;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
