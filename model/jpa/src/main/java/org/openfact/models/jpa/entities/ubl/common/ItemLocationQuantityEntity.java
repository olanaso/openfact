//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "ItemLocationQuantityType")
@Table(name = "ITEMLOCATIONQUANTITYTYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class ItemLocationQuantityEntity {

    protected MeasureEntity leadTimeMeasure;
    protected QuantityEntity minimumQuantity;
    protected QuantityEntity maximumQuantity;
    protected boolean hazardousRiskIndicator;
    protected List<String> tradingRestrictions;
    protected List<AddressEntity> applicableTerritoryAddress;
    protected PriceEntity price;
    protected List<DeliveryUnitEntity> deliveryUnit;
    protected List<TaxCategoryEntity> applicableTaxCategory;
    protected String id;

    @ManyToOne(targetEntity = MeasureEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LEADTIMEMEASURE_ITEMLOCATION_0")
    public MeasureEntity getLeadTimeMeasure() {
        return leadTimeMeasure;
    }

    public void setLeadTimeMeasure(MeasureEntity value) {
        this.leadTimeMeasure = value;
    }

    @ManyToOne(targetEntity = QuantityEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "MINIMUMQUANTITY")
    public QuantityEntity getMinimumQuantity() {
        return minimumQuantity;
    }

    public void setMinimumQuantity(QuantityEntity value) {
        this.minimumQuantity = value;
    }

    @ManyToOne(targetEntity = QuantityEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "MAXIMUMQUANTITY")
    public QuantityEntity getMaximumQuantity() {
        return maximumQuantity;
    }

    public void setMaximumQuantity(QuantityEntity value) {
        this.maximumQuantity = value;
    }

    @Column(name = "HAZARDOUS_RISK_INDICATOR")
    public boolean getHazardousRiskIndicator() {
        return hazardousRiskIndicator;
    }

    public void setHazardousRiskIndicator(boolean value) {
        this.hazardousRiskIndicator = value;
    }

    @Column(name = "TRADINGRESTRICTIONS")
    public List<String> getTradingRestrictions() {
        if (tradingRestrictions == null) {
            tradingRestrictions = new ArrayList<String>();
        }
        return this.tradingRestrictions;
    }

    public void setTradingRestrictions(List<String> tradingRestrictions) {
        this.tradingRestrictions = tradingRestrictions;
    }

    @OneToMany(targetEntity = AddressEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "APPLICABLETERRITORYADDRESS")
    public List<AddressEntity> getApplicableTerritoryAddress() {
        if (applicableTerritoryAddress == null) {
            applicableTerritoryAddress = new ArrayList<AddressEntity>();
        }
        return this.applicableTerritoryAddress;
    }

    public void setApplicableTerritoryAddress(List<AddressEntity> applicableTerritoryAddress) {
        this.applicableTerritoryAddress = applicableTerritoryAddress;
    }

    @ManyToOne(targetEntity = PriceEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PRICE_ITEMLOCATIONQUANTITYTY")
    public PriceEntity getPrice() {
        return price;
    }

    public void setPrice(PriceEntity value) {
        this.price = value;
    }

    @OneToMany(targetEntity = DeliveryUnitEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DELIVERYUNIT_ITEMLOCATIONQUA")
    public List<DeliveryUnitEntity> getDeliveryUnit() {
        if (deliveryUnit == null) {
            deliveryUnit = new ArrayList<DeliveryUnitEntity>();
        }
        return this.deliveryUnit;
    }

    public void setDeliveryUnit(List<DeliveryUnitEntity> deliveryUnit) {
        this.deliveryUnit = deliveryUnit;
    }

    @OneToMany(targetEntity = TaxCategoryEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "APPLICABLETAXCATEGORY_ITEMLO_0")
    public List<TaxCategoryEntity> getApplicableTaxCategory() {
        if (applicableTaxCategory == null) {
            applicableTaxCategory = new ArrayList<TaxCategoryEntity>();
        }
        return this.applicableTaxCategory;
    }

    public void setApplicableTaxCategory(List<TaxCategoryEntity> applicableTaxCategory) {
        this.applicableTaxCategory = applicableTaxCategory;
    }

    @Id
    @Column(name = "ID_OFID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
