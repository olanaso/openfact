//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.openfact.models.ubl.common.AccountTypeCodeType;
import org.openfact.models.ubl.common.BranchType;
import org.openfact.models.ubl.common.CountryType;
import org.openfact.models.ubl.common.CurrencyCodeTypeCommBas;
import org.openfact.models.ubl.common.IDType;
import org.openfact.models.ubl.common.NameTypeCommBas;
import org.openfact.models.ubl.common.PaymentNoteType;

@Entity(name = "FinancialAccountType")
@Table(name = "FINANCIALACCOUNTTYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class FinancialAccountType {

    protected IDType ID;
    protected NameTypeCommBas name;
    protected AccountTypeCodeType accountTypeCode;
    protected CurrencyCodeTypeCommBas currencyCode;
    protected List<PaymentNoteType> paymentNote;
    protected BranchType financialInstitutionBranch;
    protected CountryType country;
    protected String id;

    @ManyToOne(targetEntity = IDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ID_FINANCIALACCOUNTTYPE_OFID")
    public IDType getID() {
        return ID;
    }

    public void setID(IDType value) {
        this.ID = value;
    }

    @ManyToOne(targetEntity = NameTypeCommBas.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NAME__FINANCIALACCOUNTTYPE_H_0")
    public NameTypeCommBas getName() {
        return name;
    }

    public void setName(NameTypeCommBas value) {
        this.name = value;
    }

    @ManyToOne(targetEntity = AccountTypeCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ACCOUNTTYPECODE_FINANCIALACC_0")
    public AccountTypeCodeType getAccountTypeCode() {
        return accountTypeCode;
    }

    public void setAccountTypeCode(AccountTypeCodeType value) {
        this.accountTypeCode = value;
    }

    @ManyToOne(targetEntity = CurrencyCodeTypeCommBas.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CURRENCYCODE_FINANCIALACCOUN_0")
    public CurrencyCodeTypeCommBas getCurrencyCode() {
        return currencyCode;
    }

    public void setCurrencyCode(CurrencyCodeTypeCommBas value) {
        this.currencyCode = value;
    }

    @OneToMany(targetEntity = PaymentNoteType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PAYMENTNOTE_FINANCIALACCOUNT_0")
    public List<PaymentNoteType> getPaymentNote() {
        if (paymentNote == null) {
            paymentNote = new ArrayList<PaymentNoteType>();
        }
        return this.paymentNote;
    }

    public void setPaymentNote(List<PaymentNoteType> paymentNote) {
        this.paymentNote = paymentNote;
    }

    @ManyToOne(targetEntity = BranchType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "FINANCIALINSTITUTIONBRANCH_F_0")
    public BranchType getFinancialInstitutionBranch() {
        return financialInstitutionBranch;
    }

    public void setFinancialInstitutionBranch(BranchType value) {
        this.financialInstitutionBranch = value;
    }

    @ManyToOne(targetEntity = CountryType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "COUNTRY_FINANCIALACCOUNTTYPE_0")
    public CountryType getCountry() {
        return country;
    }

    public void setCountry(CountryType value) {
        this.country = value;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
