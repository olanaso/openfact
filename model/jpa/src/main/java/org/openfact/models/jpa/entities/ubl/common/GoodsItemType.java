//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "GoodsItemType")
@Table(name = "GOODSITEMTYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class GoodsItemType {

    protected IDType ID;
    protected SequenceNumberIDType sequenceNumberID;
    protected List<DescriptionType> description;
    protected HazardousRiskIndicatorType hazardousRiskIndicator;
    protected DeclaredCustomsValueAmountType declaredCustomsValueAmount;
    protected DeclaredForCarriageValueAmountType declaredForCarriageValueAmount;
    protected DeclaredStatisticsValueAmountType declaredStatisticsValueAmount;
    protected FreeOnBoardValueAmountType freeOnBoardValueAmount;
    protected InsuranceValueAmountType insuranceValueAmount;
    protected ValueAmountType valueAmount;
    protected GrossWeightMeasureType grossWeightMeasure;
    protected NetWeightMeasureType netWeightMeasure;
    protected NetNetWeightMeasureType netNetWeightMeasure;
    protected ChargeableWeightMeasureType chargeableWeightMeasure;
    protected GrossVolumeMeasureType grossVolumeMeasure;
    protected NetVolumeMeasureType netVolumeMeasure;
    protected QuantityTypeCommBas quantity;
    protected PreferenceCriterionCodeType preferenceCriterionCode;
    protected RequiredCustomsIDType requiredCustomsID;
    protected CustomsStatusCodeType customsStatusCode;
    protected CustomsTariffQuantityType customsTariffQuantity;
    protected CustomsImportClassifiedIndicatorType customsImportClassifiedIndicator;
    protected List<ItemEntity> item;
    protected List<GoodsItemContainerType> goodsItemContainer;
    protected List<AllowanceChargeEntity> freightAllowanceCharge;
    protected List<InvoiceLineEntity> invoiceLine;
    protected List<TemperatureEntity> temperature;
    protected List<GoodsItemType> containedGoodsItem;
    protected AddressEntity originAddress;
    protected String id;

    @ManyToOne(targetEntity = IDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ID_GOODSITEMTYPE_OFID")
    public IDType getID() {
        return ID;
    }

    public void setID(IDType value) {
        this.ID = value;
    }

    @ManyToOne(targetEntity = SequenceNumberIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SEQUENCENUMBERID_GOODSITEMTY_0")
    public SequenceNumberIDType getSequenceNumberID() {
        return sequenceNumberID;
    }

    public void setSequenceNumberID(SequenceNumberIDType value) {
        this.sequenceNumberID = value;
    }

    @OneToMany(targetEntity = DescriptionType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DESCRIPTION_GOODSITEMTYPE_HJ_0")
    public List<DescriptionType> getDescription() {
        if (description == null) {
            description = new ArrayList<DescriptionType>();
        }
        return this.description;
    }

    public void setDescription(List<DescriptionType> description) {
        this.description = description;
    }

    @ManyToOne(targetEntity = HazardousRiskIndicatorType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "HAZARDOUSRISKINDICATOR_GOODS_0")
    public HazardousRiskIndicatorType getHazardousRiskIndicator() {
        return hazardousRiskIndicator;
    }

    public void setHazardousRiskIndicator(HazardousRiskIndicatorType value) {
        this.hazardousRiskIndicator = value;
    }

    @ManyToOne(targetEntity = DeclaredCustomsValueAmountType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DECLAREDCUSTOMSVALUEAMOUNT_G_0")
    public DeclaredCustomsValueAmountType getDeclaredCustomsValueAmount() {
        return declaredCustomsValueAmount;
    }

    public void setDeclaredCustomsValueAmount(DeclaredCustomsValueAmountType value) {
        this.declaredCustomsValueAmount = value;
    }

    @ManyToOne(targetEntity = DeclaredForCarriageValueAmountType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DECLAREDFORCARRIAGEVALUEAMOU_2")
    public DeclaredForCarriageValueAmountType getDeclaredForCarriageValueAmount() {
        return declaredForCarriageValueAmount;
    }

    public void setDeclaredForCarriageValueAmount(DeclaredForCarriageValueAmountType value) {
        this.declaredForCarriageValueAmount = value;
    }

    @ManyToOne(targetEntity = DeclaredStatisticsValueAmountType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DECLAREDSTATISTICSVALUEAMOUN_1")
    public DeclaredStatisticsValueAmountType getDeclaredStatisticsValueAmount() {
        return declaredStatisticsValueAmount;
    }

    public void setDeclaredStatisticsValueAmount(DeclaredStatisticsValueAmountType value) {
        this.declaredStatisticsValueAmount = value;
    }

    @ManyToOne(targetEntity = FreeOnBoardValueAmountType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "FREEONBOARDVALUEAMOUNT_GOODS_0")
    public FreeOnBoardValueAmountType getFreeOnBoardValueAmount() {
        return freeOnBoardValueAmount;
    }

    public void setFreeOnBoardValueAmount(FreeOnBoardValueAmountType value) {
        this.freeOnBoardValueAmount = value;
    }

    @ManyToOne(targetEntity = InsuranceValueAmountType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "INSURANCEVALUEAMOUNT_GOODSIT_0")
    public InsuranceValueAmountType getInsuranceValueAmount() {
        return insuranceValueAmount;
    }

    public void setInsuranceValueAmount(InsuranceValueAmountType value) {
        this.insuranceValueAmount = value;
    }

    @ManyToOne(targetEntity = ValueAmountType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "VALUEAMOUNT_GOODSITEMTYPE_HJ_0")
    public ValueAmountType getValueAmount() {
        return valueAmount;
    }

    public void setValueAmount(ValueAmountType value) {
        this.valueAmount = value;
    }

    @ManyToOne(targetEntity = GrossWeightMeasureType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "GROSSWEIGHTMEASURE_GOODSITEM_0")
    public GrossWeightMeasureType getGrossWeightMeasure() {
        return grossWeightMeasure;
    }

    public void setGrossWeightMeasure(GrossWeightMeasureType value) {
        this.grossWeightMeasure = value;
    }

    @ManyToOne(targetEntity = NetWeightMeasureType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NETWEIGHTMEASURE_GOODSITEMTY_0")
    public NetWeightMeasureType getNetWeightMeasure() {
        return netWeightMeasure;
    }

    public void setNetWeightMeasure(NetWeightMeasureType value) {
        this.netWeightMeasure = value;
    }

    @ManyToOne(targetEntity = NetNetWeightMeasureType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NETNETWEIGHTMEASURE_GOODSITE_0")
    public NetNetWeightMeasureType getNetNetWeightMeasure() {
        return netNetWeightMeasure;
    }

    public void setNetNetWeightMeasure(NetNetWeightMeasureType value) {
        this.netNetWeightMeasure = value;
    }

    @ManyToOne(targetEntity = ChargeableWeightMeasureType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CHARGEABLEWEIGHTMEASURE_GOOD_0")
    public ChargeableWeightMeasureType getChargeableWeightMeasure() {
        return chargeableWeightMeasure;
    }

    public void setChargeableWeightMeasure(ChargeableWeightMeasureType value) {
        this.chargeableWeightMeasure = value;
    }

    @ManyToOne(targetEntity = GrossVolumeMeasureType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "GROSSVOLUMEMEASURE_GOODSITEM_0")
    public GrossVolumeMeasureType getGrossVolumeMeasure() {
        return grossVolumeMeasure;
    }

    public void setGrossVolumeMeasure(GrossVolumeMeasureType value) {
        this.grossVolumeMeasure = value;
    }

    @ManyToOne(targetEntity = NetVolumeMeasureType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NETVOLUMEMEASURE_GOODSITEMTY_0")
    public NetVolumeMeasureType getNetVolumeMeasure() {
        return netVolumeMeasure;
    }

    public void setNetVolumeMeasure(NetVolumeMeasureType value) {
        this.netVolumeMeasure = value;
    }

    @ManyToOne(targetEntity = QuantityTypeCommBas.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "QUANTITY_GOODSITEMTYPE_OFID")
    public QuantityTypeCommBas getQuantity() {
        return quantity;
    }

    public void setQuantity(QuantityTypeCommBas value) {
        this.quantity = value;
    }

    @ManyToOne(targetEntity = PreferenceCriterionCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PREFERENCECRITERIONCODE_GOOD_0")
    public PreferenceCriterionCodeType getPreferenceCriterionCode() {
        return preferenceCriterionCode;
    }

    public void setPreferenceCriterionCode(PreferenceCriterionCodeType value) {
        this.preferenceCriterionCode = value;
    }

    @ManyToOne(targetEntity = RequiredCustomsIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "REQUIREDCUSTOMSID_GOODSITEMT_0")
    public RequiredCustomsIDType getRequiredCustomsID() {
        return requiredCustomsID;
    }

    public void setRequiredCustomsID(RequiredCustomsIDType value) {
        this.requiredCustomsID = value;
    }

    @ManyToOne(targetEntity = CustomsStatusCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CUSTOMSSTATUSCODE_GOODSITEMT_0")
    public CustomsStatusCodeType getCustomsStatusCode() {
        return customsStatusCode;
    }

    public void setCustomsStatusCode(CustomsStatusCodeType value) {
        this.customsStatusCode = value;
    }

    @ManyToOne(targetEntity = CustomsTariffQuantityType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CUSTOMSTARIFFQUANTITY_GOODSI_0")
    public CustomsTariffQuantityType getCustomsTariffQuantity() {
        return customsTariffQuantity;
    }

    public void setCustomsTariffQuantity(CustomsTariffQuantityType value) {
        this.customsTariffQuantity = value;
    }

    @ManyToOne(targetEntity = CustomsImportClassifiedIndicatorType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CUSTOMSIMPORTCLASSIFIEDINDIC_2")
    public CustomsImportClassifiedIndicatorType getCustomsImportClassifiedIndicator() {
        return customsImportClassifiedIndicator;
    }

    public void setCustomsImportClassifiedIndicator(CustomsImportClassifiedIndicatorType value) {
        this.customsImportClassifiedIndicator = value;
    }

    @OneToMany(targetEntity = ItemEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ITEM_GOODSITEMTYPE_OFID")
    public List<ItemEntity> getItem() {
        if (item == null) {
            item = new ArrayList<ItemEntity>();
        }
        return this.item;
    }

    public void setItem(List<ItemEntity> item) {
        this.item = item;
    }

    @OneToMany(targetEntity = GoodsItemContainerType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "GOODSITEMCONTAINER_GOODSITEM_0")
    public List<GoodsItemContainerType> getGoodsItemContainer() {
        if (goodsItemContainer == null) {
            goodsItemContainer = new ArrayList<GoodsItemContainerType>();
        }
        return this.goodsItemContainer;
    }

    public void setGoodsItemContainer(List<GoodsItemContainerType> goodsItemContainer) {
        this.goodsItemContainer = goodsItemContainer;
    }

    @OneToMany(targetEntity = AllowanceChargeEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "FREIGHTALLOWANCECHARGE_GOODS_0")
    public List<AllowanceChargeEntity> getFreightAllowanceCharge() {
        if (freightAllowanceCharge == null) {
            freightAllowanceCharge = new ArrayList<AllowanceChargeEntity>();
        }
        return this.freightAllowanceCharge;
    }

    public void setFreightAllowanceCharge(List<AllowanceChargeEntity> freightAllowanceCharge) {
        this.freightAllowanceCharge = freightAllowanceCharge;
    }

    @OneToMany(targetEntity = InvoiceLineEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "INVOICELINE_GOODSITEMTYPE_HJ_0")
    public List<InvoiceLineEntity> getInvoiceLine() {
        if (invoiceLine == null) {
            invoiceLine = new ArrayList<InvoiceLineEntity>();
        }
        return this.invoiceLine;
    }

    public void setInvoiceLine(List<InvoiceLineEntity> invoiceLine) {
        this.invoiceLine = invoiceLine;
    }

    @OneToMany(targetEntity = TemperatureEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TEMPERATURE_GOODSITEMTYPE_HJ_0")
    public List<TemperatureEntity> getTemperature() {
        if (temperature == null) {
            temperature = new ArrayList<TemperatureEntity>();
        }
        return this.temperature;
    }

    public void setTemperature(List<TemperatureEntity> temperature) {
        this.temperature = temperature;
    }

    @OneToMany(targetEntity = GoodsItemType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CONTAINEDGOODSITEM_GOODSITEM_0")
    public List<GoodsItemType> getContainedGoodsItem() {
        if (containedGoodsItem == null) {
            containedGoodsItem = new ArrayList<GoodsItemType>();
        }
        return this.containedGoodsItem;
    }

    public void setContainedGoodsItem(List<GoodsItemType> containedGoodsItem) {
        this.containedGoodsItem = containedGoodsItem;
    }

    @ManyToOne(targetEntity = AddressEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ORIGINADDRESS_GOODSITEMTYPE__0")
    public AddressEntity getOriginAddress() {
        return originAddress;
    }

    public void setOriginAddress(AddressEntity value) {
        this.originAddress = value;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
