//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.openfact.models.jpa.entities.ubl.common.*;


@Entity(name = "CreditString")
@Table(name = "CREDITNOTETYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class CreditNoteEntity {

    protected UBLExtensionsEntity ublExtensions;
    protected String ublVersionID;
    protected String customizationID;
    protected String profileID;
    protected String ID;
    protected boolean copyIndicator;
    protected String uuid;
    protected LocalDate issueDate;
    protected LocalTime issueTime;
    protected LocalDate taxPointDate;
    protected List<String> note;
    protected String documentCurrencyCode;
    protected String taxCurrencyCode;
    protected String pricingCurrencyCode;
    protected String paymentCurrencyCode;
    protected String paymentAlternativeCurrencyCode;
    protected String accountingCostCode;
    protected String accountingCost;
    protected BigDecimal lineCountNumeric;
    protected List<PeriodEntity> invoicePeriod;
    protected List<ResponseEntity> discrepancyResponse;
    protected OrderReferenceEntity orderReference;
    protected List<BillingReferenceEntity> billingReference;
    protected List<DocumentReferenceEntity> despatchDocumentReference;
    protected List<DocumentReferenceEntity> receiptDocumentReference;
    protected List<DocumentReferenceEntity> contractDocumentReference;
    protected List<DocumentReferenceEntity> additionalDocumentReference;
    protected List<SignatureEntity> signature;
    protected SupplierPartyEntity accountingSupplierParty;
    protected CustomerPartyType accountingCustomerParty;
    protected PartyEntity payeeParty;
    protected PartyEntity taxRepresentativeParty;
    protected ExchangeRateType taxExchangeRate;
    protected ExchangeRateType pricingExchangeRate;
    protected ExchangeRateType paymentExchangeRate;
    protected ExchangeRateType paymentAlternativeExchangeRate;
    protected List<AllowanceChargeEntity> allowanceCharge;
    protected List<TaxTotalEntity> taxTotal;
    protected MonetaryTotalEntity legalMonetaryTotal;
    protected List<CreditNoteLineEntity> creditNoteLine;
    protected String id;


    public UBLExtensionsEntity getUBLExtensions() {
        return ublExtensions;
    }

    public void setUBLExtensions(UBLExtensionsEntity value) {
        this.ublExtensions = value;
    }
    
    public String getUBLVersionID() {
        return ublVersionID;
    }

    public void setUBLVersionID(String value) {
        this.ublVersionID = value;
    }
    public String getCustomizationID() {
        return customizationID;
    }

    public void setCustomizationID(String value) {
        this.customizationID = value;
    }
  
    public String getProfileID() {
        return profileID;
    }

    public void setProfileID(String value) {
        this.profileID = value;
    }
  
    public String getID() {
        return ID;
    }

    public void setID(String value) {
        this.ID = value;
    }
    public boolean getCopyIndicator() {
        return copyIndicator;
    }

    public void setCopyIndicator(boolean value) {
        this.copyIndicator = value;
    }

    public String getUUID() {
        return uuid;
    }

    public void setUUID(String value) {
        this.uuid = value;
    }

    public LocalDate getIssueDate() {
        return issueDate;
    }

    public void setIssueDate(LocalDate value) {
        this.issueDate = value;
    }

    public LocalTime getIssueTime() {
        return issueTime;
    }

    public void setIssueTime(LocalTime value) {
        this.issueTime = value;
    }

    public LocalDate getTaxPointDate() {
        return taxPointDate;
    }

    public void setTaxPointDate(LocalDate value) {
        this.taxPointDate = value;
    }
    
    public List<String> getNote() {
        if (note == null) {
            note = new ArrayList<String>();
        }
        return this.note;
    }

    public void setNote(List<String> note) {
        this.note = note;
    }

    
    public String getDocumentCurrencyCode() {
        return documentCurrencyCode;
    }

    public void setDocumentCurrencyCode(String value) {
        this.documentCurrencyCode = value;
    }

  
    public String getTaxCurrencyCode() {
        return taxCurrencyCode;
    }

    public void setTaxCurrencyCode(String value) {
        this.taxCurrencyCode = value;
    }

 
    public String getPricingCurrencyCode() {
        return pricingCurrencyCode;
    }

    public void setPricingCurrencyCode(String value) {
        this.pricingCurrencyCode = value;
    }

 
    public String getPaymentCurrencyCode() {
        return paymentCurrencyCode;
    }

    public void setPaymentCurrencyCode(String value) {
        this.paymentCurrencyCode = value;
    }


    public String getPaymentAlternativeCurrencyCode() {
        return paymentAlternativeCurrencyCode;
    }

    public void setPaymentAlternativeCurrencyCode(String value) {
        this.paymentAlternativeCurrencyCode = value;
    }


    public String getAccountingCostCode() {
        return accountingCostCode;
    }

    public void setAccountingCostCode(String value) {
        this.accountingCostCode = value;
    }

    public String getAccountingCost() {
        return accountingCost;
    }

    public void setAccountingCost(String value) {
        this.accountingCost = value;
    }

   
    public BigDecimal getLineCountNumeric() {
        return lineCountNumeric;
    }

    public void setLineCountNumeric(BigDecimal value) {
        this.lineCountNumeric = value;
    }

    public List<PeriodEntity> getInvoicePeriod() {
        if (invoicePeriod == null) {
            invoicePeriod = new ArrayList<PeriodEntity>();
        }
        return this.invoicePeriod;
    }

    public void setInvoicePeriod(List<PeriodEntity> invoicePeriod) {
        this.invoicePeriod = invoicePeriod;
    }
  
    public List<ResponseEntity> getDiscrepancyResponse() {
        if (discrepancyResponse == null) {
            discrepancyResponse = new ArrayList<ResponseEntity>();
        }
        return this.discrepancyResponse;
    }

    public void setDiscrepancyResponse(List<ResponseEntity> discrepancyResponse) {
        this.discrepancyResponse = discrepancyResponse;
    }
   
    public OrderReferenceEntity getOrderReference() {
        return orderReference;
    }

    public void setOrderReference(OrderReferenceEntity value) {
        this.orderReference = value;
    }
    public List<BillingReferenceEntity> getBillingReference() {
        if (billingReference == null) {
            billingReference = new ArrayList<BillingReferenceEntity>();
        }
        return this.billingReference;
    }

    public void setBillingReference(List<BillingReferenceEntity> billingReference) {
        this.billingReference = billingReference;
    }

    public List<DocumentReferenceEntity> getDespatchDocumentReference() {
        if (despatchDocumentReference == null) {
            despatchDocumentReference = new ArrayList<DocumentReferenceEntity>();
        }
        return this.despatchDocumentReference;
    }

    public void setDespatchDocumentReference(List<DocumentReferenceEntity> despatchDocumentReference) {
        this.despatchDocumentReference = despatchDocumentReference;
    }


    public List<DocumentReferenceEntity> getReceiptDocumentReference() {
        if (receiptDocumentReference == null) {
            receiptDocumentReference = new ArrayList<DocumentReferenceEntity>();
        }
        return this.receiptDocumentReference;
    }

    public void setReceiptDocumentReference(List<DocumentReferenceEntity> receiptDocumentReference) {
        this.receiptDocumentReference = receiptDocumentReference;
    }  
    public List<DocumentReferenceEntity> getContractDocumentReference() {
        if (contractDocumentReference == null) {
            contractDocumentReference = new ArrayList<DocumentReferenceEntity>();
        }
        return this.contractDocumentReference;
    }

    public void setContractDocumentReference(List<DocumentReferenceEntity> contractDocumentReference) {
        this.contractDocumentReference = contractDocumentReference;
    }

    public List<DocumentReferenceEntity> getAdditionalDocumentReference() {
        if (additionalDocumentReference == null) {
            additionalDocumentReference = new ArrayList<DocumentReferenceEntity>();
        }
        return this.additionalDocumentReference;
    }

    public void setAdditionalDocumentReference(List<DocumentReferenceEntity> additionalDocumentReference) {
        this.additionalDocumentReference = additionalDocumentReference;
    }
    
    public List<SignatureEntity> getSignature() {
        if (signature == null) {
            signature = new ArrayList<SignatureEntity>();
        }
        return this.signature;
    }

    public void setSignature(List<SignatureEntity> signature) {
        this.signature = signature;
    }

    @ManyToOne(targetEntity = SupplierPartyEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ACCOUNTINGSUPPLIERPARTY_CRED_0")
    public SupplierPartyEntity getAccountingSupplierParty() {
        return accountingSupplierParty;
    }

    public void setAccountingSupplierParty(SupplierPartyEntity value) {
        this.accountingSupplierParty = value;
    }

    @ManyToOne(targetEntity = CustomerPartyType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ACCOUNTINGCUSTOMERPARTY_CRED_0")
    public CustomerPartyType getAccountingCustomerParty() {
        return accountingCustomerParty;
    }

    public void setAccountingCustomerParty(CustomerPartyType value) {
        this.accountingCustomerParty = value;
    }

    @ManyToOne(targetEntity = PartyEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PAYEEPARTY_CREDITNOTETYPE_HJ_0")
    public PartyEntity getPayeeParty() {
        return payeeParty;
    }

    public void setPayeeParty(PartyEntity value) {
        this.payeeParty = value;
    }

    @ManyToOne(targetEntity = PartyEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TAXREPRESENTATIVEPARTY_CREDI_0")
    public PartyEntity getTaxRepresentativeParty() {
        return taxRepresentativeParty;
    }

    public void setTaxRepresentativeParty(PartyEntity value) {
        this.taxRepresentativeParty = value;
    }

    @ManyToOne(targetEntity = ExchangeRateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TAXEXCHANGERATE_CREDITNOTETY_0")
    public ExchangeRateType getTaxExchangeRate() {
        return taxExchangeRate;
    }

    public void setTaxExchangeRate(ExchangeRateType value) {
        this.taxExchangeRate = value;
    }

    @ManyToOne(targetEntity = ExchangeRateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PRICINGEXCHANGERATE_CREDITNO_0")
    public ExchangeRateType getPricingExchangeRate() {
        return pricingExchangeRate;
    }

    public void setPricingExchangeRate(ExchangeRateType value) {
        this.pricingExchangeRate = value;
    }

    @ManyToOne(targetEntity = ExchangeRateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PAYMENTEXCHANGERATE_CREDITNO_0")
    public ExchangeRateType getPaymentExchangeRate() {
        return paymentExchangeRate;
    }

    public void setPaymentExchangeRate(ExchangeRateType value) {
        this.paymentExchangeRate = value;
    }

    @ManyToOne(targetEntity = ExchangeRateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PAYMENTALTERNATIVEEXCHANGERA_2")
    public ExchangeRateType getPaymentAlternativeExchangeRate() {
        return paymentAlternativeExchangeRate;
    }

    public void setPaymentAlternativeExchangeRate(ExchangeRateType value) {
        this.paymentAlternativeExchangeRate = value;
    }

    @OneToMany(targetEntity = AllowanceChargeEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ALLOWANCECHARGE_CREDITNOTETY_0")
    public List<AllowanceChargeEntity> getAllowanceCharge() {
        if (allowanceCharge == null) {
            allowanceCharge = new ArrayList<AllowanceChargeEntity>();
        }
        return this.allowanceCharge;
    }

    public void setAllowanceCharge(List<AllowanceChargeEntity> allowanceCharge) {
        this.allowanceCharge = allowanceCharge;
    }

    @OneToMany(targetEntity = TaxTotalEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TAXTOTAL_CREDITNOTETYPE_OFID")
    public List<TaxTotalEntity> getTaxTotal() {
        if (taxTotal == null) {
            taxTotal = new ArrayList<TaxTotalEntity>();
        }
        return this.taxTotal;
    }

    public void setTaxTotal(List<TaxTotalEntity> taxTotal) {
        this.taxTotal = taxTotal;
    }

    @ManyToOne(targetEntity = MonetaryTotalEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LEGALMONETARYTOTAL_CREDITNOT_0")
    public MonetaryTotalEntity getLegalMonetaryTotal() {
        return legalMonetaryTotal;
    }

    public void setLegalMonetaryTotal(MonetaryTotalEntity value) {
        this.legalMonetaryTotal = value;
    }

    @OneToMany(targetEntity = CreditNoteLineEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CREDITNOTELINE_CREDITNOTETYP_0")
    public List<CreditNoteLineEntity> getCreditNoteLine() {
        if (creditNoteLine == null) {
            creditNoteLine = new ArrayList<CreditNoteLineEntity>();
        }
        return this.creditNoteLine;
    }

    public void setCreditNoteLine(List<CreditNoteLineEntity> creditNoteLine) {
        this.creditNoteLine = creditNoteLine;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
