//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "OrderLineType")
@Table(name = "ORDERLINETYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class OrderLineType {

    protected SubstitutionStatusCodeTypeCommBas substitutionStatusCode;
    protected NoteType note;
    protected LineItemType lineItem;
    protected List<LineItemType> sellerProposedSubstituteLineItem;
    protected List<LineItemType> sellerSubstitutedLineItem;
    protected List<LineItemType> buyerProposedSubstituteLineItem;
    protected LineReferenceEntity catalogueLineReference;
    protected LineReferenceEntity quotationLineReference;
    protected List<DocumentReferenceEntity> documentReference;
    protected String id;

    @ManyToOne(targetEntity = SubstitutionStatusCodeTypeCommBas.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SUBSTITUTIONSTATUSCODE_ORDER_0")
    public SubstitutionStatusCodeTypeCommBas getSubstitutionStatusCode() {
        return substitutionStatusCode;
    }

    public void setSubstitutionStatusCode(SubstitutionStatusCodeTypeCommBas value) {
        this.substitutionStatusCode = value;
    }

    @ManyToOne(targetEntity = NoteType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NOTE_ORDERLINETYPE_OFID")
    public NoteType getNote() {
        return note;
    }

    public void setNote(NoteType value) {
        this.note = value;
    }

    @ManyToOne(targetEntity = LineItemType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LINEITEM_ORDERLINETYPE_OFID")
    public LineItemType getLineItem() {
        return lineItem;
    }

    public void setLineItem(LineItemType value) {
        this.lineItem = value;
    }

    @OneToMany(targetEntity = LineItemType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SELLERPROPOSEDSUBSTITUTELINE_2")
    public List<LineItemType> getSellerProposedSubstituteLineItem() {
        if (sellerProposedSubstituteLineItem == null) {
            sellerProposedSubstituteLineItem = new ArrayList<LineItemType>();
        }
        return this.sellerProposedSubstituteLineItem;
    }

    public void setSellerProposedSubstituteLineItem(List<LineItemType> sellerProposedSubstituteLineItem) {
        this.sellerProposedSubstituteLineItem = sellerProposedSubstituteLineItem;
    }

    @OneToMany(targetEntity = LineItemType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SELLERSUBSTITUTEDLINEITEM_OR_0")
    public List<LineItemType> getSellerSubstitutedLineItem() {
        if (sellerSubstitutedLineItem == null) {
            sellerSubstitutedLineItem = new ArrayList<LineItemType>();
        }
        return this.sellerSubstitutedLineItem;
    }

    public void setSellerSubstitutedLineItem(List<LineItemType> sellerSubstitutedLineItem) {
        this.sellerSubstitutedLineItem = sellerSubstitutedLineItem;
    }

    @OneToMany(targetEntity = LineItemType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "BUYERPROPOSEDSUBSTITUTELINEI_1")
    public List<LineItemType> getBuyerProposedSubstituteLineItem() {
        if (buyerProposedSubstituteLineItem == null) {
            buyerProposedSubstituteLineItem = new ArrayList<LineItemType>();
        }
        return this.buyerProposedSubstituteLineItem;
    }

    public void setBuyerProposedSubstituteLineItem(List<LineItemType> buyerProposedSubstituteLineItem) {
        this.buyerProposedSubstituteLineItem = buyerProposedSubstituteLineItem;
    }

    @ManyToOne(targetEntity = LineReferenceEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CATALOGUELINEREFERENCE_ORDER_0")
    public LineReferenceEntity getCatalogueLineReference() {
        return catalogueLineReference;
    }

    public void setCatalogueLineReference(LineReferenceEntity value) {
        this.catalogueLineReference = value;
    }

    @ManyToOne(targetEntity = LineReferenceEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "QUOTATIONLINEREFERENCE_ORDER_0")
    public LineReferenceEntity getQuotationLineReference() {
        return quotationLineReference;
    }

    public void setQuotationLineReference(LineReferenceEntity value) {
        this.quotationLineReference = value;
    }

    @OneToMany(targetEntity = DocumentReferenceEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DOCUMENTREFERENCE_ORDERLINET_0")
    public List<DocumentReferenceEntity> getDocumentReference() {
        if (documentReference == null) {
            documentReference = new ArrayList<DocumentReferenceEntity>();
        }
        return this.documentReference;
    }

    public void setDocumentReference(List<DocumentReferenceEntity> documentReference) {
        this.documentReference = documentReference;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
