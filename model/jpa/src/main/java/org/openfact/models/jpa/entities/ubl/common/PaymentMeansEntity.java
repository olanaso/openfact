//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;

@Entity
@Table(name = "PAYMENTMEANS")
public class PaymentMeansEntity {

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    protected String id;

    @Column(name = "ID_UBL")
    protected String ID;

    @Column(name = "PAYMENTMEANSCODE")
    protected String paymentMeansCode;

    @Column(name = "PAYMENTDUEDATE")
    @Type(type = "LocalDate, java.time.LocalDate")
    protected LocalDate paymentDueDate;

    @Column(name = "PAYMENTCHANNELCODE")
    protected String paymentChannelCode;

    @Column(name = "INSTRUCTIONID")
    protected String instructionID;

    @ElementCollection
    @Column(name = "VALUE")
    @CollectionTable(name = "PAYMENTMEANS_INSTRUCTIONOTE", joinColumns = {
            @JoinColumn(name = "PAYMENTMEANS_ID") })
    protected List<String> instructionNote = new ArrayList<>();

    @ElementCollection
    @Column(name = "VALUE")
    @CollectionTable(name = "PAYMENTMEANS_PAYMENTID", joinColumns = { @JoinColumn(name = "PAYMENTMEANS_ID") })
    protected List<String> paymentID = new ArrayList<>();

    @ManyToOne(targetEntity = CardAccountEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CARDACCOUNT_PAYMENTMEANS")
    protected CardAccountEntity cardAccount = new CardAccountEntity();

    @ManyToOne(targetEntity = FinancialAccountEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PAYERFINANCIALACCOUNT_PAYMENTMEANS")
    protected FinancialAccountEntity payerFinancialAccount = new FinancialAccountEntity();

    @ManyToOne(targetEntity = FinancialAccountEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PAYEEFINANCIALACCOUNT_PAYMENTMEANS")
    protected FinancialAccountEntity payeeFinancialAccount = new FinancialAccountEntity();

    @ManyToOne(targetEntity = CreditAccountEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CREDITACCOUNT_PAYMENTMEANS")
    protected CreditAccountEntity creditAccount = new CreditAccountEntity();

    /**
     * @return the id
     */
    public String getId() {
        return id;
    }

    /**
     * @param id
     *            the id to set
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * @return the iD
     */
    public String getID() {
        return ID;
    }

    /**
     * @param iD
     *            the iD to set
     */
    public void setID(String iD) {
        ID = iD;
    }

    /**
     * @return the paymentMeansCode
     */
    public String getPaymentMeansCode() {
        return paymentMeansCode;
    }

    /**
     * @param paymentMeansCode
     *            the paymentMeansCode to set
     */
    public void setPaymentMeansCode(String paymentMeansCode) {
        this.paymentMeansCode = paymentMeansCode;
    }

    /**
     * @return the paymentDueDate
     */
    public LocalDate getPaymentDueDate() {
        return paymentDueDate;
    }

    /**
     * @param paymentDueDate
     *            the paymentDueDate to set
     */
    public void setPaymentDueDate(LocalDate paymentDueDate) {
        this.paymentDueDate = paymentDueDate;
    }

    /**
     * @return the paymentChannelCode
     */
    public String getPaymentChannelCode() {
        return paymentChannelCode;
    }

    /**
     * @param paymentChannelCode
     *            the paymentChannelCode to set
     */
    public void setPaymentChannelCode(String paymentChannelCode) {
        this.paymentChannelCode = paymentChannelCode;
    }

    /**
     * @return the instructionID
     */
    public String getInstructionID() {
        return instructionID;
    }

    /**
     * @param instructionID
     *            the instructionID to set
     */
    public void setInstructionID(String instructionID) {
        this.instructionID = instructionID;
    }

    /**
     * @return the instructionNote
     */
    public List<String> getInstructionNote() {
        return instructionNote;
    }

    /**
     * @param instructionNote
     *            the instructionNote to set
     */
    public void setInstructionNote(List<String> instructionNote) {
        this.instructionNote = instructionNote;
    }

    /**
     * @return the paymentID
     */
    public List<String> getPaymentID() {
        return paymentID;
    }

    /**
     * @param paymentID
     *            the paymentID to set
     */
    public void setPaymentID(List<String> paymentID) {
        this.paymentID = paymentID;
    }

    /**
     * @return the cardAccount
     */
    public CardAccountEntity getCardAccount() {
        return cardAccount;
    }

    /**
     * @param cardAccount
     *            the cardAccount to set
     */
    public void setCardAccount(CardAccountEntity cardAccount) {
        this.cardAccount = cardAccount;
    }

    /**
     * @return the payerFinancialAccount
     */
    public FinancialAccountEntity getPayerFinancialAccount() {
        return payerFinancialAccount;
    }

    /**
     * @param payerFinancialAccount
     *            the payerFinancialAccount to set
     */
    public void setPayerFinancialAccount(FinancialAccountEntity payerFinancialAccount) {
        this.payerFinancialAccount = payerFinancialAccount;
    }

    /**
     * @return the payeeFinancialAccount
     */
    public FinancialAccountEntity getPayeeFinancialAccount() {
        return payeeFinancialAccount;
    }

    /**
     * @param payeeFinancialAccount
     *            the payeeFinancialAccount to set
     */
    public void setPayeeFinancialAccount(FinancialAccountEntity payeeFinancialAccount) {
        this.payeeFinancialAccount = payeeFinancialAccount;
    }

    /**
     * @return the creditAccount
     */
    public CreditAccountEntity getCreditAccount() {
        return creditAccount;
    }

    /**
     * @param creditAccount
     *            the creditAccount to set
     */
    public void setCreditAccount(CreditAccountEntity creditAccount) {
        this.creditAccount = creditAccount;
    }

}
