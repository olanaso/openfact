//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "PaymentMeansType")
@Table(name = "PAYMENTMEANSTYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class PaymentMeansEntity {

    protected String ID;
    protected String paymentMeansCode;
    protected LocalDate paymentDueDate;
    protected String paymentChannelCode;
    protected String instructionID;
    protected List<String> instructionNote;
    protected List<String> paymentID;
    protected CardAccountEntity cardAccount;
    protected FinancialAccountEntity payerFinancialAccount;
    protected FinancialAccountEntity payeeFinancialAccount;
    protected CreditAccountEntity creditAccount;
    protected String id;

    @Column(name = "ID")
    public String getID() {
        return ID;
    }

    public void setID(String value) {
        this.ID = value;
    }

    @Column(name = "PAYMENTMEANSCODE")
    public String getPaymentMeansCode() {
        return paymentMeansCode;
    }

    public void setPaymentMeansCode(String value) {
        this.paymentMeansCode = value;
    }

    @Column(name = "PAYMENTDUEDATE_PAYMENTMEANST_0")
    public LocalDate getPaymentDueDate() {
        return paymentDueDate;
    }

    public void setPaymentDueDate(LocalDate value) {
        this.paymentDueDate = value;
    }

    @Column(name = "PAYMENTCHANNELCODE_PAYMENTME_0")
    public String getPaymentChannelCode() {
        return paymentChannelCode;
    }

    public void setPaymentChannelCode(String value) {
        this.paymentChannelCode = value;
    }

    @Column(name = "INSTRUCTIONID_PAYMENTMEANSTY_0")
    public String getInstructionID() {
        return instructionID;
    }

    public void setInstructionID(String value) {
        this.instructionID = value;
    }

    @Column(name = "INSTRUCTIONNOTE_PAYMENTMEANS_0")
    public List<String> getInstructionNote() {
        if (instructionNote == null) {
            instructionNote = new ArrayList<String>();
        }
        return this.instructionNote;
    }

    public void setInstructionNote(List<String> instructionNote) {
        this.instructionNote = instructionNote;
    }

    @Column(name = "PAYMENTID_PAYMENTMEANSTYPE_H_0")
    public List<String> getPaymentID() {
        if (paymentID == null) {
            paymentID = new ArrayList<String>();
        }
        return this.paymentID;
    }

    public void setPaymentID(List<String> paymentID) {
        this.paymentID = paymentID;
    }

    @ManyToOne(targetEntity = CardAccountEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CARDACCOUNT_PAYMENTMEANSTYPE_0")
    public CardAccountEntity getCardAccount() {
        return cardAccount;
    }

    public void setCardAccount(CardAccountEntity value) {
        this.cardAccount = value;
    }

    @ManyToOne(targetEntity = FinancialAccountEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PAYERFINANCIALACCOUNT_PAYMEN_0")
    public FinancialAccountEntity getPayerFinancialAccount() {
        return payerFinancialAccount;
    }

    public void setPayerFinancialAccount(FinancialAccountEntity value) {
        this.payerFinancialAccount = value;
    }

    @ManyToOne(targetEntity = FinancialAccountEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PAYEEFINANCIALACCOUNT_PAYMEN_0")
    public FinancialAccountEntity getPayeeFinancialAccount() {
        return payeeFinancialAccount;
    }

    public void setPayeeFinancialAccount(FinancialAccountEntity value) {
        this.payeeFinancialAccount = value;
    }

    @ManyToOne(targetEntity = CreditAccountEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CREDITACCOUNT_PAYMENTMEANSTY_0")
    public CreditAccountEntity getCreditAccount() {
        return creditAccount;
    }

    public void setCreditAccount(CreditAccountEntity value) {
        this.creditAccount = value;
    }

    @Id
    @Column(name = "ID_OFID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
