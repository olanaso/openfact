/*******************************************************************************
 * Copyright 2016 Sistcoop, Inc. and/or its affiliates
 * and other contributors as indicated by the @author tags.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.io.Serializable;

@Entity
@Table(name = "ATTACHED_UBL_DOCUMENT")
@IdClass(AttachedUBLDocumentEntity.Key.class)
@NamedQueries(value = {
        @NamedQuery(name = "deleteAttachedUblDocumentByOrganization", query = "delete from AttachedUBLDocumentEntity at where at.ublDocument IN (select doc from UBLDocumentEntity doc where doc.organizationId=:organizationId)")
})
public class AttachedUBLDocumentEntity {

    @Id
    @NotNull
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(foreignKey = @ForeignKey, name = "UBL_DOCUMENT_ID")
    protected UBLDocumentEntity ublDocument;

    @Id
    @NotNull
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(foreignKey = @ForeignKey, name = "ATTACHED_UBL_DOCUMENT_ID")
    protected UBLDocumentEntity attachedUblDocument;

    public UBLDocumentEntity getUblDocument() {
        return ublDocument;
    }

    public void setUblDocument(UBLDocumentEntity ublDocument) {
        this.ublDocument = ublDocument;
    }

    public UBLDocumentEntity getAttachedUblDocument() {
        return attachedUblDocument;
    }

    public void setAttachedUblDocument(UBLDocumentEntity attachedUblDocument) {
        this.attachedUblDocument = attachedUblDocument;
    }

    public static class Key implements Serializable {

        protected UBLDocumentEntity ublDocument;

        protected UBLDocumentEntity attachedUblDocument;

        public Key() {
        }

        public Key(UBLDocumentEntity ublDocument, UBLDocumentEntity attachedUblDocument) {
            this.ublDocument = ublDocument;
            this.attachedUblDocument = attachedUblDocument;
        }

        public UBLDocumentEntity getUblDocument() {
            return ublDocument;
        }

        public UBLDocumentEntity getAttachedUblDocument() {
            return attachedUblDocument;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;

            AttachedUBLDocumentEntity.Key key = (AttachedUBLDocumentEntity.Key) o;

            if (ublDocument != null ? !ublDocument.getId().equals(key.ublDocument != null ? key.ublDocument.getId() : null) : key.ublDocument != null)
                return false;
            if (attachedUblDocument != null ? !attachedUblDocument.getId().equals(key.attachedUblDocument != null ? key.attachedUblDocument.getId() : null) : key.attachedUblDocument != null)
                return false;

            return true;
        }

        @Override
        public int hashCode() {
            int result = ublDocument != null ? ublDocument.getId().hashCode() : 0;
            result = 31 * result + (attachedUblDocument != null ? attachedUblDocument.hashCode() : 0);
            return result;
        }
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null) return false;
        if (!(o instanceof OrganizationAttributeEntity)) return false;

        AttachedUBLDocumentEntity key = (AttachedUBLDocumentEntity) o;

        if (ublDocument != null ? !ublDocument.getId().equals(key.ublDocument != null ? key.ublDocument.getId() : null) : key.ublDocument != null)
            return false;
        if (attachedUblDocument != null ? !attachedUblDocument.getId().equals(key.attachedUblDocument != null ? key.attachedUblDocument.getId() : null) : key.attachedUblDocument != null)
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        int result = ublDocument != null ? ublDocument.getId().hashCode() : 0;
        result = 31 * result + (attachedUblDocument != null ? attachedUblDocument.hashCode() : 0);
        return result;
    }

}
