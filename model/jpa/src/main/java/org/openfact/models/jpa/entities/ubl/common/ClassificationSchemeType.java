//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "ClassificationSchemeType")
@Table(name = "CLASSIFICATIONSCHEMETYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class ClassificationSchemeType {

    protected IDType ID;
    protected UUIDType uuid;
    protected LastRevisionDateType lastRevisionDate;
    protected LastRevisionTimeType lastRevisionTime;
    protected NoteType note;
    protected NameTypeCommBas name;
    protected List<DescriptionType> description;
    protected AgencyIDType agencyID;
    protected AgencyNameType agencyName;
    protected VersionIDType versionID;
    protected URIType uri;
    protected SchemeURIType schemeURI;
    protected LanguageIDType languageID;
    protected List<ClassificationCategoryType> classificationCategory;
    protected String id;

    @ManyToOne(targetEntity = IDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ID_CLASSIFICATIONSCHEMETYPE__0")
    public IDType getID() {
        return ID;
    }

    public void setID(IDType value) {
        this.ID = value;
    }

    @ManyToOne(targetEntity = UUIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "UUID_CLASSIFICATIONSCHEMETYP_0")
    public UUIDType getUUID() {
        return uuid;
    }

    public void setUUID(UUIDType value) {
        this.uuid = value;
    }

    @ManyToOne(targetEntity = LastRevisionDateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LASTREVISIONDATE_CLASSIFICAT_0")
    public LastRevisionDateType getLastRevisionDate() {
        return lastRevisionDate;
    }

    public void setLastRevisionDate(LastRevisionDateType value) {
        this.lastRevisionDate = value;
    }

    @ManyToOne(targetEntity = LastRevisionTimeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LASTREVISIONTIME_CLASSIFICAT_0")
    public LastRevisionTimeType getLastRevisionTime() {
        return lastRevisionTime;
    }

    public void setLastRevisionTime(LastRevisionTimeType value) {
        this.lastRevisionTime = value;
    }

    @ManyToOne(targetEntity = NoteType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NOTE_CLASSIFICATIONSCHEMETYP_0")
    public NoteType getNote() {
        return note;
    }

    public void setNote(NoteType value) {
        this.note = value;
    }

    @ManyToOne(targetEntity = NameTypeCommBas.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NAME__CLASSIFICATIONSCHEMETY_0")
    public NameTypeCommBas getName() {
        return name;
    }

    public void setName(NameTypeCommBas value) {
        this.name = value;
    }

    @OneToMany(targetEntity = DescriptionType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DESCRIPTION_CLASSIFICATIONSC_0")
    public List<DescriptionType> getDescription() {
        if (description == null) {
            description = new ArrayList<DescriptionType>();
        }
        return this.description;
    }

    public void setDescription(List<DescriptionType> description) {
        this.description = description;
    }

    @ManyToOne(targetEntity = AgencyIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "AGENCYID_CLASSIFICATIONSCHEM_0")
    public AgencyIDType getAgencyID() {
        return agencyID;
    }

    public void setAgencyID(AgencyIDType value) {
        this.agencyID = value;
    }

    @ManyToOne(targetEntity = AgencyNameType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "AGENCYNAME_CLASSIFICATIONSCH_0")
    public AgencyNameType getAgencyName() {
        return agencyName;
    }

    public void setAgencyName(AgencyNameType value) {
        this.agencyName = value;
    }

    @ManyToOne(targetEntity = VersionIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "VERSIONID_CLASSIFICATIONSCHE_0")
    public VersionIDType getVersionID() {
        return versionID;
    }

    public void setVersionID(VersionIDType value) {
        this.versionID = value;
    }

    @ManyToOne(targetEntity = URIType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "URI_CLASSIFICATIONSCHEMETYPE_0")
    public URIType getURI() {
        return uri;
    }

    public void setURI(URIType value) {
        this.uri = value;
    }

    @ManyToOne(targetEntity = SchemeURIType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SCHEMEURI_CLASSIFICATIONSCHE_0")
    public SchemeURIType getSchemeURI() {
        return schemeURI;
    }

    public void setSchemeURI(SchemeURIType value) {
        this.schemeURI = value;
    }

    @ManyToOne(targetEntity = LanguageIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LANGUAGEID_CLASSIFICATIONSCH_0")
    public LanguageIDType getLanguageID() {
        return languageID;
    }

    public void setLanguageID(LanguageIDType value) {
        this.languageID = value;
    }

    @OneToMany(targetEntity = ClassificationCategoryType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CLASSIFICATIONCATEGORY_CLASS_0")
    public List<ClassificationCategoryType> getClassificationCategory() {
        if (classificationCategory == null) {
            classificationCategory = new ArrayList<ClassificationCategoryType>();
        }
        return this.classificationCategory;
    }

    public void setClassificationCategory(List<ClassificationCategoryType> classificationCategory) {
        this.classificationCategory = classificationCategory;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
