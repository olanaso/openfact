//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "PartyType")
@Table(name = "PARTYTYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class PartyEntity {

    protected boolean markCareIndicator;
    protected boolean markAttentionIndicator;
    protected String websiteURI;
    protected String logoReferenceID;
    protected String endpointID;
    protected List<String> partyIdentification;
    protected List<String> partyName;
    protected LanguageEntity language;
    protected AddressEntity postalAddress;
    protected LocationCommAggEntity physicalLocation;
    protected List<PartyTaxSchemeEntity> partyTaxScheme;
    protected List<PartyLegalEntity> partyLegalEntity;
    protected ContactEntity contact;
    protected PersonEntity person;
    protected PartyEntity agentParty;
    protected String id;

    @Column(name = "MARK_CARE_INDICATOR")
    public boolean getMarkCareIndicator() {
        return markCareIndicator;
    }

    public void setMarkCareIndicator(boolean value) {
        this.markCareIndicator = value;
    }

    @Column(name = "MARK_ATTENTION_INDICATOR")
    public boolean getMarkAttentionIndicator() {
        return markAttentionIndicator;
    }

    public void setMarkAttentionIndicator(boolean value) {
        this.markAttentionIndicator = value;
    }

    @Column(name = "WEBSITE_URI")
    public String getWebsiteURI() {
        return websiteURI;
    }

    public void setWebsiteURI(String value) {
        this.websiteURI = value;
    }

    @Column(name = "LOGO_REFERENCE_ID")
    public String getLogoReferenceID() {
        return logoReferenceID;
    }

    public void setLogoReferenceID(String value) {
        this.logoReferenceID = value;
    }

    @Column(name = "END_POINT_ID")
    public String getEndpointID() {
        return endpointID;
    }

    public void setEndpointID(String value) {
        this.endpointID = value;
    }

    @Column(name = "PARTY_IDENTIFICATION")
    public List<String> getPartyIdentification() {
        if (partyIdentification == null) {
            partyIdentification = new ArrayList<String>();
        }
        return this.partyIdentification;
    }

    public void setPartyIdentification(List<String> partyIdentification) {
        this.partyIdentification = partyIdentification;
    }

    @Column(name = "PARTY_NAME")
    public List<String> getPartyName() {
        if (partyName == null) {
            partyName = new ArrayList<String>();
        }
        return this.partyName;
    }

    public void setPartyName(List<String> partyName) {
        this.partyName = partyName;
    }

    @ManyToOne(targetEntity = LanguageEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LANGUAGE__PARTYTYPE_OFID")
    public LanguageEntity getLanguage() {
        return language;
    }

    public void setLanguage(LanguageEntity value) {
        this.language = value;
    }

    @ManyToOne(targetEntity = AddressEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "POSTALADDRESS_PARTYTYPE_OFID")
    public AddressEntity getPostalAddress() {
        return postalAddress;
    }

    public void setPostalAddress(AddressEntity value) {
        this.postalAddress = value;
    }

    @ManyToOne(targetEntity = LocationCommAggEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PHYSICALLOCATION")
    public LocationCommAggEntity getPhysicalLocation() {
        return physicalLocation;
    }

    public void setPhysicalLocation(LocationCommAggEntity value) {
        this.physicalLocation = value;
    }

    @OneToMany(targetEntity = PartyTaxSchemeEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PARTYTAXSCHEME")
    public List<PartyTaxSchemeEntity> getPartyTaxScheme() {
        if (partyTaxScheme == null) {
            partyTaxScheme = new ArrayList<PartyTaxSchemeEntity>();
        }
        return this.partyTaxScheme;
    }

    public void setPartyTaxScheme(List<PartyTaxSchemeEntity> partyTaxScheme) {
        this.partyTaxScheme = partyTaxScheme;
    }

    @OneToMany(targetEntity = PartyLegalEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PARTYLEGALENTITY")
    public List<PartyLegalEntity> getPartyLegalEntity() {
        if (partyLegalEntity == null) {
            partyLegalEntity = new ArrayList<PartyLegalEntity>();
        }
        return this.partyLegalEntity;
    }

    public void setPartyLegalEntity(List<PartyLegalEntity> partyLegalEntity) {
        this.partyLegalEntity = partyLegalEntity;
    }

    @ManyToOne(targetEntity = ContactEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CONTACT")
    public ContactEntity getContact() {
        return contact;
    }

    public void setContact(ContactEntity value) {
        this.contact = value;
    }

    @ManyToOne(targetEntity = PersonEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PERSON")
    public PersonEntity getPerson() {
        return person;
    }

    public void setPerson(PersonEntity value) {
        this.person = value;
    }

    @ManyToOne(targetEntity = PartyEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "AGENTPARTY")
    public PartyEntity getAgentParty() {
        return agentParty;
    }

    public void setAgentParty(PartyEntity value) {
        this.agentParty = value;
    }

    @Id
    @Column(name = "ID_OFID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
