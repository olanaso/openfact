//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity
@Table(name = "ATTACHMENT")
public class AttachmentEntity {

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    protected String id;

    @ManyToOne(targetEntity = BinaryObjectEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "EMBEDDEDDOCUMENTBINARYOBJECT_ATTACHMENT")
    protected BinaryObjectEntity embeddedDocumentBinaryObject;

    @ManyToOne(targetEntity = ExternalReferenceEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "EXTERNALREFERENCE_ATTACHMENT")
    protected ExternalReferenceEntity externalReference;

    /**
     * @return the id
     */
    public String getId() {
        return id;
    }

    /**
     * @param id
     *            the id to set
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * @return the embeddedDocumentBinaryObject
     */
    public BinaryObjectEntity getEmbeddedDocumentBinaryObject() {
        return embeddedDocumentBinaryObject;
    }

    /**
     * @param embeddedDocumentBinaryObject
     *            the embeddedDocumentBinaryObject to set
     */
    public void setEmbeddedDocumentBinaryObject(BinaryObjectEntity embeddedDocumentBinaryObject) {
        if (embeddedDocumentBinaryObject == null) {
            this.embeddedDocumentBinaryObject = new EmbeddedDocumentBinaryObjectEntity();
        }
        this.embeddedDocumentBinaryObject = embeddedDocumentBinaryObject;
    }

    /**
     * @return the externalReference
     */
    public ExternalReferenceEntity getExternalReference() {
        return externalReference;
    }

    /**
     * @param externalReference
     *            the externalReference to set
     */
    public void setExternalReference(ExternalReferenceEntity externalReference) {
        if (externalReference == null) {
            this.externalReference = new ExternalReferenceEntity();
        }
        this.externalReference = externalReference;
    }

}
