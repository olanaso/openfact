//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.openfact.models.jpa.entities.ubl.common.CustomizationIDType;
import org.openfact.models.jpa.entities.ubl.common.DocumentResponseType;
import org.openfact.models.jpa.entities.ubl.common.IDType;
import org.openfact.models.jpa.entities.ubl.common.IssueDateType;
import org.openfact.models.jpa.entities.ubl.common.IssueTimeType;
import org.openfact.models.jpa.entities.ubl.common.NoteType;
import org.openfact.models.jpa.entities.ubl.common.PartyType;
import org.openfact.models.jpa.entities.ubl.common.ProfileIDType;
import org.openfact.models.jpa.entities.ubl.common.ResponseDateType;
import org.openfact.models.jpa.entities.ubl.common.ResponseTimeType;
import org.openfact.models.jpa.entities.ubl.common.SignatureType;
import org.openfact.models.jpa.entities.ubl.common.UBLExtensionsType;
import org.openfact.models.jpa.entities.ubl.common.UBLVersionIDType;
import org.openfact.models.jpa.entities.ubl.common.UUIDType;
import org.openfact.models.jpa.entities.ubl.common.VersionIDType;

@Entity(name = "ApplicationResponseType")
@Table(name = "APPLICATIONRESPONSETYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class ApplicationResponseType {

    protected UBLExtensionsType ublExtensions;
    protected UBLVersionIDType ublVersionID;
    protected CustomizationIDType customizationID;
    protected ProfileIDType profileID;
    protected IDType ID;
    protected UUIDType uuid;
    protected IssueDateType issueDate;
    protected IssueTimeType issueTime;
    protected ResponseDateType responseDate;
    protected ResponseTimeType responseTime;
    protected List<NoteType> note;
    protected VersionIDType versionID;
    protected List<SignatureType> signature;
    protected PartyType senderParty;
    protected PartyType receiverParty;
    protected List<DocumentResponseType> documentResponse;
    protected String id;

    @ManyToOne(targetEntity = UBLExtensionsType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "UBLEXTENSIONS_APPLICATIONRES_0")
    public UBLExtensionsType getUBLExtensions() {
        return ublExtensions;
    }

    public void setUBLExtensions(UBLExtensionsType value) {
        this.ublExtensions = value;
    }

    @ManyToOne(targetEntity = UBLVersionIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "UBLVERSIONID_APPLICATIONRESP_0")
    public UBLVersionIDType getUBLVersionID() {
        return ublVersionID;
    }

    public void setUBLVersionID(UBLVersionIDType value) {
        this.ublVersionID = value;
    }

    @ManyToOne(targetEntity = CustomizationIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CUSTOMIZATIONID_APPLICATIONR_0")
    public CustomizationIDType getCustomizationID() {
        return customizationID;
    }

    public void setCustomizationID(CustomizationIDType value) {
        this.customizationID = value;
    }

    @ManyToOne(targetEntity = ProfileIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PROFILEID_APPLICATIONRESPONS_0")
    public ProfileIDType getProfileID() {
        return profileID;
    }

    public void setProfileID(ProfileIDType value) {
        this.profileID = value;
    }

    @ManyToOne(targetEntity = IDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ID_APPLICATIONRESPONSETYPE_H_0")
    public IDType getID() {
        return ID;
    }

    public void setID(IDType value) {
        this.ID = value;
    }

    @ManyToOne(targetEntity = UUIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "UUID_APPLICATIONRESPONSETYPE_0")
    public UUIDType getUUID() {
        return uuid;
    }

    public void setUUID(UUIDType value) {
        this.uuid = value;
    }

    @ManyToOne(targetEntity = IssueDateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ISSUEDATE_APPLICATIONRESPONS_0")
    public IssueDateType getIssueDate() {
        return issueDate;
    }

    public void setIssueDate(IssueDateType value) {
        this.issueDate = value;
    }

    @ManyToOne(targetEntity = IssueTimeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ISSUETIME_APPLICATIONRESPONS_0")
    public IssueTimeType getIssueTime() {
        return issueTime;
    }

    public void setIssueTime(IssueTimeType value) {
        this.issueTime = value;
    }

    @ManyToOne(targetEntity = ResponseDateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "RESPONSEDATE_APPLICATIONRESP_0")
    public ResponseDateType getResponseDate() {
        return responseDate;
    }

    public void setResponseDate(ResponseDateType value) {
        this.responseDate = value;
    }

    @ManyToOne(targetEntity = ResponseTimeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "RESPONSETIME_APPLICATIONRESP_0")
    public ResponseTimeType getResponseTime() {
        return responseTime;
    }

    public void setResponseTime(ResponseTimeType value) {
        this.responseTime = value;
    }

    @OneToMany(targetEntity = NoteType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NOTE_APPLICATIONRESPONSETYPE_0")
    public List<NoteType> getNote() {
        if (note == null) {
            note = new ArrayList<NoteType>();
        }
        return this.note;
    }

    public void setNote(List<NoteType> note) {
        this.note = note;
    }

    @ManyToOne(targetEntity = VersionIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "VERSIONID_APPLICATIONRESPONS_0")
    public VersionIDType getVersionID() {
        return versionID;
    }

    public void setVersionID(VersionIDType value) {
        this.versionID = value;
    }

    @OneToMany(targetEntity = SignatureType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SIGNATURE_APPLICATIONRESPONS_0")
    public List<SignatureType> getSignature() {
        if (signature == null) {
            signature = new ArrayList<SignatureType>();
        }
        return this.signature;
    }

    public void setSignature(List<SignatureType> signature) {
        this.signature = signature;
    }

    @ManyToOne(targetEntity = PartyType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SENDERPARTY_APPLICATIONRESPO_0")
    public PartyType getSenderParty() {
        return senderParty;
    }

    public void setSenderParty(PartyType value) {
        this.senderParty = value;
    }

    @ManyToOne(targetEntity = PartyType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "RECEIVERPARTY_APPLICATIONRES_0")
    public PartyType getReceiverParty() {
        return receiverParty;
    }

    public void setReceiverParty(PartyType value) {
        this.receiverParty = value;
    }

    @OneToMany(targetEntity = DocumentResponseType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DOCUMENTRESPONSE_APPLICATION_0")
    public List<DocumentResponseType> getDocumentResponse() {
        if (documentResponse == null) {
            documentResponse = new ArrayList<DocumentResponseType>();
        }
        return this.documentResponse;
    }

    public void setDocumentResponse(List<DocumentResponseType> documentResponse) {
        this.documentResponse = documentResponse;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
