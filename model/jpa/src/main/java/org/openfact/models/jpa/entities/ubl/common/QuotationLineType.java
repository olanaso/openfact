//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.openfact.models.ubl.common.DocumentReferenceType;
import org.openfact.models.ubl.common.IDType;
import org.openfact.models.ubl.common.LineExtensionAmountType;
import org.openfact.models.ubl.common.LineItemType;
import org.openfact.models.ubl.common.NoteType;
import org.openfact.models.ubl.common.QuantityTypeCommBas;
import org.openfact.models.ubl.common.TotalTaxAmountType;

@Entity(name = "QuotationLineType")
@Table(name = "QUOTATIONLINETYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class QuotationLineType {

    protected IDType ID;
    protected NoteType note;
    protected QuantityTypeCommBas quantity;
    protected LineExtensionAmountType lineExtensionAmount;
    protected TotalTaxAmountType totalTaxAmount;
    protected List<DocumentReferenceType> documentReference;
    protected LineItemType lineItem;
    protected List<LineItemType> sellerProposedSubstituteLineItem;
    protected String id;

    @ManyToOne(targetEntity = IDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ID_QUOTATIONLINETYPE_OFID")
    public IDType getID() {
        return ID;
    }

    public void setID(IDType value) {
        this.ID = value;
    }

    @ManyToOne(targetEntity = NoteType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NOTE_QUOTATIONLINETYPE_OFID")
    public NoteType getNote() {
        return note;
    }

    public void setNote(NoteType value) {
        this.note = value;
    }

    @ManyToOne(targetEntity = QuantityTypeCommBas.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "QUANTITY_QUOTATIONLINETYPE_H_0")
    public QuantityTypeCommBas getQuantity() {
        return quantity;
    }

    public void setQuantity(QuantityTypeCommBas value) {
        this.quantity = value;
    }

    @ManyToOne(targetEntity = LineExtensionAmountType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LINEEXTENSIONAMOUNT_QUOTATIO_0")
    public LineExtensionAmountType getLineExtensionAmount() {
        return lineExtensionAmount;
    }

    public void setLineExtensionAmount(LineExtensionAmountType value) {
        this.lineExtensionAmount = value;
    }

    @ManyToOne(targetEntity = TotalTaxAmountType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TOTALTAXAMOUNT_QUOTATIONLINE_0")
    public TotalTaxAmountType getTotalTaxAmount() {
        return totalTaxAmount;
    }

    public void setTotalTaxAmount(TotalTaxAmountType value) {
        this.totalTaxAmount = value;
    }

    @OneToMany(targetEntity = DocumentReferenceType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DOCUMENTREFERENCE_QUOTATIONL_0")
    public List<DocumentReferenceType> getDocumentReference() {
        if (documentReference == null) {
            documentReference = new ArrayList<DocumentReferenceType>();
        }
        return this.documentReference;
    }

    public void setDocumentReference(List<DocumentReferenceType> documentReference) {
        this.documentReference = documentReference;
    }

    @ManyToOne(targetEntity = LineItemType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LINEITEM_QUOTATIONLINETYPE_H_0")
    public LineItemType getLineItem() {
        return lineItem;
    }

    public void setLineItem(LineItemType value) {
        this.lineItem = value;
    }

    @OneToMany(targetEntity = LineItemType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SELLERPROPOSEDSUBSTITUTELINE_1")
    public List<LineItemType> getSellerProposedSubstituteLineItem() {
        if (sellerProposedSubstituteLineItem == null) {
            sellerProposedSubstituteLineItem = new ArrayList<LineItemType>();
        }
        return this.sellerProposedSubstituteLineItem;
    }

    public void setSellerProposedSubstituteLineItem(List<LineItemType> sellerProposedSubstituteLineItem) {
        this.sellerProposedSubstituteLineItem = sellerProposedSubstituteLineItem;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
