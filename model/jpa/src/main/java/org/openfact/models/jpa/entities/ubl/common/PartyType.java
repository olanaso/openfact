//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.openfact.models.ubl.common.AddressType;
import org.openfact.models.ubl.common.ContactType;
import org.openfact.models.ubl.common.EndpointIDType;
import org.openfact.models.ubl.common.LanguageType;
import org.openfact.models.ubl.common.LocationTypeCommAgg;
import org.openfact.models.ubl.common.LogoReferenceIDType;
import org.openfact.models.ubl.common.MarkAttentionIndicatorType;
import org.openfact.models.ubl.common.MarkCareIndicatorType;
import org.openfact.models.ubl.common.PartyIdentificationType;
import org.openfact.models.ubl.common.PartyLegalEntityType;
import org.openfact.models.ubl.common.PartyNameType;
import org.openfact.models.ubl.common.PartyTaxSchemeType;
import org.openfact.models.ubl.common.PartyType;
import org.openfact.models.ubl.common.PersonType;
import org.openfact.models.ubl.common.WebsiteURIType;

@Entity(name = "PartyType")
@Table(name = "PARTYTYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class PartyType {

    protected MarkCareIndicatorType markCareIndicator;
    protected MarkAttentionIndicatorType markAttentionIndicator;
    protected WebsiteURIType websiteURI;
    protected LogoReferenceIDType logoReferenceID;
    protected EndpointIDType endpointID;
    protected List<PartyIdentificationType> partyIdentification;
    protected List<PartyNameType> partyName;
    protected LanguageType language;
    protected AddressType postalAddress;
    protected LocationTypeCommAgg physicalLocation;
    protected List<PartyTaxSchemeType> partyTaxScheme;
    protected List<PartyLegalEntityType> partyLegalEntity;
    protected ContactType contact;
    protected PersonType person;
    protected PartyType agentParty;
    protected String id;

    @ManyToOne(targetEntity = MarkCareIndicatorType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "MARKCAREINDICATOR_PARTYTYPE__0")
    public MarkCareIndicatorType getMarkCareIndicator() {
        return markCareIndicator;
    }

    public void setMarkCareIndicator(MarkCareIndicatorType value) {
        this.markCareIndicator = value;
    }

    @ManyToOne(targetEntity = MarkAttentionIndicatorType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "MARKATTENTIONINDICATOR_PARTY_0")
    public MarkAttentionIndicatorType getMarkAttentionIndicator() {
        return markAttentionIndicator;
    }

    public void setMarkAttentionIndicator(MarkAttentionIndicatorType value) {
        this.markAttentionIndicator = value;
    }

    @ManyToOne(targetEntity = WebsiteURIType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "WEBSITEURI_PARTYTYPE_OFID")
    public WebsiteURIType getWebsiteURI() {
        return websiteURI;
    }

    public void setWebsiteURI(WebsiteURIType value) {
        this.websiteURI = value;
    }

    @ManyToOne(targetEntity = LogoReferenceIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LOGOREFERENCEID_PARTYTYPE_HJ_0")
    public LogoReferenceIDType getLogoReferenceID() {
        return logoReferenceID;
    }

    public void setLogoReferenceID(LogoReferenceIDType value) {
        this.logoReferenceID = value;
    }

    @ManyToOne(targetEntity = EndpointIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ENDPOINTID_PARTYTYPE_OFID")
    public EndpointIDType getEndpointID() {
        return endpointID;
    }

    public void setEndpointID(EndpointIDType value) {
        this.endpointID = value;
    }

    @OneToMany(targetEntity = PartyIdentificationType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PARTYIDENTIFICATION_PARTYTYP_0")
    public List<PartyIdentificationType> getPartyIdentification() {
        if (partyIdentification == null) {
            partyIdentification = new ArrayList<PartyIdentificationType>();
        }
        return this.partyIdentification;
    }

    public void setPartyIdentification(List<PartyIdentificationType> partyIdentification) {
        this.partyIdentification = partyIdentification;
    }

    @OneToMany(targetEntity = PartyNameType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PARTYNAME_PARTYTYPE_OFID")
    public List<PartyNameType> getPartyName() {
        if (partyName == null) {
            partyName = new ArrayList<PartyNameType>();
        }
        return this.partyName;
    }

    public void setPartyName(List<PartyNameType> partyName) {
        this.partyName = partyName;
    }

    @ManyToOne(targetEntity = LanguageType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LANGUAGE__PARTYTYPE_OFID")
    public LanguageType getLanguage() {
        return language;
    }

    public void setLanguage(LanguageType value) {
        this.language = value;
    }

    @ManyToOne(targetEntity = AddressType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "POSTALADDRESS_PARTYTYPE_OFID")
    public AddressType getPostalAddress() {
        return postalAddress;
    }

    public void setPostalAddress(AddressType value) {
        this.postalAddress = value;
    }

    @ManyToOne(targetEntity = LocationTypeCommAgg.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PHYSICALLOCATION_PARTYTYPE_H_0")
    public LocationTypeCommAgg getPhysicalLocation() {
        return physicalLocation;
    }

    public void setPhysicalLocation(LocationTypeCommAgg value) {
        this.physicalLocation = value;
    }

    @OneToMany(targetEntity = PartyTaxSchemeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PARTYTAXSCHEME_PARTYTYPE_OFID")
    public List<PartyTaxSchemeType> getPartyTaxScheme() {
        if (partyTaxScheme == null) {
            partyTaxScheme = new ArrayList<PartyTaxSchemeType>();
        }
        return this.partyTaxScheme;
    }

    public void setPartyTaxScheme(List<PartyTaxSchemeType> partyTaxScheme) {
        this.partyTaxScheme = partyTaxScheme;
    }

    @OneToMany(targetEntity = PartyLegalEntityType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PARTYLEGALENTITY_PARTYTYPE_H_0")
    public List<PartyLegalEntityType> getPartyLegalEntity() {
        if (partyLegalEntity == null) {
            partyLegalEntity = new ArrayList<PartyLegalEntityType>();
        }
        return this.partyLegalEntity;
    }

    public void setPartyLegalEntity(List<PartyLegalEntityType> partyLegalEntity) {
        this.partyLegalEntity = partyLegalEntity;
    }

    @ManyToOne(targetEntity = ContactType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CONTACT_PARTYTYPE_OFID")
    public ContactType getContact() {
        return contact;
    }

    public void setContact(ContactType value) {
        this.contact = value;
    }

    @ManyToOne(targetEntity = PersonType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PERSON_PARTYTYPE_OFID")
    public PersonType getPerson() {
        return person;
    }

    public void setPerson(PersonType value) {
        this.person = value;
    }

    @ManyToOne(targetEntity = PartyType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "AGENTPARTY_PARTYTYPE_OFID")
    public PartyType getAgentParty() {
        return agentParty;
    }

    public void setAgentParty(PartyType value) {
        this.agentParty = value;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
