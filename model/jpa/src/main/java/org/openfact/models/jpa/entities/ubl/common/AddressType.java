//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "AddressType")
@Table(name = "ADDRESSTYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class AddressType {

    protected IDType ID;
    protected AddressTypeCodeType addressTypeCode;
    protected AddressFormatCodeType addressFormatCode;
    protected PostboxType postbox;
    protected FloorType floor;
    protected RoomType room;
    protected StreetNameType streetName;
    protected AdditionalStreetNameType additionalStreetName;
    protected BlockNameType blockName;
    protected BuildingNameType buildingName;
    protected BuildingNumberType buildingNumber;
    protected InhouseMailType inhouseMail;
    protected DepartmentType department;
    protected MarkAttentionType markAttention;
    protected MarkCareType markCare;
    protected PlotIdentificationType plotIdentification;
    protected CitySubdivisionNameType citySubdivisionName;
    protected CityNameType cityName;
    protected PostalZoneType postalZone;
    protected CountrySubentityType countrySubentity;
    protected CountrySubentityCodeType countrySubentityCode;
    protected RegionType region;
    protected DistrictType district;
    protected TimezoneOffsetType timezoneOffset;
    protected List<AddressLineType> addressLine;
    protected CountryType country;
    protected LocationCoordinateType locationCoordinate;
    protected String id;

    @ManyToOne(targetEntity = IDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ID_ADDRESSTYPE_OFID")
    public IDType getID() {
        return ID;
    }

    public void setID(IDType value) {
        this.ID = value;
    }

    @ManyToOne(targetEntity = AddressTypeCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ADDRESSTYPECODE_ADDRESSTYPE__0")
    public AddressTypeCodeType getAddressTypeCode() {
        return addressTypeCode;
    }

    public void setAddressTypeCode(AddressTypeCodeType value) {
        this.addressTypeCode = value;
    }

    @ManyToOne(targetEntity = AddressFormatCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ADDRESSFORMATCODE_ADDRESSTYP_0")
    public AddressFormatCodeType getAddressFormatCode() {
        return addressFormatCode;
    }

    public void setAddressFormatCode(AddressFormatCodeType value) {
        this.addressFormatCode = value;
    }

    @ManyToOne(targetEntity = PostboxType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "POSTBOX_ADDRESSTYPE_OFID")
    public PostboxType getPostbox() {
        return postbox;
    }

    public void setPostbox(PostboxType value) {
        this.postbox = value;
    }

    @ManyToOne(targetEntity = FloorType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "FLOOR_ADDRESSTYPE_OFID")
    public FloorType getFloor() {
        return floor;
    }

    public void setFloor(FloorType value) {
        this.floor = value;
    }

    @ManyToOne(targetEntity = RoomType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ROOM_ADDRESSTYPE_OFID")
    public RoomType getRoom() {
        return room;
    }

    public void setRoom(RoomType value) {
        this.room = value;
    }

    @ManyToOne(targetEntity = StreetNameType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "STREETNAME_ADDRESSTYPE_OFID")
    public StreetNameType getStreetName() {
        return streetName;
    }

    public void setStreetName(StreetNameType value) {
        this.streetName = value;
    }

    @ManyToOne(targetEntity = AdditionalStreetNameType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ADDITIONALSTREETNAME_ADDRESS_0")
    public AdditionalStreetNameType getAdditionalStreetName() {
        return additionalStreetName;
    }

    public void setAdditionalStreetName(AdditionalStreetNameType value) {
        this.additionalStreetName = value;
    }

    @ManyToOne(targetEntity = BlockNameType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "BLOCKNAME_ADDRESSTYPE_OFID")
    public BlockNameType getBlockName() {
        return blockName;
    }

    public void setBlockName(BlockNameType value) {
        this.blockName = value;
    }

    @ManyToOne(targetEntity = BuildingNameType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "BUILDINGNAME_ADDRESSTYPE_OFID")
    public BuildingNameType getBuildingName() {
        return buildingName;
    }

    public void setBuildingName(BuildingNameType value) {
        this.buildingName = value;
    }

    @ManyToOne(targetEntity = BuildingNumberType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "BUILDINGNUMBER_ADDRESSTYPE_H_0")
    public BuildingNumberType getBuildingNumber() {
        return buildingNumber;
    }

    public void setBuildingNumber(BuildingNumberType value) {
        this.buildingNumber = value;
    }

    @ManyToOne(targetEntity = InhouseMailType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "INHOUSEMAIL_ADDRESSTYPE_OFID")
    public InhouseMailType getInhouseMail() {
        return inhouseMail;
    }

    public void setInhouseMail(InhouseMailType value) {
        this.inhouseMail = value;
    }

    @ManyToOne(targetEntity = DepartmentType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DEPARTMENT_ADDRESSTYPE_OFID")
    public DepartmentType getDepartment() {
        return department;
    }

    public void setDepartment(DepartmentType value) {
        this.department = value;
    }

    @ManyToOne(targetEntity = MarkAttentionType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "MARKATTENTION_ADDRESSTYPE_HJ_0")
    public MarkAttentionType getMarkAttention() {
        return markAttention;
    }

    public void setMarkAttention(MarkAttentionType value) {
        this.markAttention = value;
    }

    @ManyToOne(targetEntity = MarkCareType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "MARKCARE_ADDRESSTYPE_OFID")
    public MarkCareType getMarkCare() {
        return markCare;
    }

    public void setMarkCare(MarkCareType value) {
        this.markCare = value;
    }

    @ManyToOne(targetEntity = PlotIdentificationType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PLOTIDENTIFICATION_ADDRESSTY_0")
    public PlotIdentificationType getPlotIdentification() {
        return plotIdentification;
    }

    public void setPlotIdentification(PlotIdentificationType value) {
        this.plotIdentification = value;
    }

    @ManyToOne(targetEntity = CitySubdivisionNameType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CITYSUBDIVISIONNAME_ADDRESST_0")
    public CitySubdivisionNameType getCitySubdivisionName() {
        return citySubdivisionName;
    }

    public void setCitySubdivisionName(CitySubdivisionNameType value) {
        this.citySubdivisionName = value;
    }

    @ManyToOne(targetEntity = CityNameType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CITYNAME_ADDRESSTYPE_OFID")
    public CityNameType getCityName() {
        return cityName;
    }

    public void setCityName(CityNameType value) {
        this.cityName = value;
    }

    @ManyToOne(targetEntity = PostalZoneType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "POSTALZONE_ADDRESSTYPE_OFID")
    public PostalZoneType getPostalZone() {
        return postalZone;
    }

    public void setPostalZone(PostalZoneType value) {
        this.postalZone = value;
    }

    @ManyToOne(targetEntity = CountrySubentityType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "COUNTRYSUBENTITY_ADDRESSTYPE_0")
    public CountrySubentityType getCountrySubentity() {
        return countrySubentity;
    }

    public void setCountrySubentity(CountrySubentityType value) {
        this.countrySubentity = value;
    }

    @ManyToOne(targetEntity = CountrySubentityCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "COUNTRYSUBENTITYCODE_ADDRESS_0")
    public CountrySubentityCodeType getCountrySubentityCode() {
        return countrySubentityCode;
    }

    public void setCountrySubentityCode(CountrySubentityCodeType value) {
        this.countrySubentityCode = value;
    }

    @ManyToOne(targetEntity = RegionType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "REGION_ADDRESSTYPE_OFID")
    public RegionType getRegion() {
        return region;
    }

    public void setRegion(RegionType value) {
        this.region = value;
    }

    @ManyToOne(targetEntity = DistrictType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DISTRICT_ADDRESSTYPE_OFID")
    public DistrictType getDistrict() {
        return district;
    }

    public void setDistrict(DistrictType value) {
        this.district = value;
    }

    @ManyToOne(targetEntity = TimezoneOffsetType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TIMEZONEOFFSET_ADDRESSTYPE_H_0")
    public TimezoneOffsetType getTimezoneOffset() {
        return timezoneOffset;
    }

    public void setTimezoneOffset(TimezoneOffsetType value) {
        this.timezoneOffset = value;
    }

    @OneToMany(targetEntity = AddressLineType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ADDRESSLINE_ADDRESSTYPE_OFID")
    public List<AddressLineType> getAddressLine() {
        if (addressLine == null) {
            addressLine = new ArrayList<AddressLineType>();
        }
        return this.addressLine;
    }

    public void setAddressLine(List<AddressLineType> addressLine) {
        this.addressLine = addressLine;
    }

    @ManyToOne(targetEntity = CountryType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "COUNTRY_ADDRESSTYPE_OFID")
    public CountryType getCountry() {
        return country;
    }

    public void setCountry(CountryType value) {
        this.country = value;
    }

    @ManyToOne(targetEntity = LocationCoordinateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "LOCATIONCOORDINATE_ADDRESSTY_0")
    public LocationCoordinateType getLocationCoordinate() {
        return locationCoordinate;
    }

    public void setLocationCoordinate(LocationCoordinateType value) {
        this.locationCoordinate = value;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
