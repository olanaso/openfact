//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity
@Table(name = "EXCHANGERATE")
public class ExchangeRateEntity {

    protected SourceCurrencyCodeType sourceCurrencyCode;
    protected SourceCurrencyBaseRateType sourceCurrencyBaseRate;
    protected TargetCurrencyCodeType targetCurrencyCode;
    protected TargetCurrencyBaseRateType targetCurrencyBaseRate;
    protected ExchangeMarketIDType exchangeMarketID;
    protected CalculationRateType calculationRate;
    protected MathematicOperatorCodeType mathematicOperatorCode;
    protected DateType date;
    protected ContractEntity foreignExchangeContract;
    protected String id;

    @ManyToOne(targetEntity = SourceCurrencyCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SOURCECURRENCYCODE_EXCHANGER_0")
    public SourceCurrencyCodeType getSourceCurrencyCode() {
        return sourceCurrencyCode;
    }

    public void setSourceCurrencyCode(SourceCurrencyCodeType value) {
        this.sourceCurrencyCode = value;
    }

    @ManyToOne(targetEntity = SourceCurrencyBaseRateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SOURCECURRENCYBASERATE_EXCHA_0")
    public SourceCurrencyBaseRateType getSourceCurrencyBaseRate() {
        return sourceCurrencyBaseRate;
    }

    public void setSourceCurrencyBaseRate(SourceCurrencyBaseRateType value) {
        this.sourceCurrencyBaseRate = value;
    }

    @ManyToOne(targetEntity = TargetCurrencyCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TARGETCURRENCYCODE_EXCHANGER_0")
    public TargetCurrencyCodeType getTargetCurrencyCode() {
        return targetCurrencyCode;
    }

    public void setTargetCurrencyCode(TargetCurrencyCodeType value) {
        this.targetCurrencyCode = value;
    }

    @ManyToOne(targetEntity = TargetCurrencyBaseRateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "TARGETCURRENCYBASERATE_EXCHA_0")
    public TargetCurrencyBaseRateType getTargetCurrencyBaseRate() {
        return targetCurrencyBaseRate;
    }

    public void setTargetCurrencyBaseRate(TargetCurrencyBaseRateType value) {
        this.targetCurrencyBaseRate = value;
    }

    @ManyToOne(targetEntity = ExchangeMarketIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "EXCHANGEMARKETID_EXCHANGERAT_0")
    public ExchangeMarketIDType getExchangeMarketID() {
        return exchangeMarketID;
    }

    public void setExchangeMarketID(ExchangeMarketIDType value) {
        this.exchangeMarketID = value;
    }

    @ManyToOne(targetEntity = CalculationRateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CALCULATIONRATE_EXCHANGERATE_0")
    public CalculationRateType getCalculationRate() {
        return calculationRate;
    }

    public void setCalculationRate(CalculationRateType value) {
        this.calculationRate = value;
    }

    @ManyToOne(targetEntity = MathematicOperatorCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "MATHEMATICOPERATORCODE_EXCHA_0")
    public MathematicOperatorCodeType getMathematicOperatorCode() {
        return mathematicOperatorCode;
    }

    public void setMathematicOperatorCode(MathematicOperatorCodeType value) {
        this.mathematicOperatorCode = value;
    }

    @ManyToOne(targetEntity = DateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DATE__EXCHANGERATETYPE_OFID")
    public DateType getDate() {
        return date;
    }

    public void setDate(DateType value) {
        this.date = value;
    }

    @ManyToOne(targetEntity = ContractEntity.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "FOREIGNEXCHANGECONTRACT_EXCH_0")
    public ContractEntity getForeignExchangeContract() {
        return foreignExchangeContract;
    }

    public void setForeignExchangeContract(ContractEntity value) {
        this.foreignExchangeContract = value;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
