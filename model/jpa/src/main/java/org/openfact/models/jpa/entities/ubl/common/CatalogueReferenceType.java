//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "CatalogueReferenceType")
@Table(name = "CATALOGUEREFERENCETYPE")
@Inheritance(strategy = InheritanceType.JOINED)
public class CatalogueReferenceType {

    protected IDType ID;
    protected UUIDType uuid;
    protected IssueDateType issueDate;
    protected IssueTimeType issueTime;
    protected RevisionDateType revisionDate;
    protected RevisionTimeType revisionTime;
    protected List<NoteType> note;
    protected List<DescriptionType> description;
    protected VersionIDType versionID;
    protected PreviousVersionIDType previousVersionID;
    protected String id;

    @ManyToOne(targetEntity = IDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ID_CATALOGUEREFERENCETYPE_HJ_0")
    public IDType getID() {
        return ID;
    }

    public void setID(IDType value) {
        this.ID = value;
    }

    @ManyToOne(targetEntity = UUIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "UUID_CATALOGUEREFERENCETYPE__0")
    public UUIDType getUUID() {
        return uuid;
    }

    public void setUUID(UUIDType value) {
        this.uuid = value;
    }

    @ManyToOne(targetEntity = IssueDateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ISSUEDATE_CATALOGUEREFERENCE_0")
    public IssueDateType getIssueDate() {
        return issueDate;
    }

    public void setIssueDate(IssueDateType value) {
        this.issueDate = value;
    }

    @ManyToOne(targetEntity = IssueTimeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ISSUETIME_CATALOGUEREFERENCE_0")
    public IssueTimeType getIssueTime() {
        return issueTime;
    }

    public void setIssueTime(IssueTimeType value) {
        this.issueTime = value;
    }

    @ManyToOne(targetEntity = RevisionDateType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "REVISIONDATE_CATALOGUEREFERE_0")
    public RevisionDateType getRevisionDate() {
        return revisionDate;
    }

    public void setRevisionDate(RevisionDateType value) {
        this.revisionDate = value;
    }

    @ManyToOne(targetEntity = RevisionTimeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "REVISIONTIME_CATALOGUEREFERE_0")
    public RevisionTimeType getRevisionTime() {
        return revisionTime;
    }

    public void setRevisionTime(RevisionTimeType value) {
        this.revisionTime = value;
    }

    @OneToMany(targetEntity = NoteType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "NOTE_CATALOGUEREFERENCETYPE__0")
    public List<NoteType> getNote() {
        if (note == null) {
            note = new ArrayList<NoteType>();
        }
        return this.note;
    }

    public void setNote(List<NoteType> note) {
        this.note = note;
    }

    @OneToMany(targetEntity = DescriptionType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DESCRIPTION_CATALOGUEREFEREN_0")
    public List<DescriptionType> getDescription() {
        if (description == null) {
            description = new ArrayList<DescriptionType>();
        }
        return this.description;
    }

    public void setDescription(List<DescriptionType> description) {
        this.description = description;
    }

    @ManyToOne(targetEntity = VersionIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "VERSIONID_CATALOGUEREFERENCE_0")
    public VersionIDType getVersionID() {
        return versionID;
    }

    public void setVersionID(VersionIDType value) {
        this.versionID = value;
    }

    @ManyToOne(targetEntity = PreviousVersionIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PREVIOUSVERSIONID_CATALOGUER_0")
    public PreviousVersionIDType getPreviousVersionID() {
        return previousVersionID;
    }

    public void setPreviousVersionID(PreviousVersionIDType value) {
        this.previousVersionID = value;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
