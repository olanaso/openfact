//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.14 at 11:44:49 AM PET 
//

package org.openfact.models.jpa.entities.ubl.common;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;

@Entity(name = "CertificateOfOriginApplicationType")
@Table(name = "CERTIFICATEOFORIGINAPPLICATI_0")
@Inheritance(strategy = InheritanceType.JOINED)
public class CertificateOfOriginApplicationType {

    protected ReferenceIDType referenceID;
    protected CertificateTypeType certificateType;
    protected ApplicationStatusCodeType applicationStatusCode;
    protected OriginalJobIDType originalJobID;
    protected PreviousJobIDType previousJobID;
    protected RemarksType remarks;
    protected ShipmentType shipment;
    protected List<EndorserPartyType> endorserParty;
    protected PartyType preparationParty;
    protected PartyType issuerParty;
    protected CountryType issuingCountry;
    protected List<DocumentDistributionType> documentDistribution;
    protected List<DocumentReferenceType> supportingDocumentReference;
    protected List<SignatureType> signature;
    protected String id;

    @ManyToOne(targetEntity = ReferenceIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "REFERENCEID_CERTIFICATEOFORI_0")
    public ReferenceIDType getReferenceID() {
        return referenceID;
    }

    public void setReferenceID(ReferenceIDType value) {
        this.referenceID = value;
    }

    @ManyToOne(targetEntity = CertificateTypeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "CERTIFICATETYPE_CERTIFICATEO_0")
    public CertificateTypeType getCertificateType() {
        return certificateType;
    }

    public void setCertificateType(CertificateTypeType value) {
        this.certificateType = value;
    }

    @ManyToOne(targetEntity = ApplicationStatusCodeType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "APPLICATIONSTATUSCODE_CERTIF_0")
    public ApplicationStatusCodeType getApplicationStatusCode() {
        return applicationStatusCode;
    }

    public void setApplicationStatusCode(ApplicationStatusCodeType value) {
        this.applicationStatusCode = value;
    }

    @ManyToOne(targetEntity = OriginalJobIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ORIGINALJOBID_CERTIFICATEOFO_0")
    public OriginalJobIDType getOriginalJobID() {
        return originalJobID;
    }

    public void setOriginalJobID(OriginalJobIDType value) {
        this.originalJobID = value;
    }

    @ManyToOne(targetEntity = PreviousJobIDType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PREVIOUSJOBID_CERTIFICATEOFO_0")
    public PreviousJobIDType getPreviousJobID() {
        return previousJobID;
    }

    public void setPreviousJobID(PreviousJobIDType value) {
        this.previousJobID = value;
    }

    @ManyToOne(targetEntity = RemarksType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "REMARKS_CERTIFICATEOFORIGINA_0")
    public RemarksType getRemarks() {
        return remarks;
    }

    public void setRemarks(RemarksType value) {
        this.remarks = value;
    }

    @ManyToOne(targetEntity = ShipmentType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SHIPMENT_CERTIFICATEOFORIGIN_0")
    public ShipmentType getShipment() {
        return shipment;
    }

    public void setShipment(ShipmentType value) {
        this.shipment = value;
    }

    @OneToMany(targetEntity = EndorserPartyType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ENDORSERPARTY_CERTIFICATEOFO_0")
    public List<EndorserPartyType> getEndorserParty() {
        if (endorserParty == null) {
            endorserParty = new ArrayList<EndorserPartyType>();
        }
        return this.endorserParty;
    }

    public void setEndorserParty(List<EndorserPartyType> endorserParty) {
        this.endorserParty = endorserParty;
    }

    @ManyToOne(targetEntity = PartyType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "PREPARATIONPARTY_CERTIFICATE_0")
    public PartyType getPreparationParty() {
        return preparationParty;
    }

    public void setPreparationParty(PartyType value) {
        this.preparationParty = value;
    }

    @ManyToOne(targetEntity = PartyType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ISSUERPARTY_CERTIFICATEOFORI_0")
    public PartyType getIssuerParty() {
        return issuerParty;
    }

    public void setIssuerParty(PartyType value) {
        this.issuerParty = value;
    }

    @ManyToOne(targetEntity = CountryType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "ISSUINGCOUNTRY_CERTIFICATEOF_0")
    public CountryType getIssuingCountry() {
        return issuingCountry;
    }

    public void setIssuingCountry(CountryType value) {
        this.issuingCountry = value;
    }

    @OneToMany(targetEntity = DocumentDistributionType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "DOCUMENTDISTRIBUTION_CERTIFI_0")
    public List<DocumentDistributionType> getDocumentDistribution() {
        if (documentDistribution == null) {
            documentDistribution = new ArrayList<DocumentDistributionType>();
        }
        return this.documentDistribution;
    }

    public void setDocumentDistribution(List<DocumentDistributionType> documentDistribution) {
        this.documentDistribution = documentDistribution;
    }

    @OneToMany(targetEntity = DocumentReferenceType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SUPPORTINGDOCUMENTREFERENCE__0")
    public List<DocumentReferenceType> getSupportingDocumentReference() {
        if (supportingDocumentReference == null) {
            supportingDocumentReference = new ArrayList<DocumentReferenceType>();
        }
        return this.supportingDocumentReference;
    }

    public void setSupportingDocumentReference(List<DocumentReferenceType> supportingDocumentReference) {
        this.supportingDocumentReference = supportingDocumentReference;
    }

    @OneToMany(targetEntity = SignatureType.class, cascade = { CascadeType.ALL })
    @JoinColumn(name = "SIGNATURE_CERTIFICATEOFORIGI_0")
    public List<SignatureType> getSignature() {
        if (signature == null) {
            signature = new ArrayList<SignatureType>();
        }
        return this.signature;
    }

    public void setSignature(List<SignatureType> signature) {
        this.signature = signature;
    }

    @Id
    @Column(name = "ID")
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Access(AccessType.PROPERTY)
    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

}
