Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
+++ pom.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -235,6 +235,7 @@
         <module>reports</module>
         <module>testsuite</module>
         <module>dependencies</module>
+        <module>integration</module>
         <module>wildfly</module>
     </modules>
 
@@ -779,6 +780,12 @@
             <dependency>
                 <groupId>org.openfact</groupId>
                 <artifactId>openfact-wildfly-modules</artifactId>
+                <version>${project.version}</version>
+                <type>zip</type>
+            </dependency>
+            <dependency>
+                <groupId>org.openfact</groupId>
+                <artifactId>openfact-server-keycloak</artifactId>
                 <version>${project.version}</version>
                 <type>zip</type>
             </dependency>
Index: core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ core/pom.xml	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
@@ -42,12 +42,6 @@
         </openfact.osgi.import>
     </properties>
     <dependencies>
-        <!-- Java 8 Time -->
-        <dependency>
-            <groupId>com.fasterxml.jackson.datatype</groupId>
-            <artifactId>jackson-datatype-jsr310</artifactId>
-        </dependency>
-
         <!-- Principal Start -->
         <dependency>
             <groupId>org.openfact</groupId>
@@ -76,10 +70,18 @@
         </dependency>
         <!-- Principal End -->
 
+        <!--Secondary Start-->
         <dependency>
             <groupId>org.json</groupId>
             <artifactId>json</artifactId>
         </dependency>
+
+        <!-- Java 8 Time -->
+        <dependency>
+            <groupId>com.fasterxml.jackson.datatype</groupId>
+            <artifactId>jackson-datatype-jsr310</artifactId>
+        </dependency>
+        <!--Secondary End-->
     </dependencies>
     <build>
         <resources>
Index: common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ common/pom.xml	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
@@ -42,17 +42,6 @@
         </openfact.osgi.import>
     </properties>
     <dependencies>
-        <!-- Secondary Start -->
-        <dependency>
-            <groupId>com.google.guava</groupId>
-            <artifactId>guava</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>commons-lang</groupId>
-            <artifactId>commons-lang</artifactId>
-        </dependency>
-        <!-- Secondary End -->
-
         <!-- Principal Start -->
         <dependency>
             <groupId>org.bouncycastle</groupId>
@@ -68,6 +57,17 @@
             <scope>test</scope>
         </dependency>
         <!-- Principal End -->
+
+        <!-- Secondary Start -->
+        <dependency>
+            <groupId>com.google.guava</groupId>
+            <artifactId>guava</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>commons-lang</groupId>
+            <artifactId>commons-lang</artifactId>
+        </dependency>
+        <!-- Secondary End -->
     </dependencies>
     <build>
         <resources>
Index: reports/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- reports/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ reports/pom.xml	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
@@ -29,10 +29,4 @@
     <name>Openfact Reports</name>
     <description/>
 
-    <dependencies>
-        <dependency>
-            <groupId>net.sf.jasperreports</groupId>
-            <artifactId>jasperreports-fonts</artifactId>
-        </dependency>
-    </dependencies>
 </project>
Index: services/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ services/pom.xml	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
@@ -17,301 +17,268 @@
  -->
 
 <project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-	xmlns="http://maven.apache.org/POM/4.0.0"
-	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-	<parent>
-		<artifactId>openfact</artifactId>
-		<groupId>org.openfact</groupId>
-		<version>1.0-beta-5-SNAPSHOT</version>
-		<relativePath>../pom.xml</relativePath>
-	</parent>
-	<modelVersion>4.0.0</modelVersion>
+         xmlns="http://maven.apache.org/POM/4.0.0"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    <parent>
+        <artifactId>openfact</artifactId>
+        <groupId>org.openfact</groupId>
+        <version>1.0-beta-5-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
 
-	<artifactId>openfact-services</artifactId>
-	<name>Openfact REST Services</name>
-	<description />
+    <artifactId>openfact-services</artifactId>
+    <name>Openfact REST Services</name>
+    <description/>
 
-	<properties>
-		<version.swagger.doclet>1.0.5</version.swagger.doclet>
-		<maven.compiler.target>1.8</maven.compiler.target>
-		<maven.compiler.source>1.8</maven.compiler.source>
-	</properties>
+    <properties>
+        <version.swagger.doclet>1.0.5</version.swagger.doclet>
+        <maven.compiler.target>1.8</maven.compiler.target>
+        <maven.compiler.source>1.8</maven.compiler.source>
+    </properties>
 
-	<dependencies>
-		<!-- Secondary Start -->
-		<dependency>
-			<groupId>org.codehaus.woodstox</groupId>
-			<artifactId>woodstox-core-asl</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>de.odysseus.staxon</groupId>
-			<artifactId>staxon-gson</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.jvnet.jaxb2_commons</groupId>
-			<artifactId>jaxb2-basics-runtime</artifactId>
-		</dependency>
-
-		<dependency>
-			<groupId>com.helger</groupId>
-			<artifactId>ph-ubl21</artifactId>
-		</dependency>
-
-		<dependency>
-			<groupId>org.jodd</groupId>
-			<artifactId>jodd-core</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.apache.santuario</groupId>
-			<artifactId>xmlsec</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>com.google.guava</groupId>
-			<artifactId>guava</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>commons-lang</groupId>
-			<artifactId>commons-lang</artifactId>
-		</dependency>
-
-		<dependency>
-			<groupId>com.fasterxml.jackson.datatype</groupId>
-			<artifactId>jackson-datatype-jsr310</artifactId>
-		</dependency>
-
-		<dependency>
-			<groupId>org.json</groupId>
-			<artifactId>json</artifactId>
-		</dependency>
-
-		<dependency>
-			<groupId>net.sf.jasperreports</groupId>
-			<artifactId>jasperreports</artifactId>
-			<exclusions>
-				<exclusion>
-					<groupId>bouncycastle</groupId>
-					<artifactId>bcmail-jdk14</artifactId>
-				</exclusion>
-				<exclusion>
-					<groupId>bouncycastle</groupId>
-					<artifactId>bcprov-jdk14</artifactId>
-				</exclusion>
-				<exclusion>
-					<groupId>bouncycastle</groupId>
-					<artifactId>bctsp-jdk14</artifactId>
-				</exclusion>
-			</exclusions>
-		</dependency>
-		<dependency>
-			<groupId>org.keycloak</groupId>
-			<artifactId>keycloak-core</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.keycloak</groupId>
-			<artifactId>keycloak-authz-client</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>net.sf.barcode4j</groupId>
-			<artifactId>barcode4j</artifactId>
-		</dependency>
-
-		<dependency>
-			<groupId>org.apache.xmlgraphics</groupId>
-			<artifactId>batik-bridge</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.apache.xmlgraphics</groupId>
-			<artifactId>batik-dom</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.apache.xmlgraphics</groupId>
-			<artifactId>batik-svg-dom</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.apache.xmlgraphics</groupId>
-			<artifactId>xmlgraphics-commons</artifactId>
-		</dependency>
-
-		<dependency>
-			<groupId>commons-validator</groupId>
-			<artifactId>commons-validator</artifactId>
-			<version>${version.commons.validator}</version>
-		</dependency>
-		<!-- Secondary End -->
-
-		<!-- Principal Start -->
-		<dependency>
-			<groupId>org.bouncycastle</groupId>
-			<artifactId>bcprov-jdk15on</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.bouncycastle</groupId>
-			<artifactId>bcpkix-jdk15on</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.openfact</groupId>
-			<artifactId>openfact-core</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.freemarker</groupId>
-			<artifactId>freemarker</artifactId>
-			<!--<scope>provided</scope> -->
-		</dependency>
-		<dependency>
-			<groupId>javax.mail</groupId>
-			<artifactId>javax.mail-api</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.openfact</groupId>
-			<artifactId>openfact-server-spi</artifactId>
-			<scope>provided</scope>
-		</dependency>
-		<dependency>
-			<groupId>org.openfact</groupId>
-			<artifactId>openfact-server-spi-private</artifactId>
-			<scope>provided</scope>
-		</dependency>
-		<dependency>
-			<groupId>org.jboss.spec.javax.servlet</groupId>
-			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
-		</dependency>
+    <dependencies>
+        <!-- Principal Start -->
+        <dependency>
+            <groupId>org.bouncycastle</groupId>
+            <artifactId>bcprov-jdk15on</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.bouncycastle</groupId>
+            <artifactId>bcpkix-jdk15on</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.openfact</groupId>
+            <artifactId>openfact-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.freemarker</groupId>
+            <artifactId>freemarker</artifactId>
+            <!--<scope>provided</scope> -->
+        </dependency>
+        <dependency>
+            <groupId>javax.mail</groupId>
+            <artifactId>javax.mail-api</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.openfact</groupId>
+            <artifactId>openfact-server-spi</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.openfact</groupId>
+            <artifactId>openfact-server-spi-private</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.servlet</groupId>
+            <artifactId>jboss-servlet-api_3.0_spec</artifactId>
+        </dependency>
 
-		<dependency>
-			<groupId>org.wildfly.core</groupId>
-			<artifactId>wildfly-controller</artifactId>
-			<scope>provided</scope>
-		</dependency>
-		<dependency>
-			<groupId>org.jboss.logging</groupId>
-			<artifactId>jboss-logging</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.jboss.logging</groupId>
-			<artifactId>jboss-logging-annotations</artifactId>
-			<scope>provided</scope>
-		</dependency>
-		<dependency>
-			<groupId>org.jboss.logging</groupId>
-			<artifactId>jboss-logging-processor</artifactId>
-			<scope>provided</scope>
-			<optional>true</optional>
-		</dependency>
-		<dependency>
-			<groupId>org.jboss.resteasy</groupId>
-			<artifactId>resteasy-jaxrs</artifactId>
-			<exclusions>
-				<exclusion>
-					<groupId>log4j</groupId>
-					<artifactId>log4j</artifactId>
-				</exclusion>
-				<exclusion>
-					<groupId>org.slf4j</groupId>
-					<artifactId>slf4j-api</artifactId>
-				</exclusion>
-				<exclusion>
-					<groupId>org.slf4j</groupId>
-					<artifactId>slf4j-simple</artifactId>
-				</exclusion>
-			</exclusions>
-		</dependency>
-		<dependency>
-			<groupId>org.jboss.spec.javax.ws.rs</groupId>
-			<artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.jboss.spec.javax.transaction</groupId>
-			<artifactId>jboss-transaction-api_1.2_spec</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.jboss.resteasy</groupId>
-			<artifactId>resteasy-multipart-provider</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>com.fasterxml.jackson.core</groupId>
-			<artifactId>jackson-core</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>com.fasterxml.jackson.core</groupId>
-			<artifactId>jackson-databind</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>com.fasterxml.jackson.core</groupId>
-			<artifactId>jackson-annotations</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>com.google.zxing</groupId>
-			<artifactId>javase</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>junit</groupId>
-			<artifactId>junit</artifactId>
-			<scope>test</scope>
-		</dependency>
-		<dependency>
-			<groupId>com.icegreen</groupId>
-			<artifactId>greenmail</artifactId>
-			<scope>test</scope>
-			<exclusions>
-				<exclusion>
-					<groupId>org.slf4j</groupId>
-					<artifactId>slf4j-api</artifactId>
-				</exclusion>
-			</exclusions>
-		</dependency>
-		<!-- Principal End -->
+        <dependency>
+            <groupId>org.wildfly.core</groupId>
+            <artifactId>wildfly-controller</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.logging</groupId>
+            <artifactId>jboss-logging</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.logging</groupId>
+            <artifactId>jboss-logging-annotations</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.logging</groupId>
+            <artifactId>jboss-logging-processor</artifactId>
+            <scope>provided</scope>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.resteasy</groupId>
+            <artifactId>resteasy-jaxrs</artifactId>
+            <exclusions>
+                <exclusion>
+                    <groupId>log4j</groupId>
+                    <artifactId>log4j</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>org.slf4j</groupId>
+                    <artifactId>slf4j-api</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>org.slf4j</groupId>
+                    <artifactId>slf4j-simple</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.ws.rs</groupId>
+            <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.transaction</groupId>
+            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.resteasy</groupId>
+            <artifactId>resteasy-multipart-provider</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-annotations</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.google.zxing</groupId>
+            <artifactId>javase</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.icegreen</groupId>
+            <artifactId>greenmail</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.slf4j</groupId>
+                    <artifactId>slf4j-api</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <!-- Principal End -->
 
-		<dependency>
-			<groupId>com.fasterxml.jackson.dataformat</groupId>
-			<artifactId>jackson-dataformat-xml</artifactId>
-		</dependency>
+        <!-- Secondary Start -->
+        <dependency>
+            <groupId>de.odysseus.staxon</groupId>
+            <artifactId>staxon-gson</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>commons-validator</groupId>
+            <artifactId>commons-validator</artifactId>
+            <version>${version.commons.validator}</version>
+        </dependency>
 
-	</dependencies>
-	<build>
-		<plugins>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-compiler-plugin</artifactId>
-				<configuration>
-					<source>${maven.compiler.source}</source>
-					<target>${maven.compiler.target}</target>
-					<compilerArgument>
-						-AgeneratedTranslationFilesPath=${project.build.directory}/generated-translation-files
-					</compilerArgument>
-				</configuration>
-			</plugin>
-		</plugins>
-	</build>
-	<profiles>
-		<profile>
-			<id>apidocs</id>
-			<build>
-				<plugins>
-					<plugin>
-						<groupId>com.qmino</groupId>
-						<artifactId>miredot-plugin</artifactId>
-						<executions>
-							<execution>
-								<goals>
-									<goal>restdoc</goal>
-								</goals>
-								<configuration>
-									<output>
-										<title>API Manager REST Services (${project.version})</title>
-										<html>
-											<initialCollapseLevel>1</initialCollapseLevel>
-											<baseUrl>http://localhost:8080/openfact</baseUrl>
-											<hideIssuesTab>true</hideIssuesTab>
-										</html>
-									</output>
-								</configuration>
-							</execution>
-						</executions>
-						<configuration>
-							<licence>cHJvamVjdHxvcmcub3BlbmZhY3Qub3BlbmZhY3Qtc2VydmljZXN8MjAxOC0xMi0zMXx0cnVlfC0xI01Dd0NGQ1dqY1ZyOFVhWUVlWS84WjlvaSsyczdXb0Q3QWhSdUk4SHpXN1U5aFRqbnFja3VuWXlaUWdOQ0lnPT0=</licence>
-						</configuration>
-					</plugin>
-				</plugins>
-			</build>
-		</profile>
-	</profiles>
+        <!--Ubl-->
+        <dependency>
+            <groupId>com.helger</groupId>
+            <artifactId>ph-ubl21</artifactId>
+        </dependency>
+
+        <!--Keycloak-->
+        <dependency>
+            <groupId>org.keycloak</groupId>
+            <artifactId>keycloak-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.keycloak</groupId>
+            <artifactId>keycloak-authz-client</artifactId>
+        </dependency>
+
+        <!--Jasper reports-->
+        <dependency>
+            <groupId>net.sf.jasperreports</groupId>
+            <artifactId>jasperreports</artifactId>
+            <exclusions>
+                <exclusion>
+                    <groupId>bouncycastle</groupId>
+                    <artifactId>bcmail-jdk14</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>bouncycastle</groupId>
+                    <artifactId>bcprov-jdk14</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>bouncycastle</groupId>
+                    <artifactId>bctsp-jdk14</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+            <groupId>net.sf.jasperreports</groupId>
+            <artifactId>jasperreports-fonts</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>net.sf.barcode4j</groupId>
+            <artifactId>barcode4j</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.xmlgraphics</groupId>
+            <artifactId>batik-bridge</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.xmlgraphics</groupId>
+            <artifactId>batik-dom</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.xmlgraphics</groupId>
+            <artifactId>batik-svg-dom</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.xmlgraphics</groupId>
+            <artifactId>xmlgraphics-commons</artifactId>
+        </dependency>
+        <!-- Secondary End -->
+    </dependencies>
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>${maven.compiler.source}</source>
+                    <target>${maven.compiler.target}</target>
+                    <compilerArgument>
+                        -AgeneratedTranslationFilesPath=${project.build.directory}/generated-translation-files
+                    </compilerArgument>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+    <profiles>
+        <profile>
+            <id>apidocs</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>com.qmino</groupId>
+                        <artifactId>miredot-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <goals>
+                                    <goal>restdoc</goal>
+                                </goals>
+                                <configuration>
+                                    <output>
+                                        <title>API Manager REST Services (${project.version})</title>
+                                        <html>
+                                            <initialCollapseLevel>1</initialCollapseLevel>
+                                            <baseUrl>http://localhost:8080/openfact</baseUrl>
+                                            <hideIssuesTab>true</hideIssuesTab>
+                                        </html>
+                                    </output>
+                                </configuration>
+                            </execution>
+                        </executions>
+                        <configuration>
+                            <licence>
+                                cHJvamVjdHxvcmcub3BlbmZhY3Qub3BlbmZhY3Qtc2VydmljZXN8MjAxOC0xMi0zMXx0cnVlfC0xI01Dd0NGQ1dqY1ZyOFVhWUVlWS84WjlvaSsyczdXb0Q3QWhSdUk4SHpXN1U5aFRqbnFja3VuWXlaUWdOQ0lnPT0=
+                            </licence>
+                        </configuration>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+    </profiles>
 </project>
\ No newline at end of file
Index: integration/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,19 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    <parent>
+        <artifactId>openfact</artifactId>
+        <groupId>org.openfact</groupId>
+        <version>1.0-beta-5-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <name>Openfact Integration</name>
+    <description/>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>openfact-integration</artifactId>
+    <packaging>pom</packaging>
+
+    <modules>
+        <module>admin-client</module>
+    </modules>
+</project>
Index: distribution/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/pom.xml	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
+++ distribution/pom.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -33,6 +33,7 @@
     <modules>
         <module>server-dist</module>
         <module>server-overlay</module>
+        <module>server-keycloak</module>
         <module>feature-packs</module>
     </modules>
 
Index: distribution/downloads/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/downloads/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ distribution/downloads/pom.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -68,22 +68,28 @@
 
                                 <artifactItem>
                                     <groupId>org.openfact</groupId>
-                                    <artifactId>openfact-server-overlay</artifactId>
+                                    <artifactId>openfact-server-keycloak</artifactId>
                                     <type>zip</type>
-                                    <destFileName>openfact-overlay-${project.version}.zip</destFileName>
+                                    <destFileName>openfact-server-keycloak-${project.version}.zip</destFileName>
                                 </artifactItem>
                                 <artifactItem>
                                     <groupId>org.openfact</groupId>
-                                    <artifactId>openfact-server-overlay</artifactId>
+                                    <artifactId>openfact-server-keycloak</artifactId>
                                     <type>tar.gz</type>
-                                    <destFileName>openfact-overlay-${project.version}.tar.gz</destFileName>
+                                    <destFileName>openfact-server-keycloak-${project.version}.tar.gz</destFileName>
                                 </artifactItem>
 
                                 <artifactItem>
                                     <groupId>org.openfact</groupId>
-                                    <artifactId>openfact-api-docs-dist</artifactId>
+                                    <artifactId>openfact-server-overlay</artifactId>
                                     <type>zip</type>
-                                    <destFileName>openfact-api-docs-${project.version}.zip</destFileName>
+                                    <destFileName>openfact-overlay-${project.version}.zip</destFileName>
+                                </artifactItem>
+                                <artifactItem>
+                                    <groupId>org.openfact</groupId>
+                                    <artifactId>openfact-server-overlay</artifactId>
+                                    <type>tar.gz</type>
+                                    <destFileName>openfact-overlay-${project.version}.tar.gz</destFileName>
                                 </artifactItem>
                             </artifactItems>
                             <outputDirectory>target/${project.version}</outputDirectory>
Index: dependencies/server-min/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dependencies/server-min/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ dependencies/server-min/pom.xml	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
@@ -60,6 +60,10 @@
             <groupId>org.openfact</groupId>
             <artifactId>openfact-server-spi</artifactId>
         </dependency>
+        <dependency>
+            <groupId>org.openfact</groupId>
+            <artifactId>openfact-server-spi-private</artifactId>
+        </dependency>
 
         <!-- forms -->
         <dependency>
Index: dependencies/server-all/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- dependencies/server-all/pom.xml	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
+++ dependencies/server-all/pom.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -54,11 +54,6 @@
             <artifactId>openfact-model-jpa</artifactId>
         </dependency>
 
-        <dependency>
-            <groupId>org.mongodb</groupId>
-            <artifactId>mongo-java-driver</artifactId>
-        </dependency>
-
         <dependency>
             <groupId>org.liquibase</groupId>
             <artifactId>liquibase-core</artifactId>
@@ -70,154 +65,6 @@
             </exclusions>
         </dependency>
 
-        <dependency>
-            <groupId>org.eclipse.aether</groupId>
-            <artifactId>aether-api</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.aether</groupId>
-            <artifactId>aether-connector-basic</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.aether</groupId>
-            <artifactId>aether-spi</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.aether</groupId>
-            <artifactId>aether-impl</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.aether</groupId>
-            <artifactId>aether-transport-file</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.aether</groupId>
-            <artifactId>aether-transport-http</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.aether</groupId>
-            <artifactId>aether-transport-wagon</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.aether</groupId>
-            <artifactId>aether-util</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.ant</groupId>
-            <artifactId>ant</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.ant</groupId>
-            <artifactId>ant-launcher</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.antlr</groupId>
-            <artifactId>antlr-runtime</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>aopalliance</groupId>
-            <artifactId>aopalliance</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-aether-provider</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-artifact</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-compat</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-core</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-model</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-model-builder</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-plugin-api</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-repository-metadata</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-settings</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven</groupId>
-            <artifactId>maven-settings-builder</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.mvel</groupId>
-            <artifactId>mvel2</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.sisu</groupId>
-            <artifactId>org.eclipse.sisu.inject</artifactId>
-            <exclusions>
-                <exclusion>
-                    <groupId>com.google.inject</groupId>
-                    <artifactId>guice</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.sisu</groupId>
-            <artifactId>org.eclipse.sisu.plexus</artifactId>
-            <exclusions>
-                <exclusion>
-                    <groupId>org.sonatype.sisu</groupId>
-                    <artifactId>sisu-guice</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>org.sonatype.plexus</groupId>
-            <artifactId>plexus-cipher</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.codehaus.plexus</groupId>
-            <artifactId>plexus-classworlds</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.codehaus.plexus</groupId>
-            <artifactId>plexus-component-annotations</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.codehaus.plexus</groupId>
-            <artifactId>plexus-interpolation</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.sonatype.plexus</groupId>
-            <artifactId>plexus-sec-dispatcher</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.codehaus.plexus</groupId>
-            <artifactId>plexus-utils</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven.wagon</groupId>
-            <artifactId>wagon-http</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven.wagon</groupId>
-            <artifactId>wagon-http-shared</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.maven.wagon</groupId>
-            <artifactId>wagon-provider-api</artifactId>
-        </dependency>
         <dependency>
             <groupId>com.thoughtworks.xstream</groupId>
             <artifactId>xstream</artifactId>
@@ -225,41 +72,6 @@
         <dependency>
             <groupId>com.google.guava</groupId>
             <artifactId>guava</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.eclipse.jdt.core.compiler</groupId>
-            <artifactId>ecj</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.httpcomponents</groupId>
-            <artifactId>httpclient</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.httpcomponents</groupId>
-            <artifactId>httpcore</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>com.lowagie</groupId>
-            <artifactId>itext</artifactId>
-            <exclusions>
-                <exclusion>
-                    <groupId>bouncycastle</groupId>
-                    <artifactId>bcmail-jdk14</artifactId>
-                </exclusion>
-                <exclusion>
-                    <groupId>bouncycastle</groupId>
-                    <artifactId>bcprov-jdk14</artifactId>
-                </exclusion>
-                <exclusion>
-                    <groupId>org.sonatype.sisu</groupId>
-                    <artifactId>sisu-guice</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>org.sonatype.sisu</groupId>
-            <artifactId>sisu-guice</artifactId>
-            <classifier>no_aop</classifier>
         </dependency>
     </dependencies>
 
Index: integration/admin-client/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/pom.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,101 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>openfact-integration</artifactId>
+        <groupId>org.openfact</groupId>
+        <version>1.0-beta-5-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>openfact-admin-client</artifactId>
+    <name>Openfact Admin REST Client</name>
+    <description/>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.openfact</groupId>
+            <artifactId>openfact-core</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.httpcomponents</groupId>
+            <artifactId>httpclient</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.ws.rs</groupId>
+            <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.resteasy</groupId>
+            <artifactId>resteasy-client</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.resteasy</groupId>
+            <artifactId>resteasy-multipart-provider</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.resteasy</groupId>
+            <artifactId>resteasy-jackson2-provider</artifactId>
+            <scope>provided</scope>
+        </dependency>
+    </dependencies>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>${maven.compiler.source}</source>
+                    <target>${maven.compiler.target}</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+    <profiles>
+        <profile>
+            <id>apidocs</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>com.qmino</groupId>
+                        <artifactId>miredot-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <goals>
+                                    <goal>restdoc</goal>
+                                </goals>
+                                <configuration>
+                                    <output>
+                                        <title>API Manager REST Services (${project.version})</title>
+                                        <html>
+                                            <initialCollapseLevel>1</initialCollapseLevel>
+                                            <baseUrl>http://localhost:8080/openfact</baseUrl>
+                                            <hideIssuesTab>true</hideIssuesTab>
+                                        </html>
+                                    </output>
+                                </configuration>
+                            </execution>
+                        </executions>
+                        <configuration>
+                            <licence>
+                                cHJvamVjdHxvcmcub3BlbmZhY3Qub3BlbmZhY3Qtc2VydmljZXN8MjAxOC0xMi0zMXx0cnVlfC0xI01Dd0NGQ1dqY1ZyOFVhWUVlWS84WjlvaSsyczdXb0Q3QWhSdUk4SHpXN1U5aFRqbnFja3VuWXlaUWdOQ0lnPT0=
+                            </licence>
+                        </configuration>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+    </profiles>
+</project>
\ No newline at end of file
Index: distribution/server-keycloak/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/server-keycloak/pom.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
+++ distribution/server-keycloak/pom.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -0,0 +1,112 @@
+<!--
+    Copyright 2016 Sistcoop, Inc. and/or its affiliates
+    and other contributors as indicated by the @author tags.
+   
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+   
+    http://www.apache.org/licenses/LICENSE-2.0
+   
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+ -->
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <artifactId>openfact-distribution</artifactId>
+        <groupId>org.openfact</groupId>
+        <version>1.0-beta-5-SNAPSHOT</version>
+    </parent>
+
+    <artifactId>openfact-server-keycloak</artifactId>
+    <packaging>pom</packaging>
+    <name>Openfact Server Keycloak</name>
+    <description/>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.openfact</groupId>
+            <artifactId>openfact-server-dist</artifactId>
+            <type>zip</type>
+        </dependency>
+    </dependencies>
+
+    <build>
+        <finalName>openfact-overlay-${project.version}</finalName>
+
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-dependency-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <id>unpack</id>
+                        <phase>compile</phase>
+                        <goals>
+                            <goal>unpack</goal>
+                        </goals>
+                        <configuration>
+                            <artifactItems>
+                                <artifactItem>
+                                    <groupId>org.openfact</groupId>
+                                    <artifactId>openfact-wildfly-server-subsystem</artifactId>
+                                    <version>${project.version}</version>
+                                    <type>jar</type>
+                                    <includes>cli/*.cli</includes>
+                                    <outputDirectory>${project.build.directory}</outputDirectory>
+                                </artifactItem>
+                            </artifactItems>
+                        </configuration>
+                    </execution>
+                    <execution>
+                        <id>unpack-server-dist</id>
+                        <phase>prepare-package</phase>
+                        <goals>
+                            <goal>unpack</goal>
+                        </goals>
+                        <configuration>
+                            <artifactItems>
+                                <artifactItem>
+                                    <groupId>org.openfact</groupId>
+                                    <artifactId>openfact-server-dist</artifactId>
+                                    <type>zip</type>
+                                    <outputDirectory>${project.build.directory}/unpacked</outputDirectory>
+                                </artifactItem>
+                            </artifactItems>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-assembly-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <id>assemble</id>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>single</goal>
+                        </goals>
+                        <configuration>
+                            <descriptors>
+                                <descriptor>assembly.xml</descriptor>
+                            </descriptors>
+                            <recompressZippedFiles>true</recompressZippedFiles>
+                            <finalName>${project.build.finalName}</finalName>
+                            <appendAssemblyId>false</appendAssemblyId>
+                            <outputDirectory>${project.build.directory}</outputDirectory>
+                            <workDirectory>${project.build.directory}/assembly/work</workDirectory>
+                            <tarLongFileMode>gnu</tarLongFileMode>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
+        </plugins>
+    </build>
+
+</project>
Index: distribution/server-keycloak/assembly.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/server-keycloak/assembly.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
+++ distribution/server-keycloak/assembly.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -0,0 +1,92 @@
+<!--
+    Copyright 2016 Sistcoop, Inc. and/or its affiliates
+    and other contributors as indicated by the @author tags.
+   
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+   
+    http://www.apache.org/licenses/LICENSE-2.0
+   
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+ -->
+<assembly>
+    <id>server-dist</id>
+
+    <formats>
+        <format>zip</format>
+        <format>tar.gz</format>
+    </formats>
+
+    <includeBaseDirectory>false</includeBaseDirectory>
+
+    <fileSets>
+        <fileSet>
+            <directory>${project.build.directory}/unpacked/openfact-${project.version}/modules/system/layers/openfact
+            </directory>
+            <outputDirectory>modules/system/add-ons/openfact</outputDirectory>
+            <includes>
+                <include>com/google/zxing/**</include>
+                <include>org/freemarker/**</include>
+                <include>org/jboss/aesh/0.65/**</include>
+                <include>org/openfact/**</include>
+                <include>org/liquibase/**</include>
+                <include>org/mongodb/**</include>
+                <include>aopalliance/**</include>
+                <include>com/thoughtworks/xstream/**</include>
+                <include>org/antlr/**</include>
+                <include>org/apache/**</include>
+                <include>org/codehouse/**</include>
+                <include>org/eclipse/**</include>
+                <include>org/mvel/**</include>
+                <include>org/sonatype/**</include>
+                <include>sun/jdk/jgss/**</include>
+            </includes>
+        </fileSet>
+        <fileSet>
+            <directory>${project.build.directory}/unpacked/openfact-${project.version}/content</directory>
+            <outputDirectory></outputDirectory>
+        </fileSet>
+        <fileSet>
+            <directory>${project.build.directory}/unpacked/openfact-${project.version}/themes</directory>
+            <outputDirectory>themes</outputDirectory>
+            <includes>
+                <include>**/**</include>
+            </includes>
+        </fileSet>
+        <fileSet>
+            <directory>${project.build.directory}/unpacked/openfact-${project.version}/providers</directory>
+            <outputDirectory>providers</outputDirectory>
+            <includes>
+                <include>**/**</include>
+            </includes>
+        </fileSet>
+        <fileSet>
+            <directory>../../</directory>
+            <includes>
+                <include>License.html</include>
+            </includes>
+            <outputDirectory></outputDirectory>
+        </fileSet>
+        <fileSet>
+            <directory>cli</directory>
+            <includes>
+                <include>*.cli</include>
+            </includes>
+            <outputDirectory>bin</outputDirectory>
+        </fileSet>
+    </fileSets>
+
+    <files>
+        <file>
+            <source>${project.build.directory}/cli/default-openfact-subsys-config.cli</source>
+            <outputDirectory>bin</outputDirectory>
+            <destName>default-openfact-subsys-config.cli</destName>
+        </file>
+    </files>
+
+</assembly>
Index: model/jpa/src/main/resources/META-INF/persistence.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/resources/META-INF/persistence.xml	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/resources/META-INF/persistence.xml	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -31,10 +31,12 @@
         <class>org.openfact.events.jpa.AdminEventEntity</class>
 
         <!-- Universal Business Language UBL -->
-        <class>org.openfact.models.jpa.entities.UBLDocumentEntity</class>
-        <class>org.openfact.models.jpa.entities.AttachedUBLDocumentEntity</class>
-        <class>org.openfact.models.jpa.entities.UBLDocumentAttributeEntity</class>
-        <class>org.openfact.models.jpa.entities.UBLDocumentRequiredActionEntity</class>
+        <class>org.openfact.models.jpa.entities.DocumentEntity</class>
+        <class>org.openfact.models.jpa.entities.DocumentLineEntity</class>
+        <class>org.openfact.models.jpa.entities.DocumentLineAttributeEntity</class>
+        <class>org.openfact.models.jpa.entities.AttachedDocumentEntity</class>
+        <class>org.openfact.models.jpa.entities.DocumentAttributeEntity</class>
+        <class>org.openfact.models.jpa.entities.DocumentRequiredActionEntity</class>
         <class>org.openfact.models.jpa.entities.SendEventEntity</class>
         <class>org.openfact.models.jpa.entities.SendEventAttributeEntity</class>
         <class>org.openfact.models.jpa.entities.SendEventAttachedFileEntity</class>
Index: distribution/server-keycloak/cli/openfact-install.cli
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/server-keycloak/cli/openfact-install.cli	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
+++ distribution/server-keycloak/cli/openfact-install.cli	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -0,0 +1,4 @@
+embed-server --server-config=standalone.xml
+/subsystem=datasources/data-source=OpenfactDS/:add(connection-url="jdbc:h2:${jboss.server.data.dir}/openfact;AUTO_SERVER=TRUE",jta=false,driver-name=h2,jndi-name=java:jboss/datasources/OpenfactDS,password=sa,user-name=sa,use-java-context=true)
+/extension=org.openfact.openfact-server-subsystem/:add(module=org.openfact.openfact-server-subsystem)
+run-batch --file=default-openfact-subsys-config.cli
\ No newline at end of file
Index: distribution/feature-packs/server-feature-pack/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/feature-packs/server-feature-pack/pom.xml	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
+++ distribution/feature-packs/server-feature-pack/pom.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -51,13 +51,6 @@
             <groupId>org.wildfly</groupId>
             <artifactId>wildfly-feature-pack</artifactId>
             <type>zip</type>
-            <!-- Need to exlcude that in order to use the right guava version for drools -->
-            <exclusions>
-                <exclusion>
-                    <groupId>com.google.guava</groupId>
-                    <artifactId>guava</artifactId>
-                </exclusion>
-            </exclusions>
         </dependency>
         <dependency>
             <groupId>org.keycloak</groupId>
Index: distribution/server-keycloak/cli/openfact-install-ha.cli
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/server-keycloak/cli/openfact-install-ha.cli	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
+++ distribution/server-keycloak/cli/openfact-install-ha.cli	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -0,0 +1,4 @@
+embed-server --server-config=standalone-ha.xml
+/subsystem=datasources/data-source=OpenfactDS/:add(connection-url="jdbc:h2:${jboss.server.data.dir}/openfact;AUTO_SERVER=TRUE",jta=false,driver-name=h2,jndi-name=java:jboss/datasources/OpenfactDS,password=sa,user-name=sa,use-java-context=true)
+/extension=org.openfact.openfact-server-subsystem/:add(module=org.openfact.openfact-server-subsystem)
+run-batch --file=default-openfact-subsys-config.cli
Index: testsuite/integration/docker-keycloak/openfact-realm.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/docker-keycloak/openfact-realm.json	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ testsuite/integration/docker-keycloak/openfact-realm.json	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
@@ -334,6 +334,7 @@
 			"secret": "secret",
 			"enabled": true,
 			"baseUrl": "/openfact",
+			"directAccessGrantsEnabled": true,
 			"authorizationServicesEnabled": true,
 			"redirectUris": [
 				"http://localhost:4200/*",
@@ -342,6 +343,135 @@
 			"webOrigins": [
 				"http://localhost:4200",
 				"*"
+			],
+			"protocolMappers": [
+				{
+					"name": "Client IP Address",
+					"protocol": "openid-connect",
+					"protocolMapper": "oidc-usersessionmodel-note-mapper",
+					"consentRequired": false,
+					"consentText": "",
+					"config": {
+						"claim.name": "clientAddress",
+						"jsonType.label": "String",
+						"access.token.claim": true,
+						"id.token.claim": true,
+						"user.session.note": "clientAddress"
+					}
+				},
+				{
+					"name": "Client ID",
+					"protocol": "openid-connect",
+					"protocolMapper": "oidc-usersessionmodel-note-mapper",
+					"consentRequired": false,
+					"consentText": "",
+					"config": {
+						"claim.name": "clientId",
+						"jsonType.label": "String",
+						"access.token.claim": true,
+						"id.token.claim": true,
+						"user.session.note": "clientId"
+					}
+				},
+				{
+					"name": "Client Host",
+					"protocol": "openid-connect",
+					"protocolMapper": "oidc-usersessionmodel-note-mapper",
+					"consentRequired": false,
+					"consentText": "",
+					"config": {
+						"claim.name": "clientHost",
+						"jsonType.label": "String",
+						"access.token.claim": true,
+						"id.token.claim": true,
+						"user.session.note": "clientHost"
+					}
+				},
+				{
+					"name": "email",
+					"protocol": "openid-connect",
+					"protocolMapper": "oidc-usermodel-property-mapper",
+					"consentRequired": true,
+					"consentText": "${email}",
+					"config": {
+						"claim.name": "email",
+						"user.attribute": "email",
+						"jsonType.label": "String",
+						"access.token.claim": true,
+						"id.token.claim": true,
+						"userinfo.token.claim": true
+					}
+				},
+				{
+					"name": "username",
+					"protocol": "openid-connect",
+					"protocolMapper": "oidc-usermodel-property-mapper",
+					"consentRequired": true,
+					"consentText": "${username}",
+					"config": {
+						"claim.name": "preferred_username",
+						"user.attribute": "username",
+						"jsonType.label": "String",
+						"access.token.claim": true,
+						"id.token.claim": true,
+						"userinfo.token.claim": true
+					}
+				},
+				{
+					"name": "full name",
+					"protocol": "openid-connect",
+					"protocolMapper": "oidc-full-name-mapper",
+					"consentRequired": true,
+					"consentText": "${fullName}",
+					"config": {
+						"access.token.claim": true,
+						"id.token.claim": true
+					}
+				},
+				{
+					"name": "family name",
+					"protocol": "openid-connect",
+					"protocolMapper": "oidc-usermodel-property-mapper",
+					"consentRequired": true,
+					"consentText": "${familyName}",
+					"config": {
+						"claim.name": "family_name",
+						"user.attribute": "lastName",
+						"jsonType.label": "String",
+						"access.token.claim": true,
+						"id.token.claim": true,
+						"userinfo.token.claim": true
+					}
+				},
+				{
+					"name": "given name",
+					"protocol": "openid-connect",
+					"protocolMapper": "oidc-usermodel-property-mapper",
+					"consentRequired": true,
+					"consentText": "${username}",
+					"config": {
+						"claim.name": "given_name",
+						"user.attribute": "firstName",
+						"jsonType.label": "String",
+						"access.token.claim": true,
+						"id.token.claim": true,
+						"userinfo.token.claim": true
+					}
+				},
+				{
+					"name": "organization",
+					"protocol": "openid-connect",
+					"protocolMapper": "oidc-usermodel-attribute-mapper",
+					"consentRequired": false,
+					"config": {
+						"claim.name": "organization",
+						"user.attribute": "organization",
+						"jsonType.label": "String",
+						"access.token.claim": true,
+						"id.token.claim": true,
+						"userinfo.token.claim": "true"
+					}
+				}
 			]
 		}
 	]
Index: server-spi/src/main/java/org/openfact/keys/KeyMetadata.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/keys/KeyMetadata.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/keys/KeyMetadata.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,8 +1,5 @@
 package org.openfact.keys;
 
-import java.security.PublicKey;
-import java.security.cert.Certificate;
-
 public class KeyMetadata {
 
     public enum Status {
Index: distribution/feature-packs/server-feature-pack/assembly.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/feature-packs/server-feature-pack/assembly.xml	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
+++ distribution/feature-packs/server-feature-pack/assembly.xml	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -59,5 +59,12 @@
                 <include>**/**</include>
             </includes>
         </fileSet>
+        <fileSet>
+            <directory>../../../reports/src/main/resources/report</directory>
+            <outputDirectory>content/reports</outputDirectory>
+            <includes>
+                <include>**/**</include>
+            </includes>
+        </fileSet>
     </fileSets>
 </assembly>
\ No newline at end of file
Index: server-spi/src/main/java/org/openfact/file/FileProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/file/FileProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/file/FileProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -9,8 +9,6 @@
 
     FileModel getFileById(OrganizationModel organization, String id);
 
-    FileModel getFileByFileName(OrganizationModel organization, String fileName);
-
     boolean removeFile(OrganizationModel organization, FileModel file);
 
     void preRemove(OrganizationModel organization);
Index: server-spi/src/main/java/org/openfact/models/AdminRoles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/AdminRoles.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/AdminRoles.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,29 +1,7 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.models;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- */
 public class AdminRoles {
 
-    public static String APP_SUFFIX = "-organization";
-
     public static String ADMIN = "admin";
 
     public static String VIEW_ORGANIZATION = "view-organization";
@@ -45,6 +23,7 @@
 
             /**
              * */
-            MANAGE_ORGANIZATION, MANAGE_DOCUMENTS, MANAGE_EVENTS, MANAGE_FILES, MANAGE_REPORTS};
+            MANAGE_ORGANIZATION, MANAGE_DOCUMENTS, MANAGE_EVENTS, MANAGE_FILES, MANAGE_REPORTS
+    };
 
 }
Index: server-spi/src/main/java/org/openfact/models/DocumentModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/DocumentModel.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/DocumentModel.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -19,11 +19,11 @@
     String DOCUMENT_CURRENCY_CODE = "documentCurrencyCode";
     String CUSTOMER_REGISTRATION_NAME = "customerRegistrationName";
     String CUSTOMER_ASSIGNED_ACCOUNT_ID = "customerAssignedAccountId";
+    String CUSTOMER_ELECTRONIC_MAIL = "customerElectronicMail";
+
     String CREATED_TIMESTAMP = "createdTimestamp";
     String ENABLED = "enabled";
 
-    String REQUIRED_ACTIONS = "requiredActions";
-
     String getId();
     String getDocumentId();
     String getDocumentType();
@@ -31,6 +31,12 @@
     boolean isEnabled();
     void disable();
 
+    /**
+     * Document Line*/
+    List<DocumentLineModel> getDocumentLines();
+    DocumentLineModel addDocumentLine();
+    boolean removeDocumentLine(DocumentLineModel documentLine);
+
     /**
      * Organization
      */
@@ -72,6 +78,8 @@
     /**
      * Required Actions
      */
+    String REQUIRED_ACTIONS = "requiredActions";
+
     Set<String> getRequiredActions();
     void addRequiredAction(String action);
     void removeRequiredAction(String action);
@@ -96,15 +104,13 @@
     List<SendEventModel> getSendEvents(Integer firstResult, Integer maxResults);
     List<SendEventModel> searchForSendEvent(Map<String, String> params);
     List<SendEventModel> searchForSendEvent(Map<String, String> params, int firstResult, int maxResults);
-    int sendEventCount();
-    int sendEventCount(Map<String, String> params);
 
     /**
      * Attatched documents*/
     List<DocumentModel> getAttachedDocumentsAsOrigin();
     List<DocumentModel> getAttachedDocumentsAsDestiny();
     void addAttachedDocument(DocumentModel document);
-    boolean removeAttachedDocument(DocumentModel attatchedDocument);
+    boolean removeAttachedDocument(DocumentModel document);
 
     /**
      * Events interfaces
Index: server-spi/src/main/java/org/openfact/models/DocumentQuery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/DocumentQuery.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/DocumentQuery.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -35,8 +35,8 @@
     DocumentQuery addFilter(Map<String, String> filters);
     DocumentQuery addFilter(String key, Object value, SearchCriteriaFilterOperator operator);
 
-    DocumentQuery fromDate(LocalDateTime fromDate);
-    DocumentQuery toDate(LocalDateTime toDate);
+    DocumentQuery fromDate(LocalDateTime fromDate, boolean include);
+    DocumentQuery toDate(LocalDateTime toDate, boolean include);
 
     EntityQuery entityQuery();
     CountQuery countQuery();
Index: server-spi/src/main/java/org/openfact/models/AdminJobReport.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/AdminJobReport.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/AdminJobReport.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,6 +1,5 @@
 package org.openfact.models;
 
-
 public class AdminJobReport {
 
     private String id;
Index: model/jpa/src/main/resources/META-INF/jpa-changelog-1.0-beta-5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/resources/META-INF/jpa-changelog-1.0-beta-5.xml	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/resources/META-INF/jpa-changelog-1.0-beta-5.xml	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -3,7 +3,7 @@
                    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
-    <changeSet author="admin (generated)" id="1486994860560-1">
+    <changeSet author="admin (generated)" id="1487092066443-1">
         <createTable tableName="ADMIN_EVENT_ENTITY">
             <column name="ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -20,17 +20,17 @@
             <column name="ADMIN_EVENT_TIME" type="BIGINT"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-2">
-        <createTable tableName="ATTACHED_UBL_DOCUMENT">
-            <column name="UBL_DOCUMENT_ORIGIN_ID" type="VARCHAR(255)">
+    <changeSet author="admin (generated)" id="1487092066443-2">
+        <createTable tableName="ATTACHED_DOCUMENT">
+            <column name="DOCUMENT_ORIGIN_ID" type="VARCHAR(255)">
                 <constraints nullable="false"/>
             </column>
-            <column name="UBL_DOCUMENT_DESTINY_ID" type="VARCHAR(255)">
+            <column name="DOCUMENT_DESTINY_ID" type="VARCHAR(255)">
                 <constraints nullable="false"/>
             </column>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-3">
+    <changeSet author="admin (generated)" id="1487092066443-3">
         <createTable tableName="COMPONENT">
             <column name="ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -43,7 +43,7 @@
             <column name="ORGANIZATION_ID" type="VARCHAR(36)"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-4">
+    <changeSet author="admin (generated)" id="1487092066443-4">
         <createTable tableName="COMPONENT_CONFIG">
             <column name="ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -53,7 +53,65 @@
             <column name="COMPONENT_ID" type="VARCHAR(36)"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-5">
+    <changeSet author="admin (generated)" id="1487092066443-5">
+        <createTable tableName="DOCUMENT">
+            <column name="ID" type="VARCHAR(255)">
+                <constraints nullable="false"/>
+            </column>
+            <column name="CREATED_TIMESTAMP" type="timestamp"/>
+            <column name="CUSTOMER_ASSIGNED_ACCOUNT_ID" type="VARCHAR(255)"/>
+            <column name="CUSTOMER_ELECTRONIC_MAIL" type="VARCHAR(255)"/>
+            <column name="CUSTOMER_REGISTRATION_NAME" type="VARCHAR(255)"/>
+            <column name="CUSTOMER_SEND_EVENT_FAILURES" type="INT"/>
+            <column name="DOCUMENT_CURRENCY_CODE" type="VARCHAR(255)"/>
+            <column name="DOCUMENT_ID" type="VARCHAR(255)"/>
+            <column name="DOCUMENT_TYPE" type="VARCHAR(255)"/>
+            <column name="ENABLED" type="INT"/>
+            <column name="ORGANIZATION_ID" type="VARCHAR(255)"/>
+            <column name="THIRD_PARTY_SEND_EVENT_FAILURES" type="INT"/>
+            <column name="XML_FILE_ID" type="VARCHAR(255)"/>
+        </createTable>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-6">
+        <createTable tableName="DOCUMENT_ATTRIBUTE">
+            <column name="ID" type="VARCHAR(36)">
+                <constraints nullable="false"/>
+            </column>
+            <column name="NAME" type="VARCHAR(255)"/>
+            <column name="VALUE" type="VARCHAR(255)"/>
+            <column name="DOCUMENT_ID" type="VARCHAR(255)"/>
+        </createTable>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-7">
+        <createTable tableName="DOCUMENT_LINE">
+            <column name="ID" type="VARCHAR(255)">
+                <constraints nullable="false"/>
+            </column>
+            <column name="DOCUMENT_ID" type="VARCHAR(255)"/>
+        </createTable>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-8">
+        <createTable tableName="DOCUMENT_LINE_ATTRIBUTE">
+            <column name="NAME" type="VARCHAR(255)">
+                <constraints nullable="false"/>
+            </column>
+            <column name="VALUE" type="VARCHAR(255)"/>
+            <column name="DOCUMENT_LINE_ID" type="VARCHAR(255)">
+                <constraints nullable="false"/>
+            </column>
+        </createTable>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-9">
+        <createTable tableName="DOCUMENT_REQUIRED_ACTION">
+            <column name="REQUIRED_ACTION" type="VARCHAR(255)">
+                <constraints nullable="false"/>
+            </column>
+            <column name="DOCUMENT_ID" type="VARCHAR(255)">
+                <constraints nullable="false"/>
+            </column>
+        </createTable>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-10">
         <createTable tableName="EVENT_ENTITY">
             <column name="ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -67,7 +125,7 @@
             <column name="USER_ID" type="VARCHAR(255)"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-6">
+    <changeSet author="admin (generated)" id="1487092066443-11">
         <createTable tableName="JOB_REPORT">
             <column name="ID" type="VARCHAR(255)">
                 <constraints nullable="false"/>
@@ -82,7 +140,7 @@
             <column name="WRITE_COUNT" type="BIGINT"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-7">
+    <changeSet author="admin (generated)" id="1487092066443-12">
         <createTable tableName="MIGRATION_MODEL">
             <column name="ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -90,7 +148,7 @@
             <column name="VERSION" type="VARCHAR(36)"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-8">
+    <changeSet author="admin (generated)" id="1487092066443-13">
         <createTable tableName="ORGANIZATION">
             <column name="ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -125,7 +183,7 @@
             <column name="TASK_ENABLED" type="BOOLEAN"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-9">
+    <changeSet author="admin (generated)" id="1487092066443-14">
         <createTable tableName="ORGANIZATION_ATTRIBUTE">
             <column name="NAME" type="VARCHAR(255)">
                 <constraints nullable="false"/>
@@ -136,7 +194,7 @@
             </column>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-10">
+    <changeSet author="admin (generated)" id="1487092066443-15">
         <createTable tableName="ORGANIZATION_ENABLED_EVENT_TYPES">
             <column name="ORGANIZATION_ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -144,7 +202,7 @@
             <column name="VALUE" type="VARCHAR(255)"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-11">
+    <changeSet author="admin (generated)" id="1487092066443-16">
         <createTable tableName="ORGANIZATION_EVENTS_LISTENERS">
             <column name="ORGANIZATION_ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -152,7 +210,7 @@
             <column name="VALUE" type="VARCHAR(255)"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-12">
+    <changeSet author="admin (generated)" id="1487092066443-17">
         <createTable tableName="ORGANIZATION_FILE">
             <column name="ID" type="VARCHAR(255)">
                 <constraints nullable="false"/>
@@ -162,7 +220,7 @@
             <column name="ORGANIZATION_ID" type="VARCHAR(36)"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-13">
+    <changeSet author="admin (generated)" id="1487092066443-18">
         <createTable tableName="ORGANIZATION_SMTP_CONFIG">
             <column name="ORGANIZATION_ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -173,7 +231,7 @@
             </column>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-14">
+    <changeSet author="admin (generated)" id="1487092066443-19">
         <createTable tableName="ORGANIZATION_SUPPORTED_CURRENCIES">
             <column name="ORGANIZATION_ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -181,7 +239,7 @@
             <column name="VALUE" type="VARCHAR(255)"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-15">
+    <changeSet author="admin (generated)" id="1487092066443-20">
         <createTable tableName="ORGANIZATION_SUPPORTED_LOCALES">
             <column name="ORGANIZATION_ID" type="VARCHAR(36)">
                 <constraints nullable="false"/>
@@ -189,7 +247,19 @@
             <column name="VALUE" type="VARCHAR(255)"/>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-16">
+    <changeSet author="admin (generated)" id="1487092066443-21">
+        <createTable tableName="SEND_EVENT">
+            <column name="ID" type="VARCHAR(255)">
+                <constraints nullable="false"/>
+            </column>
+            <column name="CREATED_TIMESTAMP" type="timestamp"/>
+            <column name="DESCRIPTION" type="VARCHAR(400)"/>
+            <column name="DESTINY" type="VARCHAR(255)"/>
+            <column name="STATUS" type="VARCHAR(255)"/>
+            <column name="DOCUMENT_ID" type="VARCHAR(255)"/>
+        </createTable>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-22">
         <createTable tableName="SEND_EVENT_ATTACH_FILE">
             <column name="FILE_ID" type="VARCHAR(255)">
                 <constraints nullable="false"/>
@@ -199,7 +269,7 @@
             </column>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-17">
+    <changeSet author="admin (generated)" id="1487092066443-23">
         <createTable tableName="SEND_EVENT_ATTRIBUTE">
             <column name="NAME" type="VARCHAR(255)">
                 <constraints nullable="false"/>
@@ -210,212 +280,172 @@
             </column>
         </createTable>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-18">
-        <createTable tableName="UBL_DOCUMENT">
-            <column name="ID" type="VARCHAR(255)">
-                <constraints nullable="false"/>
-            </column>
-            <column name="CREATED_TIMESTAMP" type="timestamp"/>
-            <column name="CUSTOMER_ASSIGNED_ACCOUNT_ID" type="VARCHAR(255)"/>
-            <column name="CUSTOMER_ELECTRONIC_MAIL" type="VARCHAR(255)"/>
-            <column name="CUSTOMER_REGISTRATION_NAME" type="VARCHAR(255)"/>
-            <column name="CUSTOMER_SEND_EVENT_FAILURES" type="INT"/>
-            <column name="DOCUMENT_CURRENCY_CODE" type="VARCHAR(255)"/>
-            <column name="DOCUMENT_ID" type="VARCHAR(255)"/>
-            <column name="DOCUMENT_TYPE" type="VARCHAR(255)"/>
-            <column name="ENABLED" type="INT"/>
-            <column name="ORGANIZATION_ID" type="VARCHAR(255)"/>
-            <column name="THIRD_PARTY_SEND_EVENT_FAILURES" type="INT"/>
-            <column name="XML_FILE_ID" type="VARCHAR(255)"/>
-        </createTable>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-19">
-        <createTable tableName="UBL_DOCUMENT_ATTRIBUTE">
-            <column name="ID" type="VARCHAR(36)">
-                <constraints nullable="false"/>
-            </column>
-            <column name="NAME" type="VARCHAR(255)"/>
-            <column name="VALUE" type="VARCHAR(255)"/>
-            <column name="UBL_DOCUMENT_ID" type="VARCHAR(255)"/>
-        </createTable>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-20">
-        <createTable tableName="UBL_DOCUMENT_REQUIRED_ACTION">
-            <column name="REQUIRED_ACTION" type="VARCHAR(255)">
-                <constraints nullable="false"/>
-            </column>
-            <column name="UBL_DOCUMENT_ID" type="VARCHAR(255)">
-                <constraints nullable="false"/>
-            </column>
-        </createTable>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-21">
-        <createTable tableName="UBL_DOCUMENT_SEND_EVENT">
-            <column name="ID" type="VARCHAR(255)">
-                <constraints nullable="false"/>
-            </column>
-            <column name="CREATED_TIMESTAMP" type="timestamp"/>
-            <column name="DESCRIPTION" type="VARCHAR(400)"/>
-            <column name="DESTINY" type="VARCHAR(255)"/>
-            <column name="STATUS" type="VARCHAR(255)"/>
-            <column name="UBL_DOCUMENT_ID" type="VARCHAR(255)"/>
-        </createTable>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-22">
+    <changeSet author="admin (generated)" id="1487092066443-24">
         <addPrimaryKey columnNames="ORGANIZATION_ID, NAME" tableName="ORGANIZATION_SMTP_CONFIG"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-23">
+    <changeSet author="admin (generated)" id="1487092066443-25">
         <addPrimaryKey columnNames="ID" constraintName="ADMIN_EVENT_ENTITYPK" tableName="ADMIN_EVENT_ENTITY"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-24">
-        <addPrimaryKey columnNames="UBL_DOCUMENT_DESTINY_ID, UBL_DOCUMENT_ORIGIN_ID"
-                       constraintName="ATTACHED_UBL_DOCUMENTPK" tableName="ATTACHED_UBL_DOCUMENT"/>
+    <changeSet author="admin (generated)" id="1487092066443-26">
+        <addPrimaryKey columnNames="DOCUMENT_DESTINY_ID, DOCUMENT_ORIGIN_ID" constraintName="ATTACHED_DOCUMENTPK"
+                       tableName="ATTACHED_DOCUMENT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-25">
+    <changeSet author="admin (generated)" id="1487092066443-27">
         <addPrimaryKey columnNames="ID" constraintName="COMPONENTPK" tableName="COMPONENT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-26">
+    <changeSet author="admin (generated)" id="1487092066443-28">
         <addPrimaryKey columnNames="ID" constraintName="COMPONENT_CONFIGPK" tableName="COMPONENT_CONFIG"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-27">
+    <changeSet author="admin (generated)" id="1487092066443-29">
+        <addPrimaryKey columnNames="ID" constraintName="DOCUMENTPK" tableName="DOCUMENT"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-30">
+        <addPrimaryKey columnNames="ID" constraintName="DOCUMENT_ATTRIBUTEPK" tableName="DOCUMENT_ATTRIBUTE"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-31">
+        <addPrimaryKey columnNames="ID" constraintName="DOCUMENT_LINEPK" tableName="DOCUMENT_LINE"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-32">
+        <addPrimaryKey columnNames="DOCUMENT_LINE_ID, NAME" constraintName="DOCUMENT_LINE_ATTRIBUTEPK"
+                       tableName="DOCUMENT_LINE_ATTRIBUTE"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-33">
+        <addPrimaryKey columnNames="REQUIRED_ACTION, DOCUMENT_ID" constraintName="DOCUMENT_REQUIRED_ACTIONPK"
+                       tableName="DOCUMENT_REQUIRED_ACTION"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-34">
         <addPrimaryKey columnNames="ID" constraintName="EVENT_ENTITYPK" tableName="EVENT_ENTITY"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-28">
+    <changeSet author="admin (generated)" id="1487092066443-35">
         <addPrimaryKey columnNames="ID" constraintName="JOB_REPORTPK" tableName="JOB_REPORT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-29">
+    <changeSet author="admin (generated)" id="1487092066443-36">
         <addPrimaryKey columnNames="ID" constraintName="MIGRATION_MODELPK" tableName="MIGRATION_MODEL"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-30">
+    <changeSet author="admin (generated)" id="1487092066443-37">
         <addPrimaryKey columnNames="ID" constraintName="ORGANIZATIONPK" tableName="ORGANIZATION"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-31">
+    <changeSet author="admin (generated)" id="1487092066443-38">
         <addPrimaryKey columnNames="NAME, ORGANIZATION_ID" constraintName="ORGANIZATION_ATTRIBUTEPK"
                        tableName="ORGANIZATION_ATTRIBUTE"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-32">
+    <changeSet author="admin (generated)" id="1487092066443-39">
         <addPrimaryKey columnNames="ID" constraintName="ORGANIZATION_FILEPK" tableName="ORGANIZATION_FILE"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-33">
+    <changeSet author="admin (generated)" id="1487092066443-40">
+        <addPrimaryKey columnNames="ID" constraintName="SEND_EVENTPK" tableName="SEND_EVENT"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-41">
         <addPrimaryKey columnNames="FILE_ID, SEND_EVENT_ID" constraintName="SEND_EVENT_ATTACH_FILEPK"
                        tableName="SEND_EVENT_ATTACH_FILE"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-34">
+    <changeSet author="admin (generated)" id="1487092066443-42">
         <addPrimaryKey columnNames="NAME, SEND_EVENT_ID" constraintName="SEND_EVENT_ATTRIBUTEPK"
                        tableName="SEND_EVENT_ATTRIBUTE"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-35">
-        <addPrimaryKey columnNames="ID" constraintName="UBL_DOCUMENTPK" tableName="UBL_DOCUMENT"/>
+    <changeSet author="admin (generated)" id="1487092066443-43">
+        <addUniqueConstraint columnNames="ORGANIZATION_ID, DOCUMENT_TYPE, DOCUMENT_ID" tableName="DOCUMENT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-36">
-        <addPrimaryKey columnNames="ID" constraintName="UBL_DOCUMENT_ATTRIBUTEPK" tableName="UBL_DOCUMENT_ATTRIBUTE"/>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-37">
-        <addPrimaryKey columnNames="REQUIRED_ACTION, UBL_DOCUMENT_ID" constraintName="UBL_DOCUMENT_REQUIRED_ACTIONPK"
-                       tableName="UBL_DOCUMENT_REQUIRED_ACTION"/>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-38">
-        <addPrimaryKey columnNames="ID" constraintName="UBL_DOCUMENT_SEND_EVENTPK" tableName="UBL_DOCUMENT_SEND_EVENT"/>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-39">
+    <changeSet author="admin (generated)" id="1487092066443-44">
         <addUniqueConstraint columnNames="NAME" tableName="ORGANIZATION"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-40">
-        <addUniqueConstraint columnNames="ORGANIZATION_ID, DOCUMENT_TYPE, DOCUMENT_ID" tableName="UBL_DOCUMENT"/>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-41">
+    <changeSet author="admin (generated)" id="1487092066443-45">
         <addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_SUPPORTED_LOCALES"
                                  constraintName="FK_1qo6exk81cr0pm5lhoi3orsxh" deferrable="false"
                                  initiallyDeferred="false" referencedColumnNames="ID"
                                  referencedTableName="ORGANIZATION"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-42">
-        <addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_ID" baseTableName="UBL_DOCUMENT_REQUIRED_ACTION"
-                                 constraintName="FK_237kkj1euexmsnmdq1sfjteaw" deferrable="false"
-                                 initiallyDeferred="false" referencedColumnNames="ID"
-                                 referencedTableName="UBL_DOCUMENT"/>
+    <changeSet author="admin (generated)" id="1487092066443-46">
+        <addForeignKeyConstraint baseColumnNames="DOCUMENT_ID" baseTableName="SEND_EVENT"
+                                 constraintName="FK_2xn1l7g83b40itlthmsfb4v33" deferrable="false"
+                                 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-43">
+    <changeSet author="admin (generated)" id="1487092066443-47">
+        <addForeignKeyConstraint baseColumnNames="DOCUMENT_ID" baseTableName="DOCUMENT_LINE"
+                                 constraintName="FK_3atj3xpcoke5jn3gno5rnubpf" deferrable="false"
+                                 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-48">
         <addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_ATTRIBUTE"
                                  constraintName="FK_519erdjtqivq189pm1ouanaix" deferrable="false"
                                  initiallyDeferred="false" referencedColumnNames="ID"
                                  referencedTableName="ORGANIZATION"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-44">
-        <addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_ID" baseTableName="UBL_DOCUMENT_ATTRIBUTE"
-                                 constraintName="FK_88vm6qhqupkse82te7syyc9f9" deferrable="false"
-                                 initiallyDeferred="false" referencedColumnNames="ID"
-                                 referencedTableName="UBL_DOCUMENT"/>
+    <changeSet author="admin (generated)" id="1487092066443-49">
+        <addForeignKeyConstraint baseColumnNames="DOCUMENT_ORIGIN_ID" baseTableName="ATTACHED_DOCUMENT"
+                                 constraintName="FK_53ok8w237vjg4eqojf169yv7d" deferrable="false"
+                                 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-45">
+    <changeSet author="admin (generated)" id="1487092066443-50">
+        <addForeignKeyConstraint baseColumnNames="DOCUMENT_DESTINY_ID" baseTableName="ATTACHED_DOCUMENT"
+                                 constraintName="FK_5ijhykq3lc1k27nb5bo1ccc2v" deferrable="false"
+                                 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-51">
         <addForeignKeyConstraint baseColumnNames="SEND_EVENT_ID" baseTableName="SEND_EVENT_ATTACH_FILE"
                                  constraintName="FK_8ik9khfatc7fw8308p7yr9u2r" deferrable="false"
-                                 initiallyDeferred="false" referencedColumnNames="ID"
-                                 referencedTableName="UBL_DOCUMENT_SEND_EVENT"/>
+                                 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="SEND_EVENT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-46">
+    <changeSet author="admin (generated)" id="1487092066443-52">
         <addForeignKeyConstraint baseColumnNames="COMPONENT_ID" baseTableName="COMPONENT_CONFIG"
                                  constraintName="FK_bol1wtkpc3ssx56q7hhhm2p2o" deferrable="false"
                                  initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="COMPONENT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-47">
+    <changeSet author="admin (generated)" id="1487092066443-53">
+        <addForeignKeyConstraint baseColumnNames="DOCUMENT_ID" baseTableName="DOCUMENT_REQUIRED_ACTION"
+                                 constraintName="FK_cg9i3dcuixpaxrmrbwnvb9104" deferrable="false"
+                                 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-54">
         <addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_SMTP_CONFIG"
                                  constraintName="FK_dn2ibury7345dyopspmw1rid8" deferrable="false"
                                  initiallyDeferred="false" referencedColumnNames="ID"
                                  referencedTableName="ORGANIZATION"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-48">
+    <changeSet author="admin (generated)" id="1487092066443-55">
         <addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_EVENTS_LISTENERS"
                                  constraintName="FK_duvurkr1qtb4hr47woloe2p4p" deferrable="false"
                                  initiallyDeferred="false" referencedColumnNames="ID"
                                  referencedTableName="ORGANIZATION"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-49">
+    <changeSet author="admin (generated)" id="1487092066443-56">
+        <addForeignKeyConstraint baseColumnNames="DOCUMENT_LINE_ID" baseTableName="DOCUMENT_LINE_ATTRIBUTE"
+                                 constraintName="FK_eq16a0olnwk64uk1eavh55ct5" deferrable="false"
+                                 initiallyDeferred="false" referencedColumnNames="ID"
+                                 referencedTableName="DOCUMENT_LINE"/>
+    </changeSet>
+    <changeSet author="admin (generated)" id="1487092066443-57">
         <addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_ENABLED_EVENT_TYPES"
                                  constraintName="FK_f3fu6rasfl9f6cytpbf6ulfpb" deferrable="false"
                                  initiallyDeferred="false" referencedColumnNames="ID"
                                  referencedTableName="ORGANIZATION"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-50">
+    <changeSet author="admin (generated)" id="1487092066443-58">
         <addForeignKeyConstraint baseColumnNames="SEND_EVENT_ID" baseTableName="SEND_EVENT_ATTRIBUTE"
                                  constraintName="FK_f8wk6u2vwb8rdnk7g9u7qxqg6" deferrable="false"
-                                 initiallyDeferred="false" referencedColumnNames="ID"
-                                 referencedTableName="UBL_DOCUMENT_SEND_EVENT"/>
+                                 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="SEND_EVENT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-51">
-        <addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_ID" baseTableName="UBL_DOCUMENT_SEND_EVENT"
-                                 constraintName="FK_fsv1qt3hf79hgt951pcdxppls" deferrable="false"
-                                 initiallyDeferred="false" referencedColumnNames="ID"
-                                 referencedTableName="UBL_DOCUMENT"/>
+    <changeSet author="admin (generated)" id="1487092066443-59">
+        <addForeignKeyConstraint baseColumnNames="DOCUMENT_ID" baseTableName="DOCUMENT_ATTRIBUTE"
+                                 constraintName="FK_ikxgy3o58h88lyxndcprytejt" deferrable="false"
+                                 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-52">
-        <addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_DESTINY_ID" baseTableName="ATTACHED_UBL_DOCUMENT"
-                                 constraintName="FK_gac09g6urt3wch9dh9ua11ur8" deferrable="false"
-                                 initiallyDeferred="false" referencedColumnNames="ID"
-                                 referencedTableName="UBL_DOCUMENT"/>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-53">
+    <changeSet author="admin (generated)" id="1487092066443-60">
         <addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_FILE"
                                  constraintName="FK_j51qwmjvalclh1pdqlfxeipae" deferrable="false"
                                  initiallyDeferred="false" referencedColumnNames="ID"
                                  referencedTableName="ORGANIZATION"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-54">
+    <changeSet author="admin (generated)" id="1487092066443-61">
         <addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_SUPPORTED_CURRENCIES"
                                  constraintName="FK_luafukpnuxu3ww53l5uy47d3f" deferrable="false"
                                  initiallyDeferred="false" referencedColumnNames="ID"
                                  referencedTableName="ORGANIZATION"/>
     </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-55">
+    <changeSet author="admin (generated)" id="1487092066443-62">
         <addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="COMPONENT"
                                  constraintName="FK_mn8p186ks2lsd1kxfws5mldet" deferrable="false"
                                  initiallyDeferred="false" referencedColumnNames="ID"
                                  referencedTableName="ORGANIZATION"/>
-    </changeSet>
-    <changeSet author="admin (generated)" id="1486994860560-56">
-        <addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_ORIGIN_ID" baseTableName="ATTACHED_UBL_DOCUMENT"
-                                 constraintName="FK_t65m2o4yctrisygr0eg7l30x3" deferrable="false"
-                                 initiallyDeferred="false" referencedColumnNames="ID"
-                                 referencedTableName="UBL_DOCUMENT"/>
     </changeSet>
 </databaseChangeLog>
Index: server-spi/src/main/java/org/openfact/models/DocumentProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/DocumentProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/DocumentProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -17,16 +17,14 @@
 package org.openfact.models;
 
 import org.openfact.models.enums.DocumentType;
-import org.openfact.models.enums.RequiredAction;
-import org.openfact.models.search.SearchCriteriaModel;
-import org.openfact.models.search.SearchResultsModel;
 import org.openfact.provider.Provider;
 
 import java.util.List;
-import java.util.Map;
 
 public interface DocumentProvider extends Provider {
 
+    DocumentQuery createQuery(OrganizationModel organization);
+
     DocumentModel addDocument(String documentType, String documentId, OrganizationModel organization);
     DocumentModel addDocument(DocumentType documentType, String documentId, OrganizationModel organization);
 
@@ -66,16 +64,4 @@
     List<DocumentModel> searchForDocument(String filterText, OrganizationModel organization);
     List<DocumentModel> searchForDocument(String filterText, OrganizationModel organization, int firstResult, int maxResults);
 
-    SearchResultsModel<DocumentModel> searchForDocument(SearchCriteriaModel criteria, OrganizationModel organization);
-    SearchResultsModel<DocumentModel> searchForDocument(String filterText, SearchCriteriaModel criteria, OrganizationModel organization);
-
-    // Searching by InvoiceModel.attribute (not property)
-    List<DocumentModel> searchForDocumentByAttribute(String attrName, String attrValue, OrganizationModel organization);
-    List<DocumentModel> searchForDocumentByAttribute(String attrName, String attrValue, OrganizationModel organization, int firstResult, int maxResults);
-
-    List<DocumentModel> searchForDocumentByAttribute(String documentType, String attrName, String attrValue, OrganizationModel organization);
-    List<DocumentModel> searchForDocumentByAttribute(String documentType, String attrName, String attrValue, OrganizationModel organization, int firstResult, int maxResults);
-
-    DocumentQuery createQuery(OrganizationModel organization);
-
 }
Index: server-spi/src/main/java/org/openfact/models/DocumentLineModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/DocumentLineModel.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
+++ server-spi/src/main/java/org/openfact/models/DocumentLineModel.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -0,0 +1,29 @@
+package org.openfact.models;
+
+import java.util.Map;
+
+public interface DocumentLineModel {
+
+    String getId();
+
+    void setAttribute(String name, String value);
+
+    void setAttribute(String name, Boolean value);
+
+    void setAttribute(String name, Integer value);
+
+    void setAttribute(String name, Long value);
+
+    void removeAttribute(String name);
+
+    String getAttribute(String name);
+
+    Integer getAttribute(String name, Integer defaultValue);
+
+    Long getAttribute(String name, Long defaultValue);
+
+    Boolean getAttribute(String name, Boolean defaultValue);
+
+    Map<String, String> getAttributes();
+
+}
Index: server-spi/src/main/java/org/openfact/models/JobReportProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/JobReportProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/JobReportProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -3,7 +3,6 @@
 import org.openfact.provider.Provider;
 
 import java.util.List;
-import java.util.Map;
 
 public interface JobReportProvider extends Provider {
 
Index: server-spi/src/main/java/org/openfact/models/OrganizationModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/OrganizationModel.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/OrganizationModel.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -20,77 +20,59 @@
     String REGISTRATION_NAME = "registrationName";
 
     String getId();
+    LocalDateTime getCreatedTimestamp();
 
     String getName();
-
     void setName(String name);
 
     String getDescription();
-
     void setDescription(String description);
 
     boolean isEnabled();
-
     void setEnabled(boolean enabled);
 
     String getAssignedIdentificationId();
-
     void setAssignedIdentificationId(String assignedIdentificationId);
 
     String getAdditionalAccountId();
-
     void setAdditionalAccountId(String additionalAccount);
 
     String getSupplierName();
-
     void setSupplierName(String supplierName);
 
     String getRegistrationName();
-
     void setRegistrationName(String registrationName);
 
-    LocalDateTime getCreatedTimestamp();
-
     /**
      * Postal address
      */
     String getPostalAddressId();
-
     void setPostalAddressId(String postalAddressId);
 
     String getStreetName();
-
     void setStreetName(String streetName);
 
     String getCitySubdivisionName();
-
     void setCitySubdivisionName(String citySubdivisionName);
 
     String getCityName();
-
     void setCityName(String cityName);
 
     String getCountrySubentity();
-
     void setCountrySubentity(String countrySubentity);
 
     String getDistrict();
-
     void setDistrict(String district);
 
     String getCountryIdentificationCode();
-
     void setCountryIdentificationCode(String countryIdentificationCode);
 
     /**
      * Themes
      */
     String getEmailTheme();
-
     void setEmailTheme(String name);
-
     String getReportTheme();
-
     void setReportTheme(String name);
 
 
@@ -98,113 +80,70 @@
      * Internationalization
      */
     boolean isInternationalizationEnabled();
-
     void setInternationalizationEnabled(boolean enabled);
-
     Set<String> getSupportedLocales();
-
     void setSupportedLocales(Set<String> locales);
-
     String getDefaultLocale();
-
     void setDefaultLocale(String locale);
 
     /**
      * Task schedules
      */
     Date getTaskFirstTime();
-
     void setTaskFirstTime(Date firstTime);
-
     long getTaskDelay();
-
     void setTaskDelay(long taskDelay);
-
     boolean isTasksEnabled();
-
     void setTaskEnabled(boolean taskEnabled);
 
     /**
      * Currencies
      */
     Set<String> getSupportedCurrencies();
-
     void setSupportedCurrencies(Set<String> currencies);
-
     String getDefaultCurrency();
-
     void setDefaultCurrency(String currency);
 
     /**
      * Events
      */
     boolean isEventsEnabled();
-
     void setEventsEnabled(boolean enabled);
-
     Set<String> getEventsListeners();
-
     void setEventsListeners(Set<String> listeners);
-
     Set<String> getEnabledEventTypes();
-
     void setEnabledEventTypes(Set<String> enabledEventTypes);
-
     boolean isAdminEventsEnabled();
-
     void setAdminEventsEnabled(boolean enabled);
-
     boolean isAdminEventsDetailsEnabled();
-
     void setAdminEventsDetailsEnabled(boolean enabled);
-
     long getEventsExpiration();
-
     void setEventsExpiration(long expiration);
 
     /**
      * Smtp for email
      */
     Map<String, String> getSmtpConfig();
-
     void setSmtpConfig(Map<String, String> smtpConfig);
 
     /**
      * Attributes
      */
     void setAttribute(String name, String value);
-
     void setAttribute(String name, Boolean value);
-
     void setAttribute(String name, Integer value);
-
     void setAttribute(String name, Long value);
-
     void removeAttribute(String name);
-
     String getAttribute(String name);
-
     Integer getAttribute(String name, Integer defaultValue);
-
     Long getAttribute(String name, Long defaultValue);
-
     Boolean getAttribute(String name, Boolean defaultValue);
-
     Map<String, String> getAttributes();
-
     String getDisplayName();
-
     void setDisplayName(String displayName);
-
     String getDisplayNameHtml();
-
     void setDisplayNameHtml(String displayNameHtml);
 
-    /**
-     * Attatched documents
-     */
-    void removeAttachedDocuments(DocumentType documentType, String documentId);
-
     /**
      * Adds component model. Will call onCreate() method of ComponentFactory
      *
@@ -220,19 +159,12 @@
      * @return
      */
     ComponentModel importComponentModel(ComponentModel model);
-
     void updateComponent(ComponentModel component);
-
     void removeComponent(ComponentModel component);
-
     void removeComponents(String parentId);
-
     List<ComponentModel> getComponents(String parentId, String providerType);
-
     List<ComponentModel> getComponents(String parentId);
-
     List<ComponentModel> getComponents();
-
     ComponentModel getComponent(String id);
 
     /**
@@ -242,7 +174,7 @@
 
     void setBrowserSecurityHeaders(Map<String, String> headers);
 
-    public static enum RequiredAction {
+    enum RequiredAction {
         ACTION1, ACTION2, ACTION3, ACTION4
     }
 
Index: model/jpa/src/main/java/org/openfact/models/jpa/UBLDocumentAdapter.java
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/UBLDocumentAdapter.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/DocumentAdapter.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -23,7 +23,6 @@
 import org.openfact.common.converts.DocumentUtils;
 import org.openfact.common.util.MultivaluedHashMap;
 import org.openfact.file.FileModel;
-import org.openfact.file.FileProvider;
 import org.openfact.models.*;
 import org.openfact.models.enums.DestinyType;
 import org.openfact.models.enums.DocumentType;
@@ -41,12 +40,12 @@
 import java.util.*;
 import java.util.stream.Collectors;
 
-public class UBLDocumentAdapter implements DocumentModel, JpaModel<UBLDocumentEntity> {
+public class DocumentAdapter implements DocumentModel, JpaModel<DocumentEntity> {
 
-    protected static final Logger logger = Logger.getLogger(UBLDocumentAdapter.class);
+    protected static final Logger logger = Logger.getLogger(DocumentAdapter.class);
 
     protected OrganizationModel organization;
-    protected UBLDocumentEntity ublDocument;
+    protected DocumentEntity document;
     protected EntityManager em;
     protected OpenfactSession session;
 
@@ -54,53 +53,85 @@
     protected Document xmlDocument;
     protected JSONObject jsonObject;
 
-    public UBLDocumentAdapter(OpenfactSession session, OrganizationModel organization, EntityManager em, UBLDocumentEntity documentEntity) {
+    public DocumentAdapter(OpenfactSession session, OrganizationModel organization, EntityManager em, DocumentEntity documentEntity) {
         this.organization = organization;
         this.session = session;
         this.em = em;
-        this.ublDocument = documentEntity;
+        this.document = documentEntity;
     }
 
-    public static UBLDocumentEntity toEntity(DocumentModel model, EntityManager em) {
-        if (model instanceof UBLDocumentAdapter) {
-            return ((UBLDocumentAdapter) model).getEntity();
+    public static DocumentEntity toEntity(DocumentModel model, EntityManager em) {
+        if (model instanceof DocumentAdapter) {
+            return ((DocumentAdapter) model).getEntity();
         }
-        return em.getReference(UBLDocumentEntity.class, model.getId());
+        return em.getReference(DocumentEntity.class, model.getId());
+    }
+
+    public DocumentLineModel toModel(DocumentLineEntity line) {
+        return new DocumentLineAdapter(session, this, em, line);
     }
 
     @Override
-    public UBLDocumentEntity getEntity() {
-        return ublDocument;
+    public DocumentEntity getEntity() {
+        return document;
     }
 
     @Override
     public String getId() {
-        return ublDocument.getId();
+        return document.getId();
     }
 
     @Override
     public String getDocumentId() {
-        return ublDocument.getDocumentId();
+        return document.getDocumentId();
     }
 
     @Override
     public String getDocumentType() {
-        return ublDocument.getDocumentType();
+        return document.getDocumentType();
     }
 
     @Override
     public LocalDateTime getCreatedTimestamp() {
-        return ublDocument.getCreatedTimestamp();
+        return document.getCreatedTimestamp();
     }
 
     @Override
     public boolean isEnabled() {
-        return ublDocument.isEnabled();
+        return document.isEnabled();
     }
 
     @Override
     public void disable() {
-        ublDocument.setEnabled(false);
+        document.setEnabled(false);
+    }
+
+    @Override
+    public List<DocumentLineModel> getDocumentLines() {
+        return document.getLines().stream().map(this::toModel).collect(Collectors.toList());
+    }
+
+    @Override
+    public DocumentLineModel addDocumentLine() {
+        DocumentLineEntity entity = new DocumentLineEntity();
+        entity.setDocument(document);
+        em.persist(entity);
+        return toModel(entity);
+    }
+
+    @Override
+    public boolean removeDocumentLine(DocumentLineModel documentLine) {
+        boolean result = false;
+        Iterator<DocumentLineEntity> it = document.getLines().iterator();
+        while (it.hasNext()) {
+            DocumentLineEntity line = it.next();
+            if (line.getId().equals(documentLine.getId())) {
+                it.remove();
+                em.remove(line);
+                result = true;
+            }
+        }
+        return result;
     }
 
     @Override
@@ -110,49 +141,48 @@
 
     @Override
     public String getDocumentCurrencyCode() {
-        return ublDocument.getDocumentCurrencyCode();
+        return document.getDocumentCurrencyCode();
     }
 
     @Override
     public void setDocumentCurrencyCode(String currencyCode) {
-        ublDocument.setDocumentCurrencyCode(currencyCode);
+        document.setDocumentCurrencyCode(currencyCode);
     }
 
     @Override
     public String getCustomerRegistrationName() {
-        return ublDocument.getCustomerRegistrationName();
+        return document.getCustomerRegistrationName();
     }
 
     @Override
     public void setCustomerRegistrationName(String value) {
-        ublDocument.setCustomerRegistrationName(value);
+        document.setCustomerRegistrationName(value);
     }
 
     @Override
     public String getCustomerAssignedAccountId() {
-        return ublDocument.getCustomerAssignedAccountId();
+        return document.getCustomerAssignedAccountId();
     }
 
     @Override
     public void setCustomerAssignedAccountId(String value) {
-        ublDocument.setCustomerAssignedAccountId(value);
+        document.setCustomerAssignedAccountId(value);
     }
 
     @Override
     public String getCustomerElectronicMail() {
-        return ublDocument.getCustomerElectronicMail();
+        return document.getCustomerElectronicMail();
     }
 
     @Override
     public void setCustomerElectronicMail(String value) {
-        ublDocument.setCustomerElectronicMail(value);
+        document.setCustomerElectronicMail(value);
     }
 
     @Override
     public FileModel getXmlAsFile() {
-        if (xmlFile == null && ublDocument.getXmlFileId() != null) {
-            FileProvider provider = session.getProvider(FileProvider.class);
-            xmlFile = provider.getFileById(organization, ublDocument.getXmlFileId());
+        if (xmlFile == null && document.getXmlFileId() != null) {
+            xmlFile = session.files().getFileById(organization, document.getXmlFileId());
         }
         return xmlFile;
     }
@@ -160,7 +190,7 @@
     @Override
     public void attachXmlFile(FileModel file) {
         xmlFile = file;
-        ublDocument.setXmlFileId(xmlFile.getId());
+        document.setXmlFileId(xmlFile.getId());
     }
 
     @Override
@@ -186,21 +216,21 @@
                 if (document != null) {
                     String documentString = DocumentUtils.getDocumentToString(document);
                     jsonObject = JSONObjectUtils.renameKey(XML.toJSONObject(documentString), ".*:", "");
-                    DocumentType documentType = DocumentType.getFromString(ublDocument.getDocumentType());
+                    DocumentType documentType = DocumentType.getFromString(this.document.getDocumentType());
                     if (documentType != null) {
                         switch (documentType) {
                             case INVOICE:
-                                jsonObject = JSONObjectUtils.getJSONObject(jsonObject, "Invoice");
+                                jsonObject = JSONObjectUtils.getJSONObject(jsonObject, DocumentType.INVOICE.getXmlWrapper());
                                 break;
                             case CREDIT_NOTE:
-                                jsonObject = JSONObjectUtils.getJSONObject(jsonObject, "CreditNote");
+                                jsonObject = JSONObjectUtils.getJSONObject(jsonObject, DocumentType.CREDIT_NOTE.getXmlWrapper());
                                 break;
                             case DEBIT_NOTE:
-                                jsonObject = JSONObjectUtils.getJSONObject(jsonObject, "DebitNote");
+                                jsonObject = JSONObjectUtils.getJSONObject(jsonObject, DocumentType.DEBIT_NOTE.getXmlWrapper());
                                 break;
                         }
                     } else {
-                        String jsonName = Arrays.stream(ublDocument.getDocumentType().toLowerCase().split("_"))
+                        String jsonName = Arrays.stream(this.document.getDocumentType().toLowerCase().split("_"))
                                 .map(c -> c.substring(0, 1).toUpperCase() + c.substring(1))
                                 .reduce("", String::concat);
 
@@ -225,8 +255,8 @@
     @Override
     public void setSingleAttribute(String name, String value) {
         String firstExistingAttrId = null;
-        List<UBLDocumentAttributeEntity> toRemove = new ArrayList<>();
-        for (UBLDocumentAttributeEntity attr : ublDocument.getAttributes()) {
+        List<DocumentAttributeEntity> toRemove = new ArrayList<>();
+        for (DocumentAttributeEntity attr : document.getAttributes()) {
             if (attr.getName().equals(name)) {
                 if (firstExistingAttrId == null) {
                     attr.setValue(value);
@@ -239,14 +269,14 @@
 
         if (firstExistingAttrId != null) {
             // Remove attributes through HQL to avoid StaleUpdateException
-            Query query = em.createNamedQuery("deleteUblDocumentAttributesByNameAndUblDocumentOtherThan");
+            Query query = em.createNamedQuery("deleteDocumentAttributesByNameAndDocumentPkIdOtherThan");
             query.setParameter("name", name);
-            query.setParameter("documentId", ublDocument.getId());
+            query.setParameter("documentPkId", document.getId());
             query.setParameter("attrId", firstExistingAttrId);
             int numUpdated = query.executeUpdate();
 
             // Remove attribute from local entity
-            ublDocument.getAttributes().removeAll(toRemove);
+            document.getAttributes().removeAll(toRemove);
         } else {
 
             persistAttributeValue(name, value);
@@ -265,36 +295,36 @@
     }
 
     private void persistAttributeValue(String name, String value) {
-        UBLDocumentAttributeEntity attr = new UBLDocumentAttributeEntity();
+        DocumentAttributeEntity attr = new DocumentAttributeEntity();
         attr.setId(OpenfactModelUtils.generateId());
         attr.setName(name);
         attr.setValue(value);
-        attr.setUblDocument(ublDocument);
+        attr.setDocument(document);
         em.persist(attr);
-        ublDocument.getAttributes().add(attr);
+        document.getAttributes().add(attr);
     }
 
     @Override
     public void removeAttribute(String name) {
         // Remove attribute through HQL to avoid StaleUpdateException
-        Query query = em.createNamedQuery("deleteUblDocumentAttributesByNameAndUblDocument");
+        Query query = em.createNamedQuery("deleteDocumentAttributesByNameAndDocumentPkId");
         query.setParameter("name", name);
-        query.setParameter("documentId", ublDocument.getId());
+        query.setParameter("documentPkId", document.getId());
         int numUpdated = query.executeUpdate();
 
         // Also remove attributes from local user entity
-        List<UBLDocumentAttributeEntity> toRemove = new ArrayList<>();
-        for (UBLDocumentAttributeEntity attr : ublDocument.getAttributes()) {
+        List<DocumentAttributeEntity> toRemove = new ArrayList<>();
+        for (DocumentAttributeEntity attr : document.getAttributes()) {
             if (attr.getName().equals(name)) {
                 toRemove.add(attr);
             }
         }
-        ublDocument.getAttributes().removeAll(toRemove);
+        document.getAttributes().removeAll(toRemove);
     }
 
     @Override
     public String getFirstAttribute(String name) {
-        for (UBLDocumentAttributeEntity attr : ublDocument.getAttributes()) {
+        for (DocumentAttributeEntity attr : document.getAttributes()) {
             if (attr.getName().equals(name)) {
                 return attr.getValue();
             }
@@ -305,7 +335,7 @@
     @Override
     public List<String> getAttribute(String name) {
         List<String> result = new ArrayList<>();
-        for (UBLDocumentAttributeEntity attr : ublDocument.getAttributes()) {
+        for (DocumentAttributeEntity attr : document.getAttributes()) {
             if (attr.getName().equals(name)) {
                 result.add(attr.getValue());
             }
@@ -316,7 +346,7 @@
     @Override
     public Map<String, List<String>> getAttributes() {
         MultivaluedHashMap<String, String> result = new MultivaluedHashMap<>();
-        for (UBLDocumentAttributeEntity attr : ublDocument.getAttributes()) {
+        for (DocumentAttributeEntity attr : document.getAttributes()) {
             result.add(attr.getName(), attr.getValue());
         }
         return result;
@@ -328,7 +358,7 @@
     @Override
     public Set<String> getRequiredActions() {
         Set<String> result = new HashSet<>();
-        for (UBLDocumentRequiredActionEntity attr : ublDocument.getRequiredActions()) {
+        for (DocumentRequiredActionEntity attr : document.getRequiredActions()) {
             result.add(attr.getAction());
         }
         return result;
@@ -342,16 +372,16 @@
 
     @Override
     public void addRequiredAction(String actionName) {
-        for (UBLDocumentRequiredActionEntity attr : ublDocument.getRequiredActions()) {
+        for (DocumentRequiredActionEntity attr : document.getRequiredActions()) {
             if (attr.getAction().equals(actionName)) {
                 return;
             }
         }
-        UBLDocumentRequiredActionEntity attr = new UBLDocumentRequiredActionEntity();
+        DocumentRequiredActionEntity attr = new DocumentRequiredActionEntity();
         attr.setAction(actionName);
-        attr.setUblDocument(ublDocument);
+        attr.setDocument(document);
         em.persist(attr);
-        ublDocument.getRequiredActions().add(attr);
+        document.getRequiredActions().add(attr);
     }
 
     @Override
@@ -362,29 +392,29 @@
 
     @Override
     public int getCustomerSendEventFailures() {
-        return ublDocument.getCustomerSendEventFailures();
+        return document.getCustomerSendEventFailures();
     }
 
     @Override
     public void incrementCustomerSendEventFailures() {
-        ublDocument.setCustomerSendEventFailures(ublDocument.getCustomerSendEventFailures() + 1);
+        document.setCustomerSendEventFailures(document.getCustomerSendEventFailures() + 1);
     }
 
     @Override
     public int getThirdPartySendEventFailures() {
-        return ublDocument.getThirdPartySendEventFailures();
+        return document.getThirdPartySendEventFailures();
     }
 
     @Override
     public void incrementThirdPartySendEventFailures() {
-        ublDocument.setThirdPartySendEventFailures(ublDocument.getThirdPartySendEventFailures() + 1);
+        document.setThirdPartySendEventFailures(document.getThirdPartySendEventFailures() + 1);
     }
 
     @Override
     public void removeRequiredAction(String actionName) {
-        Iterator<UBLDocumentRequiredActionEntity> it = ublDocument.getRequiredActions().iterator();
+        Iterator<DocumentRequiredActionEntity> it = document.getRequiredActions().iterator();
         while (it.hasNext()) {
-            UBLDocumentRequiredActionEntity attr = it.next();
+            DocumentRequiredActionEntity attr = it.next();
             if (attr.getAction().equals(actionName)) {
                 it.remove();
                 em.remove(attr);
@@ -401,18 +431,17 @@
         entity.setCreatedTimestamp(LocalDateTime.now());
         entity.setStatus(SendEventStatus.ON_PROCESS);
         entity.setDestiny(destinyType);
-        entity.setUblDocument(ublDocument);
+        entity.setDocument(document);
         em.persist(entity);
-        //em.flush();
 
-        return new UBLDocumentSendEventAdapter(session, em, organization, entity);
+        return new SendEventAdapter(session, em, organization, entity);
     }
 
     @Override
     public SendEventModel getSendEventById(String id) {
         SendEventEntity entity = em.find(SendEventEntity.class, id);
         if (entity != null) {
-            return new UBLDocumentSendEventAdapter(session, em, organization, entity);
+            return new SendEventAdapter(session, em, organization, entity);
         }
         return null;
     }
@@ -435,8 +464,8 @@
 
     @Override
     public List<SendEventModel> getSendEvents(Integer firstResult, Integer maxResults) {
-        TypedQuery<SendEventEntity> query = em.createNamedQuery("getAllSendEventByDocumentId", SendEventEntity.class);
-        query.setParameter("documentId", ublDocument.getId());
+        TypedQuery<SendEventEntity> query = em.createNamedQuery("getAllSendEventsByDocumentPkId", SendEventEntity.class);
+        query.setParameter("documentPkId", document.getId());
         if (firstResult != -1) {
             query.setFirstResult(firstResult);
         }
@@ -444,7 +473,7 @@
             query.setMaxResults(maxResults);
         }
         List<SendEventEntity> results = query.getResultList();
-        return results.stream().map(f -> new UBLDocumentSendEventAdapter(session, em, organization, f)).collect(Collectors.toList());
+        return results.stream().map(f -> new SendEventAdapter(session, em, organization, f)).collect(Collectors.toList());
     }
 
     @Override
@@ -454,7 +483,7 @@
 
     @Override
     public List<SendEventModel> searchForSendEvent(Map<String, String> attributes, int firstResult, int maxResults) {
-        StringBuilder builder = new StringBuilder("select u from SendEventEntity u where u.ublDocument.id = :documentId");
+        StringBuilder builder = new StringBuilder("select u from SendEventEntity u where u.document.id = :documentId");
         for (Map.Entry<String, String> entry : attributes.entrySet()) {
             String attribute = null;
             String parameterName = null;
@@ -475,7 +504,7 @@
         builder.append(" order by u.createdTimestamp");
         String q = builder.toString();
         TypedQuery<SendEventEntity> query = em.createQuery(q, SendEventEntity.class);
-        query.setParameter("documentId", ublDocument.getId());
+        query.setParameter("documentId", document.getId());
         for (Map.Entry<String, String> entry : attributes.entrySet()) {
             String parameterName = null;
             Object parameterValue = null;
@@ -496,57 +525,7 @@
             query.setMaxResults(maxResults);
         }
         List<SendEventEntity> results = query.getResultList();
-        return results.stream().map(f -> new UBLDocumentSendEventAdapter(session, em, organization, f)).collect(Collectors.toList());
-    }
-
-    @Override
-    public int sendEventCount() {
-        Object count = em.createNamedQuery("getDocumentSendEventCountByDocument")
-                .setParameter("documentId", ublDocument.getId())
-                .getSingleResult();
-        return ((Number) count).intValue();
-    }
-
-    @Override
-    public int sendEventCount(Map<String, String> attributes) {
-        StringBuilder builder = new StringBuilder("select count(u) from SendEventEntity u where u.ublDocument.id = :documentId");
-        for (Map.Entry<String, String> entry : attributes.entrySet()) {
-            String attribute = null;
-            String parameterName = null;
-            String operator = null;
-            if (entry.getKey().equals(DocumentModel.SEND_EVENT_DESTINY)) {
-                attribute = "u." + JpaDocumentProvider.SEND_EVENT_DESTINY;
-                parameterName = JpaDocumentProvider.SEND_EVENT_DESTINY;
-                operator = " = :";
-            } else if (entry.getKey().equals(DocumentModel.SEND_EVENT_STATUS)) {
-                attribute = "u." + JpaDocumentProvider.SEND_EVENT_STATUS;
-                parameterName = JpaDocumentProvider.SEND_EVENT_STATUS;
-                operator = " = :";
-            }
-            if (attribute == null) continue;
-            builder.append(" and ");
-            builder.append(attribute).append(operator).append(parameterName);
-        }
-
-        String q = builder.toString();
-        Query query = em.createQuery(q);
-        query.setParameter("documentId", ublDocument.getId());
-        for (Map.Entry<String, String> entry : attributes.entrySet()) {
-            String parameterName = null;
-            Object parameterValue = null;
-            if (entry.getKey().equals(DocumentModel.SEND_EVENT_DESTINY)) {
-                parameterName = JpaDocumentProvider.SEND_EVENT_DESTINY;
-                parameterValue = DestinyType.valueOf(entry.getValue().toUpperCase());
-            } else if (entry.getKey().equals(DocumentModel.SEND_EVENT_STATUS)) {
-                parameterName = JpaDocumentProvider.SEND_EVENT_STATUS;
-                parameterValue = SendEventStatus.valueOf(entry.getValue().toUpperCase());
-            }
-            if (parameterName == null) continue;
-            query.setParameter(parameterName, parameterValue);
-        }
-
-        Object count = query.getSingleResult();
-        return ((Number) count).intValue();
+        return results.stream().map(f -> new SendEventAdapter(session, em, organization, f)).collect(Collectors.toList());
     }
 
     /**
@@ -554,36 +533,36 @@
      */
     @Override
     public List<DocumentModel> getAttachedDocumentsAsOrigin() {
-        TypedQuery<UBLDocumentEntity> query = em.createNamedQuery("getAttachedUBLDocumentDestinyByOrigin", UBLDocumentEntity.class);
-        query.setParameter("ublDocumentOriginId", ublDocument.getId());
-        return query.getResultList().stream().map(f -> new UBLDocumentAdapter(session, organization, em, f)).collect(Collectors.toList());
+        TypedQuery<DocumentEntity> query = em.createNamedQuery("getAttachedDocumentsDestinyByOrigin", DocumentEntity.class);
+        query.setParameter("documentOriginId", document.getId());
+        return query.getResultList().stream().map(f -> new DocumentAdapter(session, organization, em, f)).collect(Collectors.toList());
     }
 
     @Override
     public List<DocumentModel> getAttachedDocumentsAsDestiny() {
-        TypedQuery<UBLDocumentEntity> query = em.createNamedQuery("getAttachedUBLDocumentOriginByDestiny", UBLDocumentEntity.class);
-        query.setParameter("ublDocumentDestinyId", ublDocument.getId());
-        return query.getResultList().stream().map(f -> new UBLDocumentAdapter(session, organization, em, f)).collect(Collectors.toList());
+        TypedQuery<DocumentEntity> query = em.createNamedQuery("getAttachedDocumentsOriginByDestiny", DocumentEntity.class);
+        query.setParameter("documentDestinyId", document.getId());
+        return query.getResultList().stream().map(f -> new DocumentAdapter(session, organization, em, f)).collect(Collectors.toList());
     }
 
     @Override
-    public void addAttachedDocument(DocumentModel attachedDocument) {
-        AttachedUBLDocumentEntity entity = new AttachedUBLDocumentEntity();
-        entity.setUblDocumentOrigin(ublDocument);
-        entity.setUblDocumentDestiny(UBLDocumentAdapter.toEntity(attachedDocument, em));
+    public void addAttachedDocument(DocumentModel document) {
+        AttachedDocumentEntity entity = new AttachedDocumentEntity();
+        entity.setDocumentOrigin(this.document);
+        entity.setDocumentDestiny(DocumentAdapter.toEntity(document, em));
         em.persist(entity);
-        ublDocument.getAttachedDocumentsAsOrigin().add(entity);
+        this.document.getAttachedDocumentsAsOrigin().add(entity);
     }
 
     @Override
-    public boolean removeAttachedDocument(DocumentModel attachedDocument) {
+    public boolean removeAttachedDocument(DocumentModel document) {
         boolean result = false;
-        Iterator<AttachedUBLDocumentEntity> it = ublDocument.getAttachedDocumentsAsOrigin().iterator();
+        Iterator<AttachedDocumentEntity> it = this.document.getAttachedDocumentsAsOrigin().iterator();
         while (it.hasNext()) {
-            AttachedUBLDocumentEntity ublAttachedDocumentEntity = it.next();
-            if (ublAttachedDocumentEntity.getUblDocumentDestiny().getId().equals(attachedDocument.getId())) {
+            AttachedDocumentEntity attachedUBLDocument = it.next();
+            if (attachedUBLDocument.getDocumentDestiny().getId().equals(document.getId())) {
                 it.remove();
-                em.remove(ublAttachedDocumentEntity);
+                em.remove(attachedUBLDocument);
                 result = true;
             }
         }
Index: model/jpa/src/main/java/org/openfact/models/jpa/JpaFileProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/JpaFileProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/JpaFileProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -19,9 +19,11 @@
 import org.jboss.logging.Logger;
 import org.openfact.file.FileModel;
 import org.openfact.file.FileProvider;
+import org.openfact.models.ModelDuplicateException;
 import org.openfact.models.OpenfactSession;
 import org.openfact.models.OrganizationModel;
 import org.openfact.models.jpa.entities.FileEntity;
+import org.openfact.models.utils.OpenfactModelUtils;
 
 import javax.persistence.EntityManager;
 import javax.persistence.TypedQuery;
@@ -31,8 +33,6 @@
 
     protected static final Logger logger = Logger.getLogger(JpaFileProvider.class);
 
-    private static final String FILE_NAME = "fileName";
-
     private final OpenfactSession session;
     protected EntityManager em;
 
@@ -64,21 +64,6 @@
         return null;
     }
 
-    @Override
-    public FileModel getFileByFileName(OrganizationModel organization, String fileName) {
-        TypedQuery<FileEntity> query = em.createNamedQuery("getOrganizationFileByFilename", FileEntity.class);
-        query.setParameter("organizationId", organization.getId());
-        query.setParameter("fileName", fileName);
-        List<FileEntity> entities = query.getResultList();
-        if (entities.size() == 0)
-            return null;
-        if (entities.size() > 1)
-            throw new IllegalStateException("Should not be more than one file with same name");
-
-        FileEntity entity = query.getResultList().get(0);
-        return new FileAdapter(session, em, entity);
-    }
-
     @Override
     public boolean removeFile(OrganizationModel organization, FileModel file) {
         FileEntity entity = em.find(FileEntity.class, file.getId());
Index: server-spi/src/main/java/org/openfact/models/enums/DocumentType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/enums/DocumentType.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/enums/DocumentType.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -2,7 +2,17 @@
 
 public enum DocumentType {
 
-    INVOICE, CREDIT_NOTE, DEBIT_NOTE;
+    INVOICE("Invoice"), CREDIT_NOTE("CreditNote"), DEBIT_NOTE("DebitNote");
+
+    private String xmlWrapper;
+
+    DocumentType(String xmlWrapper) {
+        this.xmlWrapper = xmlWrapper;
+    }
+
+    public String getXmlWrapper() {
+        return this.xmlWrapper;
+    }
 
     public static DocumentType getFromString(String value) {
         DocumentType[] elements = DocumentType.values();
Index: model/jpa/src/main/java/org/openfact/models/jpa/DocumentCriteria.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/DocumentCriteria.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/DocumentCriteria.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -4,9 +4,8 @@
 import org.openfact.models.OpenfactSession;
 import org.openfact.models.OrganizationModel;
 import org.openfact.models.enums.RequiredAction;
-import org.openfact.models.jpa.entities.UBLDocumentEntity;
-import org.openfact.models.jpa.entities.UBLDocumentRequiredActionEntity;
-import org.openfact.models.search.SearchCriteriaFilterModel;
+import org.openfact.models.jpa.entities.DocumentEntity;
+import org.openfact.models.jpa.entities.DocumentRequiredActionEntity;
 import org.openfact.models.search.SearchCriteriaFilterOperator;
 
 import javax.persistence.EntityManager;
@@ -151,19 +150,27 @@
     public DocumentCriteria requiredAction(RequiredAction... requiredAction) {
         List<String> rActions = Stream.of(requiredAction).map(RequiredAction::toString).collect(Collectors.toList());
 
-        Join<UBLDocumentEntity, UBLDocumentRequiredActionEntity> requiredActions = root.join(JpaDocumentProvider.REQUIRED_ACTIONS);
+        Join<DocumentEntity, DocumentRequiredActionEntity> requiredActions = root.join(JpaDocumentProvider.REQUIRED_ACTIONS);
         predicates.add(requiredActions.get("action").in(rActions));
 
         return this;
     }
 
-    public DocumentCriteria fromDate(LocalDateTime fromDate) {
-        predicates.add(cb.greaterThanOrEqualTo(root.<LocalDateTime>get(JpaDocumentProvider.CREATED_TIMESTAMP), fromDate));
+    public DocumentCriteria fromDate(LocalDateTime fromDate, boolean include) {
+        if (include) {
+            predicates.add(cb.greaterThanOrEqualTo(root.<LocalDateTime>get(JpaDocumentProvider.CREATED_TIMESTAMP), fromDate));
+        } else {
+            predicates.add(cb.greaterThan(root.<LocalDateTime>get(JpaDocumentProvider.CREATED_TIMESTAMP), fromDate));
+        }
         return this;
     }
 
-    public DocumentCriteria toDate(LocalDateTime toDate) {
-        predicates.add(cb.lessThanOrEqualTo(root.<LocalDateTime>get(JpaDocumentProvider.CREATED_TIMESTAMP), toDate));
+    public DocumentCriteria toDate(LocalDateTime toDate, boolean include) {
+        if (include) {
+            predicates.add(cb.lessThanOrEqualTo(root.<LocalDateTime>get(JpaDocumentProvider.CREATED_TIMESTAMP), toDate));
+        } else {
+            predicates.add(cb.lessThan(root.<LocalDateTime>get(JpaDocumentProvider.CREATED_TIMESTAMP), toDate));
+        }
         return this;
     }
 
Index: model/jpa/src/main/java/org/openfact/models/jpa/JpaDocumentQuery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/JpaDocumentQuery.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/JpaDocumentQuery.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -3,9 +3,8 @@
 import org.openfact.models.*;
 import org.openfact.models.enums.DocumentType;
 import org.openfact.models.enums.RequiredAction;
-import org.openfact.models.jpa.entities.UBLDocumentEntity;
+import org.openfact.models.jpa.entities.DocumentEntity;
 import org.openfact.models.search.PagingModel;
-import org.openfact.models.search.SearchCriteriaFilterModel;
 import org.openfact.models.search.SearchCriteriaFilterOperator;
 import org.openfact.models.search.SearchResultsModel;
 
@@ -20,8 +19,8 @@
 
 public class JpaDocumentQuery implements DocumentQuery {
 
-    private DocumentCriteria<UBLDocumentEntity, UBLDocumentEntity> query;
-    private DocumentCriteria<UBLDocumentEntity, Long> queryCount;
+    private DocumentCriteria<DocumentEntity, DocumentEntity> query;
+    private DocumentCriteria<DocumentEntity, Long> queryCount;
 
     private OpenfactSession session;
     private OrganizationModel organization;
@@ -31,8 +30,12 @@
         this.session = session;
         this.organization = organization;
         this.em = em;
-        this.query = new DocumentCriteria<>(session, organization, em, UBLDocumentEntity.class, UBLDocumentEntity.class);
-        this.queryCount = new DocumentCriteria<>(session, organization, em, UBLDocumentEntity.class, Long.class);
+        this.query = new DocumentCriteria<>(session, organization, em, DocumentEntity.class, DocumentEntity.class);
+        this.queryCount = new DocumentCriteria<>(session, organization, em, DocumentEntity.class, Long.class);
+    }
+
+    private DocumentModel toModel(DocumentEntity entity) {
+        return new DocumentAdapter(session, organization, em, entity);
     }
 
     @Override
@@ -111,23 +114,23 @@
     }
 
     @Override
-    public DocumentQuery requiredAction(RequiredAction... requiredAction) {
-        query.requiredAction(requiredAction);
-        queryCount.requiredAction(requiredAction);
+    public DocumentQuery fromDate(LocalDateTime fromDate, boolean include) {
+        query.fromDate(fromDate, include);
+        queryCount.fromDate(fromDate, include);
         return this;
     }
 
     @Override
-    public DocumentQuery fromDate(LocalDateTime fromDate) {
-        query.fromDate(fromDate);
-        queryCount.fromDate(fromDate);
+    public DocumentQuery toDate(LocalDateTime toDate, boolean include) {
+        query.toDate(toDate, include);
+        queryCount.toDate(toDate, include);
         return this;
     }
 
     @Override
-    public DocumentQuery toDate(LocalDateTime toDate) {
-        query.toDate(toDate);
-        queryCount.toDate(toDate);
+    public DocumentQuery requiredAction(RequiredAction... requiredAction) {
+        query.requiredAction(requiredAction);
+        queryCount.requiredAction(requiredAction);
         return this;
     }
 
@@ -187,7 +190,7 @@
 
         @Override
         public List<DocumentModel> getResultList() {
-            TypedQuery<UBLDocumentEntity> typedQuery = query.buildQuery(false);
+            TypedQuery<DocumentEntity> typedQuery = query.buildQuery(false);
             if (firstResult != null) {
                 typedQuery.setFirstResult(firstResult);
             }
@@ -196,7 +199,7 @@
             }
 
             return typedQuery.getResultList().stream()
-                    .map(f -> new UBLDocumentAdapter(session, organization, em, f))
+                    .map(document -> toModel(document))
                     .collect(Collectors.toList());
         }
 
@@ -232,13 +235,13 @@
             int pageSize = paging.getPageSize();
             int start = (page - 1) * pageSize;
 
-            TypedQuery<UBLDocumentEntity> typedQuery = query.buildQuery(false);
+            TypedQuery<DocumentEntity> typedQuery = query.buildQuery(false);
 
             typedQuery.setFirstResult(start);
             typedQuery.setMaxResults(pageSize + 1);
             boolean hasMore = false;
 
-            List<UBLDocumentEntity> resultList = typedQuery.getResultList();
+            List<DocumentEntity> resultList = typedQuery.getResultList();
 
             // Check if we got back more than we actually needed.
             if (resultList.size() > pageSize) {
@@ -256,7 +259,7 @@
 
             SearchResultsModel<DocumentModel> results = new SearchResultsModel<>();
             results.setTotalSize(totalSize);
-            results.setModels(resultList.stream().map(f -> new UBLDocumentAdapter(session, organization, em, f)).collect(Collectors.toList()));
+            results.setModels(resultList.stream().map(document -> toModel(document)).collect(Collectors.toList()));
             return results;
         }
     }
@@ -264,14 +267,14 @@
     class JpaScrollEntityQuery implements DocumentQuery.ScrollEntityQuery {
         @Override
         public ScrollModel<DocumentModel> getScrollResult(int scrollSize) {
-            TypedQuery<UBLDocumentEntity> typedQuery = query.buildQuery(false);
-            return new ScrollAdapter<>(UBLDocumentEntity.class, typedQuery, f -> new UBLDocumentAdapter(session, organization, em, f), scrollSize);
+            TypedQuery<DocumentEntity> typedQuery = query.buildQuery(false);
+            return new ScrollAdapter<>(DocumentEntity.class, typedQuery, document -> toModel(document), scrollSize);
         }
 
         @Override
         public ScrollModel<List<DocumentModel>> getScrollResultList(int listSize) {
-            TypedQuery<UBLDocumentEntity> typedQuery = query.buildQuery(false);
-            return new ScrollPagingAdapter<>(UBLDocumentEntity.class, typedQuery, f -> f.stream().map(m -> new UBLDocumentAdapter(session, organization, em, m)).collect(Collectors.toList()), listSize);
+            TypedQuery<DocumentEntity> typedQuery = query.buildQuery(false);
+            return new ScrollPagingAdapter<>(DocumentEntity.class, typedQuery, f -> f.stream().map(document -> toModel(document)).collect(Collectors.toList()), listSize);
         }
     }
 
Index: model/jpa/src/main/java/org/openfact/models/jpa/UBLDocumentSendEventAdapter.java
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/UBLDocumentSendEventAdapter.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/SendEventAdapter.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -32,15 +32,15 @@
 import java.time.LocalDateTime;
 import java.util.*;
 
-public class UBLDocumentSendEventAdapter implements SendEventModel, JpaModel<SendEventEntity> {
+public class SendEventAdapter implements SendEventModel, JpaModel<SendEventEntity> {
 
-    protected static final Logger logger = Logger.getLogger(UBLDocumentSendEventAdapter.class);
+    protected static final Logger logger = Logger.getLogger(SendEventAdapter.class);
     protected OrganizationModel organization;
     protected SendEventEntity sendEvent;
     protected EntityManager em;
     protected OpenfactSession session;
 
-    public UBLDocumentSendEventAdapter(OpenfactSession session, EntityManager em, OrganizationModel organization, SendEventEntity ublDocumentDendEvent) {
+    public SendEventAdapter(OpenfactSession session, EntityManager em, OrganizationModel organization, SendEventEntity ublDocumentDendEvent) {
         this.session = session;
         this.em = em;
         this.organization = organization;
@@ -48,8 +48,8 @@
     }
 
     public static SendEventEntity toEntity(SendEventModel model, EntityManager em) {
-        if (model instanceof UBLDocumentSendEventAdapter) {
-            return ((UBLDocumentSendEventAdapter) model).getEntity();
+        if (model instanceof SendEventAdapter) {
+            return ((SendEventAdapter) model).getEntity();
         }
         return em.getReference(SendEventEntity.class, model.getId());
     }
Index: server-spi/src/main/java/org/openfact/models/OpenfactSessionTask.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/OpenfactSessionTask.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/OpenfactSessionTask.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -5,6 +5,6 @@
  */
 public interface OpenfactSessionTask {
 
-    public void run(OpenfactSession session);
+    void run(OpenfactSession session);
 
 }
Index: distribution/feature-packs/server-feature-pack/feature-pack-build.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/feature-packs/server-feature-pack/feature-pack-build.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ distribution/feature-packs/server-feature-pack/feature-pack-build.xml	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
@@ -20,22 +20,14 @@
         <artifact name="org.keycloak:keycloak-adapter-feature-pack"/>
     </dependencies>
     <config>
-        <standalone template="configuration/standalone/template.xml"
-                    subsystems="configuration/standalone/subsystems.xml"
-                    output-file="standalone/configuration/standalone.xml"/>
-        <standalone template="configuration/standalone/template.xml"
-                    subsystems="configuration/standalone/subsystems-ha.xml"
-                    output-file="standalone/configuration/standalone-ha.xml">
+        <standalone template="configuration/standalone/template.xml" subsystems="configuration/standalone/subsystems.xml" output-file="standalone/configuration/standalone.xml"/>
+        <standalone template="configuration/standalone/template.xml" subsystems="configuration/standalone/subsystems-ha.xml" output-file="standalone/configuration/standalone-ha.xml">
             <property name="jgroups.supplement" value=""/>
         </standalone>
-        <domain template="configuration/domain/template.xml" subsystems="configuration/domain/subsystems.xml"
-                output-file="domain/configuration/domain.xml"/>
-        <host template="configuration/host/host.xml" subsystems="configuration/host/subsystems.xml"
-              output-file="domain/configuration/host.xml"/>
-        <host template="configuration/host/host-master.xml" subsystems="configuration/host/subsystems.xml"
-              output-file="domain/configuration/host-master.xml"/>
-        <host template="configuration/host/host-slave.xml" subsystems="configuration/host/subsystems.xml"
-              output-file="domain/configuration/host-slave.xml"/>
+        <domain template="configuration/domain/template.xml" subsystems="configuration/domain/subsystems.xml" output-file="domain/configuration/domain.xml"/>
+        <host template="configuration/host/host.xml" subsystems="configuration/host/subsystems.xml" output-file="domain/configuration/host.xml"/>
+        <host template="configuration/host/host-master.xml" subsystems="configuration/host/subsystems.xml" output-file="domain/configuration/host-master.xml"/>
+        <host template="configuration/host/host-slave.xml" subsystems="configuration/host/subsystems.xml" output-file="domain/configuration/host-slave.xml"/>
     </config>
 
     <mkdirs>
Index: model/jpa/src/main/java/org/openfact/models/jpa/JpaJobReportQuery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/JpaJobReportQuery.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/JpaJobReportQuery.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,11 +1,6 @@
 package org.openfact.models.jpa;
 
-import org.openfact.events.EventType;
-import org.openfact.events.admin.AdminEvent;
-import org.openfact.events.jpa.AdminEventEntity;
-import org.openfact.events.jpa.JpaEventStoreProvider;
 import org.openfact.models.AdminJobReport;
-import org.openfact.models.JobReportModel;
 import org.openfact.models.JobReportQuery;
 import org.openfact.models.jpa.entities.JobReportEntity;
 
@@ -34,7 +29,7 @@
         cb = em.getCriteriaBuilder();
         cq = cb.createQuery(JobReportEntity.class);
         root = cq.from(JobReportEntity.class);
-        predicates = new ArrayList<Predicate>();
+        predicates = new ArrayList<>();
     }
 
 
Index: model/jpa/src/main/resources/META-INF/db2-jpa-changelog-1.0-beta-5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/resources/META-INF/db2-jpa-changelog-1.0-beta-5.xml	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/resources/META-INF/db2-jpa-changelog-1.0-beta-5.xml	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -3,7 +3,7 @@
 				   xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
 				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
-	<changeSet author="admin (generated)" id="1486994860560-1">
+	<changeSet author="admin (generated)" id="1487092066443-1">
 		<createTable tableName="ADMIN_EVENT_ENTITY">
 			<column name="ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -20,17 +20,17 @@
 			<column name="ADMIN_EVENT_TIME" type="BIGINT"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-2">
-		<createTable tableName="ATTACHED_UBL_DOCUMENT">
-			<column name="UBL_DOCUMENT_ORIGIN_ID" type="VARCHAR(255)">
+	<changeSet author="admin (generated)" id="1487092066443-2">
+		<createTable tableName="ATTACHED_DOCUMENT">
+			<column name="DOCUMENT_ORIGIN_ID" type="VARCHAR(255)">
 				<constraints nullable="false"/>
 			</column>
-			<column name="UBL_DOCUMENT_DESTINY_ID" type="VARCHAR(255)">
+			<column name="DOCUMENT_DESTINY_ID" type="VARCHAR(255)">
 				<constraints nullable="false"/>
 			</column>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-3">
+	<changeSet author="admin (generated)" id="1487092066443-3">
 		<createTable tableName="COMPONENT">
 			<column name="ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -43,7 +43,7 @@
 			<column name="ORGANIZATION_ID" type="VARCHAR(36)"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-4">
+	<changeSet author="admin (generated)" id="1487092066443-4">
 		<createTable tableName="COMPONENT_CONFIG">
 			<column name="ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -53,7 +53,65 @@
 			<column name="COMPONENT_ID" type="VARCHAR(36)"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-5">
+	<changeSet author="admin (generated)" id="1487092066443-5">
+		<createTable tableName="DOCUMENT">
+			<column name="ID" type="VARCHAR(255)">
+				<constraints nullable="false"/>
+			</column>
+			<column name="CREATED_TIMESTAMP" type="timestamp"/>
+			<column name="CUSTOMER_ASSIGNED_ACCOUNT_ID" type="VARCHAR(255)"/>
+			<column name="CUSTOMER_ELECTRONIC_MAIL" type="VARCHAR(255)"/>
+			<column name="CUSTOMER_REGISTRATION_NAME" type="VARCHAR(255)"/>
+			<column name="CUSTOMER_SEND_EVENT_FAILURES" type="INT"/>
+			<column name="DOCUMENT_CURRENCY_CODE" type="VARCHAR(255)"/>
+			<column name="DOCUMENT_ID" type="VARCHAR(255)"/>
+			<column name="DOCUMENT_TYPE" type="VARCHAR(255)"/>
+			<column name="ENABLED" type="INT"/>
+			<column name="ORGANIZATION_ID" type="VARCHAR(255)"/>
+			<column name="THIRD_PARTY_SEND_EVENT_FAILURES" type="INT"/>
+			<column name="XML_FILE_ID" type="VARCHAR(255)"/>
+		</createTable>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-6">
+		<createTable tableName="DOCUMENT_ATTRIBUTE">
+			<column name="ID" type="VARCHAR(36)">
+				<constraints nullable="false"/>
+			</column>
+			<column name="NAME" type="VARCHAR(255)"/>
+			<column name="VALUE" type="VARCHAR(255)"/>
+			<column name="DOCUMENT_ID" type="VARCHAR(255)"/>
+		</createTable>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-7">
+		<createTable tableName="DOCUMENT_LINE">
+			<column name="ID" type="VARCHAR(255)">
+				<constraints nullable="false"/>
+			</column>
+			<column name="DOCUMENT_ID" type="VARCHAR(255)"/>
+		</createTable>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-8">
+		<createTable tableName="DOCUMENT_LINE_ATTRIBUTE">
+			<column name="NAME" type="VARCHAR(255)">
+				<constraints nullable="false"/>
+			</column>
+			<column name="VALUE" type="VARCHAR(255)"/>
+			<column name="DOCUMENT_LINE_ID" type="VARCHAR(255)">
+				<constraints nullable="false"/>
+			</column>
+		</createTable>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-9">
+		<createTable tableName="DOCUMENT_REQUIRED_ACTION">
+			<column name="REQUIRED_ACTION" type="VARCHAR(255)">
+				<constraints nullable="false"/>
+			</column>
+			<column name="DOCUMENT_ID" type="VARCHAR(255)">
+				<constraints nullable="false"/>
+			</column>
+		</createTable>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-10">
 		<createTable tableName="EVENT_ENTITY">
 			<column name="ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -67,7 +125,7 @@
 			<column name="USER_ID" type="VARCHAR(255)"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-6">
+	<changeSet author="admin (generated)" id="1487092066443-11">
 		<createTable tableName="JOB_REPORT">
 			<column name="ID" type="VARCHAR(255)">
 				<constraints nullable="false"/>
@@ -82,7 +140,7 @@
 			<column name="WRITE_COUNT" type="BIGINT"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-7">
+	<changeSet author="admin (generated)" id="1487092066443-12">
 		<createTable tableName="MIGRATION_MODEL">
 			<column name="ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -90,7 +148,7 @@
 			<column name="VERSION" type="VARCHAR(36)"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-8">
+	<changeSet author="admin (generated)" id="1487092066443-13">
 		<createTable tableName="ORGANIZATION">
 			<column name="ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -125,7 +183,7 @@
 			<column name="TASK_ENABLED" type="BOOLEAN"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-9">
+	<changeSet author="admin (generated)" id="1487092066443-14">
 		<createTable tableName="ORGANIZATION_ATTRIBUTE">
 			<column name="NAME" type="VARCHAR(255)">
 				<constraints nullable="false"/>
@@ -136,7 +194,7 @@
 			</column>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-10">
+	<changeSet author="admin (generated)" id="1487092066443-15">
 		<createTable tableName="ORGANIZATION_ENABLED_EVENT_TYPES">
 			<column name="ORGANIZATION_ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -144,7 +202,7 @@
 			<column name="VALUE" type="VARCHAR(255)"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-11">
+	<changeSet author="admin (generated)" id="1487092066443-16">
 		<createTable tableName="ORGANIZATION_EVENTS_LISTENERS">
 			<column name="ORGANIZATION_ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -152,7 +210,7 @@
 			<column name="VALUE" type="VARCHAR(255)"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-12">
+	<changeSet author="admin (generated)" id="1487092066443-17">
 		<createTable tableName="ORGANIZATION_FILE">
 			<column name="ID" type="VARCHAR(255)">
 				<constraints nullable="false"/>
@@ -162,7 +220,7 @@
 			<column name="ORGANIZATION_ID" type="VARCHAR(36)"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-13">
+	<changeSet author="admin (generated)" id="1487092066443-18">
 		<createTable tableName="ORGANIZATION_SMTP_CONFIG">
 			<column name="ORGANIZATION_ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -173,7 +231,7 @@
 			</column>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-14">
+	<changeSet author="admin (generated)" id="1487092066443-19">
 		<createTable tableName="ORGANIZATION_SUPPORTED_CURRENCIES">
 			<column name="ORGANIZATION_ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -181,7 +239,7 @@
 			<column name="VALUE" type="VARCHAR(255)"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-15">
+	<changeSet author="admin (generated)" id="1487092066443-20">
 		<createTable tableName="ORGANIZATION_SUPPORTED_LOCALES">
 			<column name="ORGANIZATION_ID" type="VARCHAR(36)">
 				<constraints nullable="false"/>
@@ -189,7 +247,19 @@
 			<column name="VALUE" type="VARCHAR(255)"/>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-16">
+	<changeSet author="admin (generated)" id="1487092066443-21">
+		<createTable tableName="SEND_EVENT">
+			<column name="ID" type="VARCHAR(255)">
+				<constraints nullable="false"/>
+			</column>
+			<column name="CREATED_TIMESTAMP" type="timestamp"/>
+			<column name="DESCRIPTION" type="VARCHAR(400)"/>
+			<column name="DESTINY" type="VARCHAR(255)"/>
+			<column name="STATUS" type="VARCHAR(255)"/>
+			<column name="DOCUMENT_ID" type="VARCHAR(255)"/>
+		</createTable>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-22">
 		<createTable tableName="SEND_EVENT_ATTACH_FILE">
 			<column name="FILE_ID" type="VARCHAR(255)">
 				<constraints nullable="false"/>
@@ -199,7 +269,7 @@
 			</column>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-17">
+	<changeSet author="admin (generated)" id="1487092066443-23">
 		<createTable tableName="SEND_EVENT_ATTRIBUTE">
 			<column name="NAME" type="VARCHAR(255)">
 				<constraints nullable="false"/>
@@ -210,212 +280,172 @@
 			</column>
 		</createTable>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-18">
-		<createTable tableName="UBL_DOCUMENT">
-			<column name="ID" type="VARCHAR(255)">
-				<constraints nullable="false"/>
-			</column>
-			<column name="CREATED_TIMESTAMP" type="timestamp"/>
-			<column name="CUSTOMER_ASSIGNED_ACCOUNT_ID" type="VARCHAR(255)"/>
-			<column name="CUSTOMER_ELECTRONIC_MAIL" type="VARCHAR(255)"/>
-			<column name="CUSTOMER_REGISTRATION_NAME" type="VARCHAR(255)"/>
-			<column name="CUSTOMER_SEND_EVENT_FAILURES" type="INT"/>
-			<column name="DOCUMENT_CURRENCY_CODE" type="VARCHAR(255)"/>
-			<column name="DOCUMENT_ID" type="VARCHAR(255)"/>
-			<column name="DOCUMENT_TYPE" type="VARCHAR(255)"/>
-			<column name="ENABLED" type="INT"/>
-			<column name="ORGANIZATION_ID" type="VARCHAR(255)"/>
-			<column name="THIRD_PARTY_SEND_EVENT_FAILURES" type="INT"/>
-			<column name="XML_FILE_ID" type="VARCHAR(255)"/>
-		</createTable>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-19">
-		<createTable tableName="UBL_DOCUMENT_ATTRIBUTE">
-			<column name="ID" type="VARCHAR(36)">
-				<constraints nullable="false"/>
-			</column>
-			<column name="NAME" type="VARCHAR(255)"/>
-			<column name="VALUE" type="VARCHAR(255)"/>
-			<column name="UBL_DOCUMENT_ID" type="VARCHAR(255)"/>
-		</createTable>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-20">
-		<createTable tableName="UBL_DOCUMENT_REQUIRED_ACTION">
-			<column name="REQUIRED_ACTION" type="VARCHAR(255)">
-				<constraints nullable="false"/>
-			</column>
-			<column name="UBL_DOCUMENT_ID" type="VARCHAR(255)">
-				<constraints nullable="false"/>
-			</column>
-		</createTable>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-21">
-		<createTable tableName="UBL_DOCUMENT_SEND_EVENT">
-			<column name="ID" type="VARCHAR(255)">
-				<constraints nullable="false"/>
-			</column>
-			<column name="CREATED_TIMESTAMP" type="timestamp"/>
-			<column name="DESCRIPTION" type="VARCHAR(400)"/>
-			<column name="DESTINY" type="VARCHAR(255)"/>
-			<column name="STATUS" type="VARCHAR(255)"/>
-			<column name="UBL_DOCUMENT_ID" type="VARCHAR(255)"/>
-		</createTable>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-22">
+	<changeSet author="admin (generated)" id="1487092066443-24">
 		<addPrimaryKey columnNames="ORGANIZATION_ID, NAME" tableName="ORGANIZATION_SMTP_CONFIG"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-23">
+	<changeSet author="admin (generated)" id="1487092066443-25">
 		<addPrimaryKey columnNames="ID" constraintName="ADMIN_EVENT_ENTITYPK" tableName="ADMIN_EVENT_ENTITY"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-24">
-		<addPrimaryKey columnNames="UBL_DOCUMENT_DESTINY_ID, UBL_DOCUMENT_ORIGIN_ID"
-					   constraintName="ATTACHED_UBL_DOCUMENTPK" tableName="ATTACHED_UBL_DOCUMENT"/>
+	<changeSet author="admin (generated)" id="1487092066443-26">
+		<addPrimaryKey columnNames="DOCUMENT_DESTINY_ID, DOCUMENT_ORIGIN_ID" constraintName="ATTACHED_DOCUMENTPK"
+					   tableName="ATTACHED_DOCUMENT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-25">
+	<changeSet author="admin (generated)" id="1487092066443-27">
 		<addPrimaryKey columnNames="ID" constraintName="COMPONENTPK" tableName="COMPONENT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-26">
+	<changeSet author="admin (generated)" id="1487092066443-28">
 		<addPrimaryKey columnNames="ID" constraintName="COMPONENT_CONFIGPK" tableName="COMPONENT_CONFIG"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-27">
+	<changeSet author="admin (generated)" id="1487092066443-29">
+		<addPrimaryKey columnNames="ID" constraintName="DOCUMENTPK" tableName="DOCUMENT"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-30">
+		<addPrimaryKey columnNames="ID" constraintName="DOCUMENT_ATTRIBUTEPK" tableName="DOCUMENT_ATTRIBUTE"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-31">
+		<addPrimaryKey columnNames="ID" constraintName="DOCUMENT_LINEPK" tableName="DOCUMENT_LINE"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-32">
+		<addPrimaryKey columnNames="DOCUMENT_LINE_ID, NAME" constraintName="DOCUMENT_LINE_ATTRIBUTEPK"
+					   tableName="DOCUMENT_LINE_ATTRIBUTE"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-33">
+		<addPrimaryKey columnNames="REQUIRED_ACTION, DOCUMENT_ID" constraintName="DOCUMENT_REQUIRED_ACTIONPK"
+					   tableName="DOCUMENT_REQUIRED_ACTION"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-34">
 		<addPrimaryKey columnNames="ID" constraintName="EVENT_ENTITYPK" tableName="EVENT_ENTITY"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-28">
+	<changeSet author="admin (generated)" id="1487092066443-35">
 		<addPrimaryKey columnNames="ID" constraintName="JOB_REPORTPK" tableName="JOB_REPORT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-29">
+	<changeSet author="admin (generated)" id="1487092066443-36">
 		<addPrimaryKey columnNames="ID" constraintName="MIGRATION_MODELPK" tableName="MIGRATION_MODEL"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-30">
+	<changeSet author="admin (generated)" id="1487092066443-37">
 		<addPrimaryKey columnNames="ID" constraintName="ORGANIZATIONPK" tableName="ORGANIZATION"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-31">
+	<changeSet author="admin (generated)" id="1487092066443-38">
 		<addPrimaryKey columnNames="NAME, ORGANIZATION_ID" constraintName="ORGANIZATION_ATTRIBUTEPK"
 					   tableName="ORGANIZATION_ATTRIBUTE"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-32">
+	<changeSet author="admin (generated)" id="1487092066443-39">
 		<addPrimaryKey columnNames="ID" constraintName="ORGANIZATION_FILEPK" tableName="ORGANIZATION_FILE"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-33">
+	<changeSet author="admin (generated)" id="1487092066443-40">
+		<addPrimaryKey columnNames="ID" constraintName="SEND_EVENTPK" tableName="SEND_EVENT"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-41">
 		<addPrimaryKey columnNames="FILE_ID, SEND_EVENT_ID" constraintName="SEND_EVENT_ATTACH_FILEPK"
 					   tableName="SEND_EVENT_ATTACH_FILE"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-34">
+	<changeSet author="admin (generated)" id="1487092066443-42">
 		<addPrimaryKey columnNames="NAME, SEND_EVENT_ID" constraintName="SEND_EVENT_ATTRIBUTEPK"
 					   tableName="SEND_EVENT_ATTRIBUTE"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-35">
-		<addPrimaryKey columnNames="ID" constraintName="UBL_DOCUMENTPK" tableName="UBL_DOCUMENT"/>
+	<changeSet author="admin (generated)" id="1487092066443-43">
+		<addUniqueConstraint columnNames="ORGANIZATION_ID, DOCUMENT_TYPE, DOCUMENT_ID" tableName="DOCUMENT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-36">
-		<addPrimaryKey columnNames="ID" constraintName="UBL_DOCUMENT_ATTRIBUTEPK" tableName="UBL_DOCUMENT_ATTRIBUTE"/>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-37">
-		<addPrimaryKey columnNames="REQUIRED_ACTION, UBL_DOCUMENT_ID" constraintName="UBL_DOCUMENT_REQUIRED_ACTIONPK"
-					   tableName="UBL_DOCUMENT_REQUIRED_ACTION"/>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-38">
-		<addPrimaryKey columnNames="ID" constraintName="UBL_DOCUMENT_SEND_EVENTPK" tableName="UBL_DOCUMENT_SEND_EVENT"/>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-39">
+	<changeSet author="admin (generated)" id="1487092066443-44">
 		<addUniqueConstraint columnNames="NAME" tableName="ORGANIZATION"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-40">
-		<addUniqueConstraint columnNames="ORGANIZATION_ID, DOCUMENT_TYPE, DOCUMENT_ID" tableName="UBL_DOCUMENT"/>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-41">
+	<changeSet author="admin (generated)" id="1487092066443-45">
 		<addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_SUPPORTED_LOCALES"
 								 constraintName="FK_1qo6exk81cr0pm5lhoi3orsxh" deferrable="false"
 								 initiallyDeferred="false" referencedColumnNames="ID"
 								 referencedTableName="ORGANIZATION"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-42">
-		<addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_ID" baseTableName="UBL_DOCUMENT_REQUIRED_ACTION"
-								 constraintName="FK_237kkj1euexmsnmdq1sfjteaw" deferrable="false"
-								 initiallyDeferred="false" referencedColumnNames="ID"
-								 referencedTableName="UBL_DOCUMENT"/>
+	<changeSet author="admin (generated)" id="1487092066443-46">
+		<addForeignKeyConstraint baseColumnNames="DOCUMENT_ID" baseTableName="SEND_EVENT"
+								 constraintName="FK_2xn1l7g83b40itlthmsfb4v33" deferrable="false"
+								 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-43">
+	<changeSet author="admin (generated)" id="1487092066443-47">
+		<addForeignKeyConstraint baseColumnNames="DOCUMENT_ID" baseTableName="DOCUMENT_LINE"
+								 constraintName="FK_3atj3xpcoke5jn3gno5rnubpf" deferrable="false"
+								 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-48">
 		<addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_ATTRIBUTE"
 								 constraintName="FK_519erdjtqivq189pm1ouanaix" deferrable="false"
 								 initiallyDeferred="false" referencedColumnNames="ID"
 								 referencedTableName="ORGANIZATION"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-44">
-		<addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_ID" baseTableName="UBL_DOCUMENT_ATTRIBUTE"
-								 constraintName="FK_88vm6qhqupkse82te7syyc9f9" deferrable="false"
-								 initiallyDeferred="false" referencedColumnNames="ID"
-								 referencedTableName="UBL_DOCUMENT"/>
+	<changeSet author="admin (generated)" id="1487092066443-49">
+		<addForeignKeyConstraint baseColumnNames="DOCUMENT_ORIGIN_ID" baseTableName="ATTACHED_DOCUMENT"
+								 constraintName="FK_53ok8w237vjg4eqojf169yv7d" deferrable="false"
+								 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-45">
+	<changeSet author="admin (generated)" id="1487092066443-50">
+		<addForeignKeyConstraint baseColumnNames="DOCUMENT_DESTINY_ID" baseTableName="ATTACHED_DOCUMENT"
+								 constraintName="FK_5ijhykq3lc1k27nb5bo1ccc2v" deferrable="false"
+								 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-51">
 		<addForeignKeyConstraint baseColumnNames="SEND_EVENT_ID" baseTableName="SEND_EVENT_ATTACH_FILE"
 								 constraintName="FK_8ik9khfatc7fw8308p7yr9u2r" deferrable="false"
-								 initiallyDeferred="false" referencedColumnNames="ID"
-								 referencedTableName="UBL_DOCUMENT_SEND_EVENT"/>
+								 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="SEND_EVENT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-46">
+	<changeSet author="admin (generated)" id="1487092066443-52">
 		<addForeignKeyConstraint baseColumnNames="COMPONENT_ID" baseTableName="COMPONENT_CONFIG"
 								 constraintName="FK_bol1wtkpc3ssx56q7hhhm2p2o" deferrable="false"
 								 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="COMPONENT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-47">
+	<changeSet author="admin (generated)" id="1487092066443-53">
+		<addForeignKeyConstraint baseColumnNames="DOCUMENT_ID" baseTableName="DOCUMENT_REQUIRED_ACTION"
+								 constraintName="FK_cg9i3dcuixpaxrmrbwnvb9104" deferrable="false"
+								 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-54">
 		<addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_SMTP_CONFIG"
 								 constraintName="FK_dn2ibury7345dyopspmw1rid8" deferrable="false"
 								 initiallyDeferred="false" referencedColumnNames="ID"
 								 referencedTableName="ORGANIZATION"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-48">
+	<changeSet author="admin (generated)" id="1487092066443-55">
 		<addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_EVENTS_LISTENERS"
 								 constraintName="FK_duvurkr1qtb4hr47woloe2p4p" deferrable="false"
 								 initiallyDeferred="false" referencedColumnNames="ID"
 								 referencedTableName="ORGANIZATION"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-49">
+	<changeSet author="admin (generated)" id="1487092066443-56">
+		<addForeignKeyConstraint baseColumnNames="DOCUMENT_LINE_ID" baseTableName="DOCUMENT_LINE_ATTRIBUTE"
+								 constraintName="FK_eq16a0olnwk64uk1eavh55ct5" deferrable="false"
+								 initiallyDeferred="false" referencedColumnNames="ID"
+								 referencedTableName="DOCUMENT_LINE"/>
+	</changeSet>
+	<changeSet author="admin (generated)" id="1487092066443-57">
 		<addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_ENABLED_EVENT_TYPES"
 								 constraintName="FK_f3fu6rasfl9f6cytpbf6ulfpb" deferrable="false"
 								 initiallyDeferred="false" referencedColumnNames="ID"
 								 referencedTableName="ORGANIZATION"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-50">
+	<changeSet author="admin (generated)" id="1487092066443-58">
 		<addForeignKeyConstraint baseColumnNames="SEND_EVENT_ID" baseTableName="SEND_EVENT_ATTRIBUTE"
 								 constraintName="FK_f8wk6u2vwb8rdnk7g9u7qxqg6" deferrable="false"
-								 initiallyDeferred="false" referencedColumnNames="ID"
-								 referencedTableName="UBL_DOCUMENT_SEND_EVENT"/>
+								 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="SEND_EVENT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-51">
-		<addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_ID" baseTableName="UBL_DOCUMENT_SEND_EVENT"
-								 constraintName="FK_fsv1qt3hf79hgt951pcdxppls" deferrable="false"
-								 initiallyDeferred="false" referencedColumnNames="ID"
-								 referencedTableName="UBL_DOCUMENT"/>
+	<changeSet author="admin (generated)" id="1487092066443-59">
+		<addForeignKeyConstraint baseColumnNames="DOCUMENT_ID" baseTableName="DOCUMENT_ATTRIBUTE"
+								 constraintName="FK_ikxgy3o58h88lyxndcprytejt" deferrable="false"
+								 initiallyDeferred="false" referencedColumnNames="ID" referencedTableName="DOCUMENT"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-52">
-		<addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_DESTINY_ID" baseTableName="ATTACHED_UBL_DOCUMENT"
-								 constraintName="FK_gac09g6urt3wch9dh9ua11ur8" deferrable="false"
-								 initiallyDeferred="false" referencedColumnNames="ID"
-								 referencedTableName="UBL_DOCUMENT"/>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-53">
+	<changeSet author="admin (generated)" id="1487092066443-60">
 		<addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_FILE"
 								 constraintName="FK_j51qwmjvalclh1pdqlfxeipae" deferrable="false"
 								 initiallyDeferred="false" referencedColumnNames="ID"
 								 referencedTableName="ORGANIZATION"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-54">
+	<changeSet author="admin (generated)" id="1487092066443-61">
 		<addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="ORGANIZATION_SUPPORTED_CURRENCIES"
 								 constraintName="FK_luafukpnuxu3ww53l5uy47d3f" deferrable="false"
 								 initiallyDeferred="false" referencedColumnNames="ID"
 								 referencedTableName="ORGANIZATION"/>
 	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-55">
+	<changeSet author="admin (generated)" id="1487092066443-62">
 		<addForeignKeyConstraint baseColumnNames="ORGANIZATION_ID" baseTableName="COMPONENT"
 								 constraintName="FK_mn8p186ks2lsd1kxfws5mldet" deferrable="false"
 								 initiallyDeferred="false" referencedColumnNames="ID"
 								 referencedTableName="ORGANIZATION"/>
-	</changeSet>
-	<changeSet author="admin (generated)" id="1486994860560-56">
-		<addForeignKeyConstraint baseColumnNames="UBL_DOCUMENT_ORIGIN_ID" baseTableName="ATTACHED_UBL_DOCUMENT"
-								 constraintName="FK_t65m2o4yctrisygr0eg7l30x3" deferrable="false"
-								 initiallyDeferred="false" referencedColumnNames="ID"
-								 referencedTableName="UBL_DOCUMENT"/>
 	</changeSet>
 </databaseChangeLog>
Index: server-spi/src/main/java/org/openfact/models/OrganizationProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi/src/main/java/org/openfact/models/OrganizationProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/OrganizationProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -30,7 +30,4 @@
 
     int getOrganizationsCount();
 
-    //List<OrganizationModel> searchForOrganization(String filterText, int firstResult, int maxResults);
-    //List<OrganizationModel> searchForOrganization(Map<String, String> attributes, int firstResult, int maxResults);
-
 }
Index: services/src/main/java/org/openfact/theme/JarThemeProviderFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/src/main/java/org/openfact/theme/JarThemeProviderFactory.java	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
+++ services/src/main/java/org/openfact/theme/JarThemeProviderFactory.java	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.theme;
 
 import org.openfact.Config;
@@ -29,9 +12,6 @@
 import java.util.HashMap;
 import java.util.Map;
 
-/**
- * @author <a href="mailto:sthorger@redhat.com">Stian Thorgersen</a>
- */
 public class JarThemeProviderFactory implements ThemeProviderFactory {
 
     protected static final String OPENFACT_THEMES_JSON = "META-INF/openfact-themes.json";
Index: model/jpa/src/main/java/org/openfact/models/jpa/DocumentLineAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/DocumentLineAdapter.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
+++ model/jpa/src/main/java/org/openfact/models/jpa/DocumentLineAdapter.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -0,0 +1,141 @@
+/*******************************************************************************
+ * Copyright 2016 Sistcoop, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+package org.openfact.models.jpa;
+
+import org.jboss.logging.Logger;
+import org.openfact.models.DocumentLineModel;
+import org.openfact.models.DocumentModel;
+import org.openfact.models.OpenfactSession;
+import org.openfact.models.jpa.entities.DocumentLineAttributeEntity;
+import org.openfact.models.jpa.entities.DocumentLineEntity;
+
+import javax.persistence.EntityManager;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+
+public class DocumentLineAdapter implements DocumentLineModel, JpaModel<DocumentLineEntity> {
+
+    protected static final Logger logger = Logger.getLogger(DocumentLineAdapter.class);
+
+    protected DocumentModel document;
+    protected DocumentLineEntity line;
+    protected EntityManager em;
+    protected OpenfactSession session;
+
+    public DocumentLineAdapter(OpenfactSession session, DocumentModel document, EntityManager em, DocumentLineEntity line) {
+        this.document = document;
+        this.session = session;
+        this.em = em;
+        this.line = line;
+    }
+
+    @Override
+    public DocumentLineEntity getEntity() {
+        return line;
+    }
+
+    @Override
+    public String getId() {
+        return line.getId();
+    }
+
+    @Override
+    public void setAttribute(String name, String value) {
+        for (DocumentLineAttributeEntity attr : line.getAttributes()) {
+            if (attr.getName().equals(name)) {
+                attr.setValue(value);
+                return;
+            }
+        }
+        DocumentLineAttributeEntity attr = new DocumentLineAttributeEntity();
+        attr.setName(name);
+        attr.setValue(value);
+        attr.setDocumentLine(line);
+        em.persist(attr);
+        line.getAttributes().add(attr);
+    }
+
+    @Override
+    public void setAttribute(String name, Boolean value) {
+        setAttribute(name, value.toString());
+    }
+
+    @Override
+    public void setAttribute(String name, Integer value) {
+        setAttribute(name, value.toString());
+    }
+
+    @Override
+    public void setAttribute(String name, Long value) {
+        setAttribute(name, value.toString());
+    }
+
+    @Override
+    public void removeAttribute(String name) {
+        Iterator<DocumentLineAttributeEntity> it = line.getAttributes().iterator();
+        while (it.hasNext()) {
+            DocumentLineAttributeEntity attr = it.next();
+            if (attr.getName().equals(name)) {
+                it.remove();
+                em.remove(attr);
+            }
+        }
+    }
+
+    @Override
+    public String getAttribute(String name) {
+        for (DocumentLineAttributeEntity attr : line.getAttributes()) {
+            if (attr.getName().equals(name)) {
+                return attr.getValue();
+            }
+        }
+        return null;
+    }
+
+    @Override
+    public Integer getAttribute(String name, Integer defaultValue) {
+        String v = getAttribute(name);
+        return v != null ? Integer.parseInt(v) : defaultValue;
+
+    }
+
+    @Override
+    public Long getAttribute(String name, Long defaultValue) {
+        String v = getAttribute(name);
+        return v != null ? Long.parseLong(v) : defaultValue;
+
+    }
+
+    @Override
+    public Boolean getAttribute(String name, Boolean defaultValue) {
+        String v = getAttribute(name);
+        return v != null ? Boolean.parseBoolean(v) : defaultValue;
+
+    }
+
+    @Override
+    public Map<String, String> getAttributes() {
+        // should always return a copy
+        Map<String, String> result = new HashMap<String, String>();
+        for (DocumentLineAttributeEntity attr : line.getAttributes()) {
+            result.put(attr.getName(), attr.getValue());
+        }
+        return result;
+    }
+
+}
Index: model/jpa/src/main/java/org/openfact/models/jpa/JpaDocumentProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/JpaDocumentProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/JpaDocumentProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -19,13 +19,7 @@
 import org.jboss.logging.Logger;
 import org.openfact.models.*;
 import org.openfact.models.enums.DocumentType;
-import org.openfact.models.enums.RequiredAction;
-import org.openfact.models.jpa.entities.UBLDocumentAttributeEntity;
-import org.openfact.models.jpa.entities.UBLDocumentEntity;
-import org.openfact.models.search.SearchCriteriaFilterModel;
-import org.openfact.models.search.SearchCriteriaFilterOperator;
-import org.openfact.models.search.SearchCriteriaModel;
-import org.openfact.models.search.SearchResultsModel;
+import org.openfact.models.jpa.entities.DocumentEntity;
 
 import javax.persistence.EntityManager;
 import javax.persistence.Query;
@@ -82,7 +76,7 @@
             throw new ModelDuplicateException("Document documentId[" + documentId + "] exists");
         }
 
-        UBLDocumentEntity entity = new UBLDocumentEntity();
+        DocumentEntity entity = new DocumentEntity();
         entity.setDocumentType(documentType.toUpperCase());
         entity.setDocumentId(documentId.toUpperCase());
         entity.setCreatedTimestamp(LocalDateTime.now());
@@ -91,7 +85,7 @@
         em.persist(entity);
         em.flush();
 
-        final DocumentModel adapter = new UBLDocumentAdapter(session, organization, em, entity);
+        final DocumentModel adapter = new DocumentAdapter(session, organization, em, entity);
         session.getOpenfactSessionFactory().publish(new DocumentModel.DocumentCreationEvent() {
             @Override
             public DocumentModel getCreatedDocument() {
@@ -104,44 +98,44 @@
 
     @Override
     public DocumentModel getDocumentById(String id, OrganizationModel organization) {
-        TypedQuery<UBLDocumentEntity> query = em.createNamedQuery("getOrganizationDocumentById", UBLDocumentEntity.class);
-        query.setParameter("id", id);
+        TypedQuery<DocumentEntity> query = em.createNamedQuery("getOrganizationDocumentByDocumentPkId", DocumentEntity.class);
+        query.setParameter("documentPkId", id);
         query.setParameter("organizationId", organization.getId());
-        List<UBLDocumentEntity> entities = query.getResultList();
+        List<DocumentEntity> entities = query.getResultList();
         if (entities.size() == 0) return null;
-        return new UBLDocumentAdapter(session, organization, em, entities.get(0));
+        return new DocumentAdapter(session, organization, em, entities.get(0));
     }
 
     @Override
-    public DocumentModel getDocumentByTypeAndDocumentId(DocumentType documentType, String ublId, OrganizationModel organization) {
-        return getDocumentByTypeAndDocumentId(documentType.toString(), ublId, organization);
+    public DocumentModel getDocumentByTypeAndDocumentId(DocumentType documentType, String documentId, OrganizationModel organization) {
+        return getDocumentByTypeAndDocumentId(documentType.toString(), documentId, organization);
     }
 
     @Override
-    public DocumentModel getDocumentByTypeAndDocumentId(String documentType, String ublId, OrganizationModel organization) {
-        TypedQuery<UBLDocumentEntity> query = em.createNamedQuery("getOrganizationDocumentByTypeAndUblId", UBLDocumentEntity.class);
+    public DocumentModel getDocumentByTypeAndDocumentId(String documentType, String documentId, OrganizationModel organization) {
+        TypedQuery<DocumentEntity> query = em.createNamedQuery("getOrganizationDocumentByDocumentTypeAndDocumentId", DocumentEntity.class);
         query.setParameter("documentType", documentType.toUpperCase());
-        query.setParameter("ublId", ublId.toUpperCase());
+        query.setParameter("documentId", documentId.toUpperCase());
         query.setParameter("organizationId", organization.getId());
-        List<UBLDocumentEntity> entities = query.getResultList();
+        List<DocumentEntity> entities = query.getResultList();
         if (entities.size() == 0) return null;
-        return new UBLDocumentAdapter(session, organization, em, entities.get(0));
+        return new DocumentAdapter(session, organization, em, entities.get(0));
     }
 
     @Override
     public boolean removeDocument(String id, OrganizationModel organization) {
-        UBLDocumentEntity entity = em.find(UBLDocumentEntity.class, id);
+        DocumentEntity entity = em.find(DocumentEntity.class, id);
         if (entity == null) return false;
         removeDocument(entity);
         return true;
     }
 
-    private void removeDocument(UBLDocumentEntity document) {
+    private void removeDocument(DocumentEntity document) {
         String id = document.getId();
         em.flush();
         em.clear();
 
-        document = em.find(UBLDocumentEntity.class, id);
+        document = em.find(DocumentEntity.class, id);
         if (document != null) {
             em.remove(document);
         }
@@ -151,16 +145,20 @@
 
     @Override
     public void preRemove(OrganizationModel organization) {
-        int num = em.createNamedQuery("deleteUblDocumentRequiredActionsByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
+        int num = em.createNamedQuery("deleteDocumentRequiredActionsByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
 
-        num = em.createNamedQuery("deleteAttachedUblDocumentByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
+        num = em.createNamedQuery("deleteAttachedDocumentsByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
 
         num = em.createNamedQuery("deleteSendEventAttachedFilesByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
-        num = em.createNamedQuery("deleteUblDocumentSendEventAttributesByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
-        num = em.createNamedQuery("deleteUblDocumentSendEventByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
+        num = em.createNamedQuery("deleteSendEventAttributesByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
+        num = em.createNamedQuery("deleteSendEventsByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
 
-        num = em.createNamedQuery("deleteUblDocumentAttributesByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
-        num = em.createNamedQuery("deleteUblDocumentsByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
+        num = em.createNamedQuery("deleteDocumentAttributesByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
+
+        num = em.createNamedQuery("deleteDocumentLineAttributesByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
+        num = em.createNamedQuery("deleteDocumentLinesByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
+
+        num = em.createNamedQuery("deleteDocumentsByOrganization").setParameter("organizationId", organization.getId()).executeUpdate();
     }
 
     @Override
@@ -170,7 +168,7 @@
 
     @Override
     public List<DocumentModel> getDocuments(OrganizationModel organization, int firstResult, int maxResults) {
-        TypedQuery<UBLDocumentEntity> query = em.createNamedQuery("getAllUblDocumentsByOrganization", UBLDocumentEntity.class);
+        TypedQuery<DocumentEntity> query = em.createNamedQuery("getAllDocumentsByOrganization", DocumentEntity.class);
         query.setParameter("organizationId", organization.getId());
         if (firstResult != -1) {
             query.setFirstResult(firstResult);
@@ -178,8 +176,8 @@
         if (maxResults != -1) {
             query.setMaxResults(maxResults);
         }
-        List<UBLDocumentEntity> results = query.getResultList();
-        return results.stream().map(f -> new UBLDocumentAdapter(session, organization, em, f)).collect(Collectors.toList());
+        List<DocumentEntity> results = query.getResultList();
+        return results.stream().map(entity -> new DocumentAdapter(session, organization, em, entity)).collect(Collectors.toList());
     }
 
     @Override
@@ -189,7 +187,7 @@
 
     @Override
     public List<DocumentModel> searchForDocument(String filterText, OrganizationModel organization, int firstResult, int maxResults) {
-        TypedQuery<UBLDocumentEntity> query = em.createNamedQuery("searchForUblDocument", UBLDocumentEntity.class);
+        TypedQuery<DocumentEntity> query = em.createNamedQuery("searchForDocument", DocumentEntity.class);
         query.setParameter("organizationId", organization.getId());
         query.setParameter("search", "%" + filterText.toLowerCase() + "%");
         if (firstResult != -1) {
@@ -198,131 +196,17 @@
         if (maxResults != -1) {
             query.setMaxResults(maxResults);
         }
-        List<UBLDocumentEntity> results = query.getResultList();
-        return results.stream().map(f -> new UBLDocumentAdapter(session, organization, em, f)).collect(Collectors.toList());
-    }
-
-    @Override
-    public SearchResultsModel<DocumentModel> searchForDocument(SearchCriteriaModel criteria, OrganizationModel organization) {
-        return searchForDocument(null, criteria, organization);
-    }
-
-    @Override
-    public SearchResultsModel<DocumentModel> searchForDocument(String filterText, SearchCriteriaModel criteria, OrganizationModel organization) {
-        DocumentQuery query = session.documents().createQuery(organization);
-
-        // Filtertext
-        if (filterText != null && !filterText.trim().isEmpty()) {
-            query.filterText(filterText, DOCUMENT_ID, CUSTOMER_REGISTRATION_NAME, CUSTOMER_ASSIGNED_ACCOUNT_ID, CUSTOMER_ELECTRONIC_MAIL);
-        }
-
-        // Filters
-        if (criteria.getFilters() != null && !criteria.getFilters().isEmpty()) {
-            for (SearchCriteriaFilterModel filter : criteria.getFilters()) {
-                if (filter.getName().equalsIgnoreCase(DocumentModel.REQUIRED_ACTIONS)) {
-                    List<String> requiredActions = new ArrayList<>();
-                    if (filter.getValue() instanceof String) {
-                        requiredActions.add((String) filter.getValue());
-                    } else if (filter.getValue() instanceof Collection) {
-                        requiredActions.addAll((Collection) filter.getValue());
-                    } else {
-                        requiredActions.add(String.valueOf(filter.getValue()));
-                    }
-
-                    RequiredAction[] array = requiredActions
-                            .stream()
-                            .map(f -> RequiredAction.valueOf(f.toUpperCase()))
-                            .toArray(size -> new RequiredAction[requiredActions.size()]);
-
-                    query.requiredAction(array);
-                } else if (filter.getName().equalsIgnoreCase(CREATED_TIMESTAMP)) {
-                    if (filter.getOperator().equals(SearchCriteriaFilterOperator.gt) || filter.getOperator().equals(SearchCriteriaFilterOperator.gte)) {
-                        query.fromDate((LocalDateTime) filter.getValue());
-                    } else {
-                        query.toDate((LocalDateTime) filter.getValue());
-                    }
-                } else {
-                    query.addFilter(filter.getName(), filter.getValue(), filter.getOperator());
-                }
-            }
-        }
-
-        DocumentQuery.EntityQuery entityQuery = query.entityQuery();
-
-        // Orders
-        if (criteria.getOrders() != null && !criteria.getOrders().isEmpty()) {
-            criteria.getOrders().stream().forEach(c -> {
-                if (c.isAscending()) {
-                    entityQuery.orderByAsc(c.getName());
-                } else {
-                    entityQuery.orderByDesc(c.getName());
-                }
-            });
-        }
-
-        return entityQuery.searchResult().getSearchResult(criteria.getPaging());
+        List<DocumentEntity> results = query.getResultList();
+        return results.stream().map(f -> new DocumentAdapter(session, organization, em, f)).collect(Collectors.toList());
     }
 
     @Override
     public int getDocumentsCount(OrganizationModel organization) {
-        Query query = em.createNamedQuery("getOrganizationUblDocumentCount");
+        Query query = em.createNamedQuery("getOrganizationDocumentCount");
         Long result = (Long) query.getSingleResult();
         return result.intValue();
     }
 
-    @Override
-    public List<DocumentModel> searchForDocumentByAttribute(String attrName, String attrValue, OrganizationModel organization) {
-        return searchForDocumentByAttribute(attrName, attrValue, organization, -1, -1);
-    }
-
-    @Override
-    public List<DocumentModel> searchForDocumentByAttribute(String attrName, String attrValue, OrganizationModel organization, int firstResult, int maxResults) {
-        TypedQuery<UBLDocumentAttributeEntity> query = em.createNamedQuery("getUblDocumentAttributesByNameAndValue", UBLDocumentAttributeEntity.class);
-        query.setParameter("name", attrName);
-        query.setParameter("value", attrValue);
-        if (firstResult != -1) {
-            query.setFirstResult(firstResult);
-        }
-        if (maxResults != -1) {
-            query.setMaxResults(maxResults);
-        }
-        List<UBLDocumentAttributeEntity> results = query.getResultList();
-
-        List<DocumentModel> documents = new ArrayList<>();
-        for (UBLDocumentAttributeEntity attr : results) {
-            UBLDocumentEntity entity = attr.getUblDocument();
-            documents.add(new UBLDocumentAdapter(session, organization, em, entity));
-        }
-        return documents;
-    }
-
-    @Override
-    public List<DocumentModel> searchForDocumentByAttribute(String documentType, String attrName, String attrValue, OrganizationModel organization) {
-        return searchForDocumentByAttribute(documentType, attrName, attrValue, organization, -1, -1);
-    }
-
-    @Override
-    public List<DocumentModel> searchForDocumentByAttribute(String documentType, String attrName, String attrValue, OrganizationModel organization, int firstResult, int maxResults) {
-        TypedQuery<UBLDocumentAttributeEntity> query = em.createNamedQuery("getUblDocumentAttributesByNameAndValueAndDocumentType", UBLDocumentAttributeEntity.class);
-        query.setParameter("name", attrName);
-        query.setParameter("value", attrValue);
-        query.setParameter("documentType", documentType.toUpperCase());
-        if (firstResult != -1) {
-            query.setFirstResult(firstResult);
-        }
-        if (maxResults != -1) {
-            query.setMaxResults(maxResults);
-        }
-        List<UBLDocumentAttributeEntity> results = query.getResultList();
-
-        List<DocumentModel> documents = new ArrayList<>();
-        for (UBLDocumentAttributeEntity attr : results) {
-            UBLDocumentEntity entity = attr.getUblDocument();
-            documents.add(new UBLDocumentAdapter(session, organization, em, entity));
-        }
-        return documents;
-    }
-
     @Override
     public DocumentQuery createQuery(OrganizationModel organization) {
         return new JpaDocumentQuery(session, organization, em);
Index: model/jpa/src/main/java/org/openfact/models/jpa/OrganizationAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/OrganizationAdapter.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/OrganizationAdapter.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -402,21 +402,18 @@
     public Integer getAttribute(String name, Integer defaultValue) {
         String v = getAttribute(name);
         return v != null ? Integer.parseInt(v) : defaultValue;
-
     }
 
     @Override
     public Long getAttribute(String name, Long defaultValue) {
         String v = getAttribute(name);
         return v != null ? Long.parseLong(v) : defaultValue;
-
     }
 
     @Override
     public Boolean getAttribute(String name, Boolean defaultValue) {
         String v = getAttribute(name);
         return v != null ? Boolean.parseBoolean(v) : defaultValue;
-
     }
 
     @Override
@@ -522,45 +519,11 @@
         em.flush();
     }
 
-    @Override
-    public void removeAttachedDocuments(DocumentType documentType, String documentId) {
-        em.createNamedQuery("deleteInvoiceAttachedDocumentAttributesByOrganizationTypeAndDocumentId")
-                .setParameter("organizationId", organization.getId())
-                .setParameter("documentType", documentType)
-                .setParameter("documentId", documentId)
-                .executeUpdate();
-        em.createNamedQuery("deleteInvoiceAttachedDocumentsByOrganizationTypeAndDocumentId")
-                .setParameter("organizationId", organization.getId())
-                .setParameter("documentType", documentType)
-                .setParameter("documentId", documentId)
-                .executeUpdate();
-
-        em.createNamedQuery("deleteCreditNoteAttachedDocumentAttributesByOrganizationTypeAndDocumentId")
-                .setParameter("organizationId", organization.getId())
-                .setParameter("documentType", documentType)
-                .setParameter("documentId", documentId)
-                .executeUpdate();
-        em.createNamedQuery("deleteCreditNoteAttachedDocumentsByOrganizationTypeAndDocumentId")
-                .setParameter("organizationId", organization.getId())
-                .setParameter("documentType", documentType)
-                .setParameter("documentId", documentId)
-                .executeUpdate();
-
-        em.createNamedQuery("deleteDebitNoteAttachedDocumentAttributesByOrganizationTypeAndDocumentId")
-                .setParameter("organizationId", organization.getId())
-                .setParameter("documentType", documentType)
-                .setParameter("documentId", documentId)
-                .executeUpdate();
-        em.createNamedQuery("deleteDebitNoteAttachedDocumentsByOrganizationTypeAndDocumentId")
-                .setParameter("organizationId", organization.getId())
-                .setParameter("documentType", documentType)
-                .setParameter("documentId", documentId)
-                .executeUpdate();
-    }
-
     /**
      * Components
      */
+    public static final String COMPONENT_PROVIDER_EXISTS_DISABLED = "component.provider.exists.disabled";
+
     @Override
     public ComponentModel addComponentModel(ComponentModel model) {
         model = importComponentModel(model);
@@ -571,12 +534,20 @@
 
     @Override
     public ComponentModel importComponentModel(ComponentModel model) {
-        ComponentFactory componentFactory = ComponentUtil.getComponentFactory(session, model);
-        if (componentFactory == null) {
-            throw new IllegalArgumentException("Invalid component type");
-        }
-
-        componentFactory.validateConfiguration(session, this, model);
+        ComponentFactory componentFactory = null;
+        try {
+            componentFactory = ComponentUtil.getComponentFactory(session, model);
+            if (componentFactory == null && System.getProperty(COMPONENT_PROVIDER_EXISTS_DISABLED) == null) {
+                throw new IllegalArgumentException("Invalid component type");
+            }
+            componentFactory.validateConfiguration(session, this, model);
+        } catch (Exception e) {
+            if (System.getProperty(COMPONENT_PROVIDER_EXISTS_DISABLED) == null) {
+                throw e;
+            }
+
+        }
+
 
         ComponentEntity c = new ComponentEntity();
         if (model.getId() == null) {
@@ -631,8 +602,7 @@
         em.createNamedQuery("deleteComponentConfigByComponent").setParameter("component", c).executeUpdate();
         em.flush();
         setConfig(component, c);
-
-
+        ComponentUtil.notifyUpdated(session, this, component);
     }
 
     @Override
@@ -652,12 +622,11 @@
                 .setParameter("parentId", parentId);
         List<String> results = query.getResultList();
         if (results.isEmpty()) return;
-        for (String id : results) {
-            //session.users().preRemove(this, getComponent(id));
-        }
+//        for (String id : results) {
+//            session.users().preRemove(this, getComponent(id));
+//        }
         em.createNamedQuery("deleteComponentConfigByParent").setParameter("parentId", parentId).executeUpdate();
         em.createNamedQuery("deleteComponentByParent").setParameter("parentId", parentId).executeUpdate();
-
     }
 
     @Override
@@ -679,7 +648,7 @@
 
     @Override
     public List<ComponentModel> getComponents(String parentId) {
-        TypedQuery<ComponentEntity> query = em.createNamedQuery("getComponentsByParent", ComponentEntity.class)
+        TypedQuery<ComponentEntity> query = em.createNamedQuery("getComponentByParent", ComponentEntity.class)
                 .setParameter("organization", organization)
                 .setParameter("parentId", parentId);
         List<ComponentEntity> results = query.getResultList();
Index: model/jpa/src/main/java/org/openfact/models/jpa/JpaJobReportProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/JpaJobReportProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/JpaJobReportProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -17,19 +17,12 @@
 package org.openfact.models.jpa;
 
 import org.jboss.logging.Logger;
-import org.openfact.events.admin.AdminEvent;
-import org.openfact.events.admin.OperationType;
-import org.openfact.events.admin.ResourceType;
-import org.openfact.events.jpa.AdminEventEntity;
-import org.openfact.events.jpa.JpaEventQuery;
 import org.openfact.models.*;
 import org.openfact.models.jpa.entities.JobReportEntity;
-import org.openfact.models.jpa.entities.JobReportEntity;
 
 import javax.persistence.EntityManager;
 import javax.persistence.TypedQuery;
 import java.util.List;
-import java.util.Map;
 import java.util.stream.Collectors;
 
 public class JpaJobReportProvider extends AbstractHibernateStorage implements JobReportProvider {
@@ -100,9 +93,7 @@
 
     @Override
     public List<JobReportModel> getJobReports(OrganizationModel organization, Integer firstResult, Integer maxResults) {
-        String queryName = "getAllJobsReportByOrganization";
-
-        TypedQuery<JobReportEntity> query = em.createNamedQuery(queryName, JobReportEntity.class);
+        TypedQuery<JobReportEntity> query = em.createNamedQuery("getAllJobReportsByOrganization", JobReportEntity.class);
         query.setParameter("organizationId", organization.getId());
         if (firstResult != -1) {
             query.setFirstResult(firstResult);
Index: server-spi/src/main/java/org/openfact/models/JobReportParametersModel.java
===================================================================
--- server-spi/src/main/java/org/openfact/models/JobReportParametersModel.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi/src/main/java/org/openfact/models/JobReportParametersModel.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
@@ -1,19 +0,0 @@
-package org.openfact.models;
-
-public interface JobReportParametersModel {
-
-    String getId();
-
-    long getErrorThreshold();
-
-    void setErrorThreshold(long errorThreshold);
-
-    boolean isJmxMonitoring();
-
-    void setJmxMonitoring(boolean jmxMonitoring);
-
-    int getBatchSize();
-
-    void setBatchSize(int batchSize);
-
-}
Index: model/jpa/src/main/java/org/openfact/models/jpa/JpaOrganizationProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/JpaOrganizationProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/JpaOrganizationProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -96,7 +96,7 @@
         if (entities.size() == 0)
             return null;
         if (entities.size() > 1)
-            throw new IllegalStateException("Should not be more than one sendEvent with same name");
+            throw new IllegalStateException("Should not be more than one documentLine with same name");
         String id = query.getResultList().get(0);
 
         return session.organizations().getOrganization(id);
@@ -178,75 +178,4 @@
         return result.intValue();
     }
 
-//    @Override
-//    public List<OrganizationModel> searchForOrganization(String filterText, int firstResult, int maxResults) {
-//        TypedQuery<OrganizationEntity> query = em.createNamedQuery("searchForOrganization", OrganizationEntity.class);
-//        query.setParameter("filterText", "%" + filterText.toLowerCase() + "%");
-//        if (firstResult != -1) {
-//            query.setFirstResult(firstResult);
-//        }
-//        if (maxResults != -1) {
-//            query.setMaxResults(maxResults);
-//        }
-//        List<OrganizationEntity> results = query.getResultList();
-//        return results.stream().map(f -> new OrganizationAdapter(session, em, f)).collect(Collectors.toList());
-//    }
-
-//    @Override
-//    public List<OrganizationModel> searchForOrganization(Map<String, String> attributes, int firstResult, int maxResults) {
-//        StringBuilder builder = new StringBuilder("select u from OrganizationEntity u");
-//        for (Map.Entry<String, String> entry : attributes.entrySet()) {
-//            String attribute = null;
-//            String parameterName = null;
-//            if (entry.getKey().equals(OrganizationModel.NAME)) {
-//                attribute = "lower(u.name)";
-//                parameterName = JpaOrganizationProvider.NAME;
-//            } else if (entry.getKey().equalsIgnoreCase(OrganizationModel.SUPPLIER_NAME)) {
-//                attribute = "lower(u.supplierName)";
-//                parameterName = JpaOrganizationProvider.SUPPLIER_NAME;
-//            } else if (entry.getKey().equalsIgnoreCase(OrganizationModel.REGISTRATION_NAME)) {
-//                attribute = "lower(u.registrationName)";
-//                parameterName = JpaOrganizationProvider.REGISTRATION_NAME;
-//            } else if (entry.getKey().equalsIgnoreCase(OrganizationModel.ASSIGNED_IDENTIFICATION_ID)) {
-//                attribute = "lower(u.assignedIdentificationId)";
-//                parameterName = JpaOrganizationProvider.ASSIGNED_IDENTIFICATION_ID;
-//            } else if (entry.getKey().equalsIgnoreCase(OrganizationModel.DESCRIPTION)) {
-//                attribute = "lower(u.description)";
-//                parameterName = JpaOrganizationProvider.DESCRIPTION;
-//            }
-//            if (attribute == null)
-//                continue;
-//            builder.append(" and ");
-//            builder.append(attribute).append(" like :").append(parameterName);
-//        }
-//        builder.append(" order by u.id");
-//        String q = builder.toString();
-//        TypedQuery<OrganizationEntity> query = em.createQuery(q, OrganizationEntity.class);
-//        for (Map.Entry<String, String> entry : attributes.entrySet()) {
-//            String parameterName = null;
-//            if (entry.getKey().equals(OrganizationModel.NAME)) {
-//                parameterName = JpaOrganizationProvider.NAME;
-//            } else if (entry.getKey().equalsIgnoreCase(OrganizationModel.SUPPLIER_NAME)) {
-//                parameterName = JpaOrganizationProvider.SUPPLIER_NAME;
-//            } else if (entry.getKey().equalsIgnoreCase(OrganizationModel.REGISTRATION_NAME)) {
-//                parameterName = JpaOrganizationProvider.REGISTRATION_NAME;
-//            } else if (entry.getKey().equalsIgnoreCase(OrganizationModel.ASSIGNED_IDENTIFICATION_ID)) {
-//                parameterName = JpaOrganizationProvider.ASSIGNED_IDENTIFICATION_ID;
-//            } else if (entry.getKey().equalsIgnoreCase(OrganizationModel.DESCRIPTION)) {
-//                parameterName = JpaOrganizationProvider.DESCRIPTION;
-//            }
-//            if (parameterName == null)
-//                continue;
-//            query.setParameter(parameterName, "%" + entry.getValue().toLowerCase() + "%");
-//        }
-//        if (firstResult != -1) {
-//            query.setFirstResult(firstResult);
-//        }
-//        if (maxResults != -1) {
-//            query.setMaxResults(maxResults);
-//        }
-//        List<OrganizationEntity> results = query.getResultList();
-//        return results.stream().map(f -> new OrganizationAdapter(session, em, f)).collect(Collectors.toList());
-//    }
-
 }
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/UBLDocumentEntity.java
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/UBLDocumentEntity.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/DocumentEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -34,24 +34,19 @@
 import org.hibernate.annotations.Type;
 
 @Entity
-@Table(name = "UBL_DOCUMENT", uniqueConstraints = {
+@Table(name = "DOCUMENT", uniqueConstraints = {
         @UniqueConstraint(columnNames = {"ORGANIZATION_ID", "DOCUMENT_TYPE", "DOCUMENT_ID"})
 })
 @NamedQueries({
-        @NamedQuery(name = "getAllUblDocumentsByOrganization", query = "select c from UBLDocumentEntity c where c.organizationId = :organizationId order by c.createdTimestamp"),
-        @NamedQuery(name = "getAllDocumentsByOrganizationDesc", query = "select c from UBLDocumentEntity c where c.organizationId = :organizationId order by c.createdTimestamp desc"),
-        @NamedQuery(name = "getAllDocumentsByOrganizationAndDocumentType", query = "select c from UBLDocumentEntity c where c.organizationId = :organizationId and c.documentType=:documentType order by c.createdTimestamp"),
-        @NamedQuery(name = "getAllDocumentsByOrganizationAndDocumentTypeDesc", query = "select c from UBLDocumentEntity c where c.organizationId = :organizationId and c.documentType=:documentType order by c.createdTimestamp desc"),
-        @NamedQuery(name = "getAllDocumentIdsByOrganization", query = "select c.id from UBLDocumentEntity c where c.organizationId = :organizationId order by c.createdTimestamp"),
-        @NamedQuery(name = "getAllDocumentsByRequiredActionAndOrganization", query = "select c from UBLDocumentEntity c inner join c.requiredActions r where c.organizationId = :organizationId and r.action in :requiredAction order by c.createdTimestamp"),
-        @NamedQuery(name = "getAllDocumentsByRequiredActionAndOrganizationAndDocumentType", query = "select c from UBLDocumentEntity c inner join c.requiredActions r where c.organizationId = :organizationId and c.documentType=:documentType and r.action in :requiredAction order by c.createdTimestamp"),
-        @NamedQuery(name = "getOrganizationDocumentById", query = "select i from UBLDocumentEntity i where i.id = :id and i.organizationId = :organizationId"),
-        @NamedQuery(name = "getOrganizationDocumentByTypeAndUblId", query = "select i from UBLDocumentEntity i where i.documentType=:documentType and i.documentId=:ublId and i.organizationId = :organizationId"),
-        @NamedQuery(name = "searchForUblDocument", query = "select i from UBLDocumentEntity i where i.organizationId = :organizationId and lower(i.documentId) like :search order by i.createdTimestamp"),
-        @NamedQuery(name = "getOrganizationUblDocumentCount", query = "select count(i) from UBLDocumentEntity i where i.organizationId = :organizationId"),
-        @NamedQuery(name = "deleteUblDocumentsByOrganization", query = "delete from UBLDocumentEntity u where u.organizationId = :organizationId")
+        @NamedQuery(name = "getAllDocumentsByOrganization", query = "select c from DocumentEntity c where c.organizationId = :organizationId order by c.createdTimestamp"),
+        @NamedQuery(name = "getAllDocumentIdsByOrganization", query = "select c.id from DocumentEntity c where c.organizationId = :organizationId order by c.createdTimestamp"),
+        @NamedQuery(name = "getOrganizationDocumentByDocumentPkId", query = "select i from DocumentEntity i where i.id = :documentPkId and i.organizationId = :organizationId"),
+        @NamedQuery(name = "getOrganizationDocumentByDocumentTypeAndDocumentId", query = "select i from DocumentEntity i where i.documentType=:documentType and i.documentId=:documentId and i.organizationId = :organizationId"),
+        @NamedQuery(name = "searchForDocument", query = "select i from DocumentEntity i where i.organizationId = :organizationId and lower(i.documentId) like :search order by i.createdTimestamp"),
+        @NamedQuery(name = "getOrganizationDocumentCount", query = "select count(i) from DocumentEntity i where i.organizationId = :organizationId"),
+        @NamedQuery(name = "deleteDocumentsByOrganization", query = "delete from DocumentEntity u where u.organizationId = :organizationId")
 })
-public class UBLDocumentEntity {
+public class DocumentEntity {
 
     @Id
     @Column(name = "ID")
@@ -95,11 +90,11 @@
     @Type(type = "org.hibernate.type.NumericBooleanType")
     private boolean enabled;
 
-    @OneToMany(cascade = CascadeType.REMOVE, orphanRemoval = true, mappedBy = "ublDocument")
-    private Collection<UBLDocumentAttributeEntity> attributes = new ArrayList<>();
+    @OneToMany(cascade = CascadeType.REMOVE, orphanRemoval = true, mappedBy = "document")
+    private Collection<DocumentAttributeEntity> attributes = new ArrayList<>();
 
-    @OneToMany(cascade = CascadeType.REMOVE, orphanRemoval = true, mappedBy = "ublDocument")
-    private Collection<UBLDocumentRequiredActionEntity> requiredActions = new ArrayList<>();
+    @OneToMany(cascade = CascadeType.REMOVE, orphanRemoval = true, mappedBy = "document")
+    private Collection<DocumentRequiredActionEntity> requiredActions = new ArrayList<>();
 
     @Column(name = "CUSTOMER_SEND_EVENT_FAILURES")
     private int customerSendEventFailures;
@@ -107,21 +102,24 @@
     @Column(name = "THIRD_PARTY_SEND_EVENT_FAILURES")
     private int thirdPartySendEventFailures;
 
-    @OneToMany(cascade = {CascadeType.REMOVE}, orphanRemoval = true, mappedBy = "ublDocument", fetch = FetchType.LAZY)
+    @OneToMany(cascade = {CascadeType.REMOVE}, orphanRemoval = true, mappedBy = "document", fetch = FetchType.LAZY)
+    private Collection<DocumentLineEntity> lines = new ArrayList<>();
+
+    @OneToMany(cascade = {CascadeType.REMOVE}, orphanRemoval = true, mappedBy = "document", fetch = FetchType.LAZY)
     private Collection<SendEventEntity> sendEvents = new ArrayList<>();
 
-    @OneToMany(cascade = {CascadeType.REMOVE}, orphanRemoval = true, mappedBy = "ublDocumentOrigin", fetch = FetchType.LAZY)
-    private Collection<AttachedUBLDocumentEntity> attachedDocumentsAsOrigin = new ArrayList<>();
+    @OneToMany(cascade = {CascadeType.REMOVE}, orphanRemoval = true, mappedBy = "documentOrigin", fetch = FetchType.LAZY)
+    private Collection<AttachedDocumentEntity> attachedDocumentsAsOrigin = new ArrayList<>();
 
-    @OneToMany(cascade = {CascadeType.REMOVE}, orphanRemoval = true, mappedBy = "ublDocumentDestiny", fetch = FetchType.LAZY)
-    private Collection<AttachedUBLDocumentEntity> attachedDocumentsAsDestiny = new ArrayList<>();
+    @OneToMany(cascade = {CascadeType.REMOVE}, orphanRemoval = true, mappedBy = "documentDestiny", fetch = FetchType.LAZY)
+    private Collection<AttachedDocumentEntity> attachedDocumentsAsDestiny = new ArrayList<>();
 
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
         if (o == null || getClass() != o.getClass()) return false;
 
-        UBLDocumentEntity that = (UBLDocumentEntity) o;
+        DocumentEntity that = (DocumentEntity) o;
 
         if (!getDocumentId().equals(that.getDocumentId())) return false;
         if (!getDocumentType().equals(that.getDocumentType())) return false;
@@ -224,19 +222,19 @@
         this.enabled = enabled;
     }
 
-    public Collection<UBLDocumentAttributeEntity> getAttributes() {
+    public Collection<DocumentAttributeEntity> getAttributes() {
         return attributes;
     }
 
-    public void setAttributes(Collection<UBLDocumentAttributeEntity> attributes) {
+    public void setAttributes(Collection<DocumentAttributeEntity> attributes) {
         this.attributes = attributes;
     }
 
-    public Collection<UBLDocumentRequiredActionEntity> getRequiredActions() {
+    public Collection<DocumentRequiredActionEntity> getRequiredActions() {
         return requiredActions;
     }
 
-    public void setRequiredActions(Collection<UBLDocumentRequiredActionEntity> requiredActions) {
+    public void setRequiredActions(Collection<DocumentRequiredActionEntity> requiredActions) {
         this.requiredActions = requiredActions;
     }
 
@@ -248,19 +246,19 @@
         this.sendEvents = sendEvents;
     }
 
-    public Collection<AttachedUBLDocumentEntity> getAttachedDocumentsAsOrigin() {
+    public Collection<AttachedDocumentEntity> getAttachedDocumentsAsOrigin() {
         return attachedDocumentsAsOrigin;
     }
 
-    public void setAttachedDocumentsAsOrigin(Collection<AttachedUBLDocumentEntity> attachedDocumentsAsOrigin) {
+    public void setAttachedDocumentsAsOrigin(Collection<AttachedDocumentEntity> attachedDocumentsAsOrigin) {
         this.attachedDocumentsAsOrigin = attachedDocumentsAsOrigin;
     }
 
-    public Collection<AttachedUBLDocumentEntity> getAttachedDocumentsAsDestiny() {
+    public Collection<AttachedDocumentEntity> getAttachedDocumentsAsDestiny() {
         return attachedDocumentsAsDestiny;
     }
 
-    public void setAttachedDocumentsAsDestiny(Collection<AttachedUBLDocumentEntity> attachedDocumentsAsDestiny) {
+    public void setAttachedDocumentsAsDestiny(Collection<AttachedDocumentEntity> attachedDocumentsAsDestiny) {
         this.attachedDocumentsAsDestiny = attachedDocumentsAsDestiny;
     }
 
@@ -279,4 +277,12 @@
     public void setThirdPartySendEventFailures(int thirdPartySendEventFailures) {
         this.thirdPartySendEventFailures = thirdPartySendEventFailures;
     }
+
+    public Collection<DocumentLineEntity> getLines() {
+        return lines;
+    }
+
+    public void setLines(Collection<DocumentLineEntity> lines) {
+        this.lines = lines;
+    }
 }
Index: testsuite/integration/src/test/java/org/openfact/testsuite/AssertEvents.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/AssertEvents.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/AssertEvents.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -46,9 +46,6 @@
 import org.openfact.services.managers.OrganizationManager;
 import org.openfact.testsuite.rule.OpenfactRule;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- */
 public class AssertEvents implements TestRule, EventListenerProviderFactory {
 
     public static String DEFAULT_CLIENT_ID = "test-app";
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/JobReportEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/JobReportEntity.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/JobReportEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -31,8 +31,8 @@
 @Entity
 @Table(name = "JOB_REPORT")
 @NamedQueries({
-        @NamedQuery(name = "getAllJobsReportByOrganization", query = "select i from JobReportEntity i where i.organizationId=:organizationId"),
-        @NamedQuery(name = "deleteJobReportsByOrganization", query = "delete from JobReportEntity f where f.organizationId=:organizationId")
+        @NamedQuery(name = "getAllJobReportsByOrganization", query = "select j from JobReportEntity j where j.organizationId=:organizationId"),
+        @NamedQuery(name = "deleteJobReportsByOrganization", query = "delete from JobReportEntity j where j.organizationId=:organizationId")
 })
 public class JobReportEntity {
 
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/SendEventEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/SendEventEntity.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/SendEventEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -27,11 +27,11 @@
 import java.util.*;
 
 @Entity
-@Table(name = "UBL_DOCUMENT_SEND_EVENT")
+@Table(name = "SEND_EVENT")
 @NamedQueries(value = {
-        @NamedQuery(name = "getAllSendEventByDocumentId", query = "select s from SendEventEntity s where s.ublDocument.id=:documentId"),
-        @NamedQuery(name = "getDocumentSendEventCountByDocument", query = "select count(s) from SendEventEntity s where s.ublDocument.id=:documentId"),
-        @NamedQuery(name = "deleteUblDocumentSendEventByOrganization", query = "delete from SendEventEntity event where event.ublDocument IN (select i from UBLDocumentEntity i where i.organizationId=:organizationId)")
+        @NamedQuery(name = "getAllSendEventsByDocumentPkId", query = "select s from SendEventEntity s where s.document.id=:documentPkId"),
+        @NamedQuery(name = "getDocumentSendEventCountByDocument", query = "select count(s) from SendEventEntity s where s.document.id=:documentId"),
+        @NamedQuery(name = "deleteSendEventsByOrganization", query = "delete from SendEventEntity event where event.document IN (select i from DocumentEntity i where i.organizationId=:organizationId)")
 })
 public class SendEventEntity {
 
@@ -62,8 +62,8 @@
 
     @NotNull
     @ManyToOne(fetch = FetchType.LAZY)
-    @JoinColumn(foreignKey = @ForeignKey, name = "UBL_DOCUMENT_ID")
-    private UBLDocumentEntity ublDocument;
+    @JoinColumn(foreignKey = @ForeignKey, name = "DOCUMENT_ID")
+    private DocumentEntity document;
 
     @OneToMany(cascade = {CascadeType.REMOVE}, orphanRemoval = true, mappedBy = "sendEvent")
     private Collection<SendEventAttributeEntity> attributes = new ArrayList<>();
@@ -129,12 +129,12 @@
         this.createdTimestamp = createdTimestamp;
     }
 
-    public UBLDocumentEntity getUblDocument() {
-        return ublDocument;
+    public DocumentEntity getDocument() {
+        return document;
     }
 
-    public void setUblDocument(UBLDocumentEntity ublDocument) {
-        this.ublDocument = ublDocument;
+    public void setDocument(DocumentEntity ublDocument) {
+        this.document = ublDocument;
     }
 
     public Collection<SendEventAttributeEntity> getAttributes() {
Index: server-spi-private/src/main/java/org/openfact/models/utils/ComponentUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- server-spi-private/src/main/java/org/openfact/models/utils/ComponentUtil.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ server-spi-private/src/main/java/org/openfact/models/utils/ComponentUtil.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -30,6 +30,7 @@
 import java.util.List;
 import java.util.Map;
 
+
 /**
  * @author <a href="mailto:sthorger@redhat.com">Stian Thorgersen</a>
  */
@@ -88,6 +89,14 @@
     public static void notifyCreated(OpenfactSession session, OrganizationModel organization, ComponentModel model) {
         ComponentFactory factory = getComponentFactory(session, model);
         factory.onCreate(session, organization, model);
+//        if (factory instanceof UserStorageProviderFactory) {
+//            ((OnCreateComponent) session.userStorageManager()).onCreate(session, organization, model);
+//        }
+    }
+
+    public static void notifyUpdated(OpenfactSession session, OrganizationModel organization, ComponentModel model) {
+        ComponentFactory factory = getComponentFactory(session, model);
+        factory.onUpdate(session, organization, model);
     }
 
 }
Index: services/src/main/java/org/openfact/report/JarReportThemeProviderFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/src/main/java/org/openfact/report/JarReportThemeProviderFactory.java	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
+++ services/src/main/java/org/openfact/report/JarReportThemeProviderFactory.java	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -1,29 +1,8 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.report;
 
 import org.openfact.Config;
 import org.openfact.models.OpenfactSession;
 import org.openfact.models.OpenfactSessionFactory;
-import org.openfact.theme.ClassLoaderTheme;
-import org.openfact.theme.Theme;
-import org.openfact.theme.ThemeProvider;
-import org.openfact.theme.ThemeProviderFactory;
 import org.openfact.util.JsonSerialization;
 
 import java.io.IOException;
@@ -33,12 +12,9 @@
 import java.util.HashMap;
 import java.util.Map;
 
-/**
- * @author <a href="mailto:sthorger@redhat.com">Stian Thorgersen</a>
- */
 public class JarReportThemeProviderFactory implements ReportThemeProviderFactory {
 
-    protected static final String OPENFACT_THEMES_JSON = "META-INF/openfact-reports.json";
+    protected static final String OPENFACT_REPORT_THEMES_JSON = "META-INF/openfact-reports.json";
     protected static Map<ReportTheme.Type, Map<String, ClassLoaderReportTheme>> themes = new HashMap<>();
 
     public static class ThemeRepresentation {
@@ -83,7 +59,7 @@
     public void init(Config.Scope config) {
         try {
             ClassLoader classLoader = getClass().getClassLoader();
-            Enumeration<URL> resources = classLoader.getResources(OPENFACT_THEMES_JSON);
+            Enumeration<URL> resources = classLoader.getResources(OPENFACT_REPORT_THEMES_JSON);
             while (resources.hasMoreElements()) {
                 loadThemes(classLoader, resources.nextElement().openStream());
             }
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/DocumentLineEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/DocumentLineEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/DocumentLineEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -0,0 +1,54 @@
+package org.openfact.models.jpa.entities;
+
+import org.hibernate.annotations.GenericGenerator;
+
+import javax.inject.Named;
+import javax.persistence.*;
+import java.util.ArrayList;
+import java.util.Collection;
+
+@Entity
+@Table(name = "DOCUMENT_LINE")
+@NamedQueries(value = {
+        @NamedQuery(name = "deleteDocumentLinesByOrganization", query = "delete from DocumentLineEntity l where l.document IN (select doc from DocumentEntity doc where doc.organizationId=:organizationId)")
+})
+public class DocumentLineEntity {
+
+    @Id
+    @Column(name = "ID")
+    @GeneratedValue(generator = "uuid2")
+    @GenericGenerator(name = "uuid2", strategy = "uuid2")
+    @Access(AccessType.PROPERTY)
+    private String id;
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(foreignKey = @ForeignKey, name = "DOCUMENT_ID")
+    private DocumentEntity document;
+
+    @OneToMany(cascade = {CascadeType.REMOVE}, orphanRemoval = true, mappedBy = "documentLine")
+    private Collection<DocumentLineAttributeEntity> attributes = new ArrayList<>();
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public DocumentEntity getDocument() {
+        return document;
+    }
+
+    public void setDocument(DocumentEntity document) {
+        this.document = document;
+    }
+
+    public Collection<DocumentLineAttributeEntity> getAttributes() {
+        return attributes;
+    }
+
+    public void setAttributes(Collection<DocumentLineAttributeEntity> attributes) {
+        this.attributes = attributes;
+    }
+}
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/DBLockTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/DBLockTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/DBLockTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.testsuite.model;
 
 import java.util.LinkedList;
@@ -33,9 +16,6 @@
 import org.openfact.models.dblock.DBLockProviderFactory;
 import org.openfact.models.utils.OpenfactModelUtils;
 
-/**
- * @author <a href="mailto:mposolda@sistcoop.com">Marek Posolda</a>
- */
 public class DBLockTest extends AbstractModelTest {
 
     private static final Logger log = Logger.getLogger(DBLockTest.class);
@@ -71,12 +51,12 @@
         final OpenfactSessionFactory sessionFactory = organizationManager.getSession().getOpenfactSessionFactory();
 
         List<Thread> threads = new LinkedList<>();
-        for (int i=0 ; i<THREADS_COUNT ; i++) {
+        for (int i = 0; i < THREADS_COUNT; i++) {
             Thread thread = new Thread() {
 
                 @Override
                 public void run() {
-                    for (int i=0 ; i<ITERATIONS_PER_THREAD ; i++) {
+                    for (int i = 0; i < ITERATIONS_PER_THREAD; i++) {
                         try {
                             OpenfactModelUtils.runJobInTransaction(sessionFactory, new OpenfactSessionTask() {
 
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/AdapterTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/AdapterTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/AdapterTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.testsuite.model;
 
 import static org.junit.Assert.assertNotNull;
@@ -34,10 +17,6 @@
 import org.openfact.models.OrganizationModel;
 import org.openfact.models.enums.DocumentType;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- * @version $Revision: 1 $
- */
 @FixMethodOrder(MethodSorters.NAME_ASCENDING)
 public class AdapterTest extends AbstractModelTest {
 
@@ -157,7 +136,7 @@
         commit();
 
 
-        // Try to create ublDocument with duplicate series and number
+        // Try to create document with duplicate series and number
         try {
             sistcoop1 = organizationManager.getOrganizationByName("SISTCOOP1");
             organizationManager.getSession().documents().addDocument(DocumentType.INVOICE.toString(), "F01-001", sistcoop1);
Index: testsuite/integration/src/test/java/org/openfact/testsuite/ApplicationServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/ApplicationServlet.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/ApplicationServlet.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -27,9 +27,6 @@
 import java.io.IOException;
 import java.io.PrintWriter;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- */
 public class ApplicationServlet extends HttpServlet {
 
     private static final String LINK = "<a href=\"%s\" id=\"%s\">%s</a>";
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/FileModelTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/FileModelTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/FileModelTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,73 +1,59 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.testsuite.model;
 
-import com.google.common.collect.ImmutableMap;
 import org.junit.Assert;
 import org.junit.Test;
 import org.openfact.file.FileModel;
-import org.openfact.file.FileProvider;
-import org.openfact.file.InternetMediaType;
-import org.openfact.models.*;
-import org.openfact.models.enums.DestinyType;
-import org.openfact.models.enums.DocumentType;
-import org.openfact.models.enums.RequiredAction;
-
-import java.time.LocalDateTime;
-import java.time.ZoneId;
-import java.util.*;
+import org.openfact.models.OpenfactSession;
+import org.openfact.models.OrganizationModel;
 
 import static org.junit.Assert.assertNotNull;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- */
 public class FileModelTest extends AbstractModelTest {
 
     @Test
     public void persistFile() {
         OrganizationModel organization = organizationManager.createOrganization("original");
         OpenfactSession session = organizationManager.getSession();
-        FileModel file = session.getProvider(FileProvider.class).createFile(organization, "file1", new byte[]{1,2,3});
-        String fileId = file.getId();
+        FileModel file1 = session.files().createFile(organization, "file1", new byte[]{1, 2, 3});
+        String file1Id = file1.getId();
 
-        Assert.assertNotNull(file);
-        Assert.assertEquals(file.getExtension(), "");
+        Assert.assertNotNull(file1);
+        Assert.assertEquals(file1.getExtension(), "");
 
-        file.setFileName("file1.xml");
+        file1.setFileName("file1.xml");
         commit();
 
         session = organizationManager.getSession();
-        file = session.getProvider(FileProvider.class).getFileById(organization, fileId);
+        file1 = session.files().getFileById(organization, file1Id);
 
-        Assert.assertEquals(file.getFileName(), "file1.xml");
-        Assert.assertEquals(file.getExtension(), ".xml");
-        assertNotNull(file.getFile());
+        Assert.assertEquals(file1.getFileName(), "file1.xml");
+        Assert.assertEquals(file1.getExtension(), ".xml");
+        assertNotNull(file1.getFile());
 
         OrganizationModel searchOrganization = organizationManager.getOrganization(organization.getId());
-        FileModel persisted = session.getProvider(FileProvider.class).getFileByFileName(searchOrganization, "file1.xml");
+        FileModel persisted = session.files().getFileById(searchOrganization, file1Id);
 
         Assert.assertNotNull(persisted);
-        assertEquals(file, persisted);
+        assertEquals(file1, persisted);
+    }
 
-        searchOrganization = organizationManager.getOrganization(organization.getId());
-        FileModel persisted2 = session.getProvider(FileProvider.class).getFileById(searchOrganization, file.getId());
-        assertEquals(file, persisted2);
+    @Test
+    public void removeFile() {
+        OrganizationModel organization = organizationManager.createOrganization("original");
+        OpenfactSession session = organizationManager.getSession();
+        FileModel file1 = session.files().createFile(organization, "file1.xml", new byte[]{1, 2, 3});
+        String file1Id = file1.getId();
+        commit();
+
+        session = organizationManager.getSession();
+        file1 = session.files().getFileById(organization, file1Id);
+
+        Assert.assertTrue(session.files().removeFile(organization, file1));
+
+        OrganizationModel searchOrganization = organizationManager.getOrganization(organization.getId());
+        FileModel persisted = session.files().getFileById(searchOrganization, file1Id);
+
+        Assert.assertNull(persisted);
     }
 
     public static void assertEquals(FileModel expected, FileModel actual) {
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/AttachedDocumentEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/AttachedDocumentEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/AttachedDocumentEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -0,0 +1,135 @@
+/*******************************************************************************
+ * Copyright 2016 Sistcoop, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+//
+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
+// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
+// Any modifications to this file will be lost upon recompilation of the source schema. 
+// Generated on: 2016.09.14 at 11:44:49 AM PET 
+//
+
+package org.openfact.models.jpa.entities;
+
+import javax.persistence.*;
+import javax.validation.constraints.NotNull;
+import java.io.Serializable;
+
+@Entity
+@Table(name = "ATTACHED_DOCUMENT")
+@IdClass(AttachedDocumentEntity.Key.class)
+@NamedQueries(value = {
+        @NamedQuery(name = "getAttachedDocumentsDestinyByOrigin", query = "select a.documentDestiny from AttachedDocumentEntity a where a.documentOrigin.id=:documentOriginId"),
+        @NamedQuery(name = "getAttachedDocumentsOriginByDestiny", query = "select a.documentOrigin from AttachedDocumentEntity a where a.documentDestiny.id=:documentDestinyId"),
+        @NamedQuery(name = "deleteAttachedDocumentsByOrganization", query = "delete from AttachedDocumentEntity at where at.documentOrigin IN (select doc from DocumentEntity doc where doc.organizationId=:organizationId)")
+})
+public class AttachedDocumentEntity {
+
+    @Id
+    @NotNull
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(foreignKey = @ForeignKey, name = "DOCUMENT_ORIGIN_ID")
+    protected DocumentEntity documentOrigin;
+
+    @Id
+    @NotNull
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(foreignKey = @ForeignKey, name = "DOCUMENT_DESTINY_ID")
+    protected DocumentEntity documentDestiny;
+
+    public DocumentEntity getDocumentOrigin() {
+        return documentOrigin;
+    }
+
+    public void setDocumentOrigin(DocumentEntity ublDocument) {
+        this.documentOrigin = ublDocument;
+    }
+
+    public DocumentEntity getDocumentDestiny() {
+        return documentDestiny;
+    }
+
+    public void setDocumentDestiny(DocumentEntity attachedUblDocument) {
+        this.documentDestiny = attachedUblDocument;
+    }
+
+    public static class Key implements Serializable {
+
+        protected DocumentEntity documentOrigin;
+
+        protected DocumentEntity documentDestiny;
+
+        public Key() {
+        }
+
+        public Key(DocumentEntity ublDocument, DocumentEntity attachedUblDocument) {
+            this.documentOrigin = ublDocument;
+            this.documentDestiny = attachedUblDocument;
+        }
+
+        public DocumentEntity getDocumentOrigin() {
+            return documentOrigin;
+        }
+
+        public DocumentEntity getDocumentDestiny() {
+            return documentDestiny;
+        }
+
+        @Override
+        public boolean equals(Object o) {
+            if (this == o) return true;
+            if (o == null || getClass() != o.getClass()) return false;
+
+            AttachedDocumentEntity.Key key = (AttachedDocumentEntity.Key) o;
+
+            if (documentOrigin != null ? !documentOrigin.getId().equals(key.documentOrigin != null ? key.documentOrigin.getId() : null) : key.documentOrigin != null)
+                return false;
+            if (documentDestiny != null ? !documentDestiny.getId().equals(key.documentDestiny != null ? key.documentDestiny.getId() : null) : key.documentDestiny != null)
+                return false;
+
+            return true;
+        }
+
+        @Override
+        public int hashCode() {
+            int result = documentOrigin != null ? documentOrigin.getId().hashCode() : 0;
+            result = 31 * result + (documentDestiny != null ? documentDestiny.hashCode() : 0);
+            return result;
+        }
+    }
+
+    @Override
+    public boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null) return false;
+        if (!(o instanceof OrganizationAttributeEntity)) return false;
+
+        AttachedDocumentEntity key = (AttachedDocumentEntity) o;
+
+        if (documentOrigin != null ? !documentOrigin.getId().equals(key.documentOrigin != null ? key.documentOrigin.getId() : null) : key.documentOrigin != null)
+            return false;
+        if (documentDestiny != null ? !documentDestiny.getId().equals(key.documentDestiny != null ? key.documentDestiny.getId() : null) : key.documentDestiny != null)
+            return false;
+        return true;
+    }
+
+    @Override
+    public int hashCode() {
+        int result = documentOrigin != null ? documentOrigin.getId().hashCode() : 0;
+        result = 31 * result + (documentDestiny != null ? documentDestiny.hashCode() : 0);
+        return result;
+    }
+
+}
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/UBLDocumentAttributeEntity.java
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/UBLDocumentAttributeEntity.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/DocumentAttributeEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -26,15 +26,14 @@
 import javax.persistence.*;
 
 @Entity
-@Table(name = "UBL_DOCUMENT_ATTRIBUTE")
+@Table(name = "DOCUMENT_ATTRIBUTE")
 @NamedQueries({
-        @NamedQuery(name = "getUblDocumentAttributesByNameAndValue", query = "select attr from UBLDocumentAttributeEntity attr where attr.name = :name and attr.value = :value"),
-        @NamedQuery(name = "getUblDocumentAttributesByNameAndValueAndDocumentType", query = "select attr from UBLDocumentAttributeEntity attr join attr.ublDocument doc where attr.name = :name and attr.value = :value and doc.documentType=:documentType"),
-        @NamedQuery(name = "deleteUblDocumentAttributesByOrganization", query = "delete from  UBLDocumentAttributeEntity attr where attr.ublDocument IN (select u from UBLDocumentEntity u where u.organizationId=:organizationId)"),
-        @NamedQuery(name = "deleteUblDocumentAttributesByNameAndUblDocument", query = "delete from  UBLDocumentAttributeEntity attr where attr.ublDocument.id = :documentId and attr.name = :name"),
-        @NamedQuery(name = "deleteUblDocumentAttributesByNameAndUblDocumentOtherThan", query = "delete from  UBLDocumentAttributeEntity attr where attr.ublDocument.id = :documentId and attr.name = :name and attr.id <> :attrId")
+        @NamedQuery(name = "getDocumentAttributesByNameAndValue", query = "select attr from DocumentAttributeEntity attr where attr.name = :name and attr.value = :value"),
+        @NamedQuery(name = "deleteDocumentAttributesByOrganization", query = "delete from  DocumentAttributeEntity attr where attr.document IN (select u from DocumentEntity u where u.organizationId=:organizationId)"),
+        @NamedQuery(name = "deleteDocumentAttributesByNameAndDocumentPkId", query = "delete from  DocumentAttributeEntity attr where attr.document.id = :documentPkId and attr.name = :name"),
+        @NamedQuery(name = "deleteDocumentAttributesByNameAndDocumentPkIdOtherThan", query = "delete from  DocumentAttributeEntity attr where attr.document.id = :documentPkId and attr.name = :name and attr.id <> :attrId")
 })
-public class UBLDocumentAttributeEntity {
+public class DocumentAttributeEntity {
 
     @Id
     @Column(name = "ID", length = 36)
@@ -42,8 +41,8 @@
     private String id;
 
     @ManyToOne(fetch = FetchType.LAZY)
-    @JoinColumn(foreignKey = @ForeignKey, name = "UBL_DOCUMENT_ID")
-    private UBLDocumentEntity ublDocument;
+    @JoinColumn(foreignKey = @ForeignKey, name = "DOCUMENT_ID")
+    private DocumentEntity document;
 
     @Column(name = "NAME")
     private String name;
@@ -75,21 +74,21 @@
         this.value = value;
     }
 
-    public UBLDocumentEntity getUblDocument() {
-        return ublDocument;
+    public DocumentEntity getDocument() {
+        return document;
     }
 
-    public void setUblDocument(UBLDocumentEntity document) {
-        this.ublDocument = document;
+    public void setDocument(DocumentEntity document) {
+        this.document = document;
     }
 
     @Override
     public boolean equals(Object o) {
         if (this == o) return true;
         if (o == null) return false;
-        if (!(o instanceof UBLDocumentAttributeEntity)) return false;
+        if (!(o instanceof DocumentAttributeEntity)) return false;
 
-        UBLDocumentAttributeEntity that = (UBLDocumentAttributeEntity) o;
+        DocumentAttributeEntity that = (DocumentAttributeEntity) o;
 
         if (!id.equals(that.getId())) return false;
 
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/SendEventAttributeEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/SendEventAttributeEntity.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/SendEventAttributeEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -33,7 +33,7 @@
         @NamedQuery(name = "getSendEventResponseAttributesByNameAndValue", query = "select attr from SendEventAttributeEntity attr where attr.name = :name and attr.value = :value"),
         @NamedQuery(name = "deleteSendEventResponseAttributesByNameAndSendEvent", query = "delete from  SendEventAttributeEntity attr where attr.sendEvent.id = :sendEventId and attr.name = :name"),
         @NamedQuery(name = "deleteSendEventResponseAttributesByNameAndSendEventOtherThan", query = "delete from  SendEventAttributeEntity attr where attr.sendEvent.id = :sendEventId and attr.name = :name and attr.id <> :attrId"),
-        @NamedQuery(name = "deleteUblDocumentSendEventAttributesByOrganization", query = "delete from SendEventAttributeEntity attr where attr.sendEvent IN (select s from SendEventEntity s join s.ublDocument i where i.organizationId=:organizationId)")
+        @NamedQuery(name = "deleteSendEventAttributesByOrganization", query = "delete from SendEventAttributeEntity attr where attr.sendEvent IN (select s from SendEventEntity s join s.document i where i.organizationId=:organizationId)")
 })
 public class SendEventAttributeEntity {
 
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/TransactionsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/TransactionsTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/TransactionsTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.testsuite.model;
 
 import org.junit.Assert;
@@ -23,9 +6,6 @@
 import org.openfact.models.OpenfactSession;
 import org.openfact.testsuite.rule.OpenfactRule;
 
-/**
- * @author <a href="mailto:mposolda@sistcoop.com">Marek Posolda</a>
- */
 public class TransactionsTest {
 
     @ClassRule
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/AbstractModelTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/AbstractModelTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/AbstractModelTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.testsuite.model;
 
 import org.junit.After;
@@ -35,9 +18,6 @@
 import java.io.InputStream;
 import java.util.Set;
 
-/**
- * @author <a href="mailto:mposolda@sistcoop.com">Marek Posolda</a>
- */
 public class AbstractModelTest {
 
     @ClassRule
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/DocumentModelTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/DocumentModelTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/DocumentModelTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.testsuite.model;
 
 import com.google.common.collect.ImmutableMap;
@@ -31,10 +14,8 @@
 import java.util.*;
 
 import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertTrue;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- */
 public class DocumentModelTest extends AbstractModelTest {
 
     @Test
@@ -61,6 +42,35 @@
         assertEquals(document, persisted2);
     }
 
+    @Test
+    public void testDocumentLines() {
+        OrganizationModel organization = organizationManager.createOrganization("original");
+        OpenfactSession session = organizationManager.getSession();
+        DocumentModel document = session.documents().addDocument(DocumentType.INVOICE, "document", organization);
+        DocumentLineModel documentLine = document.addDocumentLine();
+        assertNotNull(documentLine);
+
+        documentLine.setAttribute("key1", "value1");
+        documentLine.setAttribute("key2", "value2");
+
+        Assert.assertEquals(2, documentLine.getAttributes().size());
+        commit();
+
+        session = organizationManager.getSession();
+        organization = organizationManager.getOrganization(organization.getId());
+        document = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE, "document", organization);
+        Assert.assertEquals(1, document.getDocumentLines().size());
+
+        documentLine = document.getDocumentLines().get(0);
+        documentLine.removeAttribute("key1");
+
+        Assert.assertEquals(1, documentLine.getAttributes().size());
+
+        document.removeDocumentLine(documentLine);
+
+        Assert.assertTrue(document.getDocumentLines().isEmpty());
+    }
+
     @Test
     public void testDocumentRequiredActions() throws Exception {
         OrganizationModel organization = organizationManager.createOrganization("original");
@@ -209,41 +219,41 @@
         Assert.assertTrue(documents.contains(document1));
     }
 
-    @Test
-    public void testSearchByDocumentAttribute() throws Exception {
-        OrganizationModel organization = organizationManager.createOrganization("original");
-        DocumentModel document1 = session.documents().addDocument(DocumentType.INVOICE, "document1", organization);
-        DocumentModel document2 = session.documents().addDocument(DocumentType.INVOICE, "document2", organization);
-        DocumentModel document3 = session.documents().addDocument(DocumentType.INVOICE, "document3", organization);
-
-        document1.setSingleAttribute("key1", "value1");
-        document1.setSingleAttribute("key2", "value21");
-
-        document2.setSingleAttribute("key1", "value1");
-        document2.setSingleAttribute("key2", "value22");
-
-        document3.setSingleAttribute("key2", "value21");
-
-        commit();
-        organization = session.organizations().getOrganizationByName("original");
-
-        List<DocumentModel> documents = session.documents().searchForDocumentByAttribute("key1", "value1", organization);
-        Assert.assertEquals(2, documents.size());
-        Assert.assertTrue(documents.contains(document1));
-        Assert.assertTrue(documents.contains(document2));
-
-        documents = session.documents().searchForDocumentByAttribute("key2", "value21", organization);
-        Assert.assertEquals(2, documents.size());
-        Assert.assertTrue(documents.contains(document1));
-        Assert.assertTrue(documents.contains(document3));
-
-        documents = session.documents().searchForDocumentByAttribute("key2", "value22", organization);
-        Assert.assertEquals(1, documents.size());
-        Assert.assertTrue(documents.contains(document2));
-
-        documents = session.documents().searchForDocumentByAttribute("key3", "value3", organization);
-        Assert.assertEquals(0, documents.size());
-    }
+//    @Test
+//    public void testSearchByDocumentAttribute() throws Exception {
+//        OrganizationModel organization = organizationManager.createOrganization("original");
+//        DocumentModel document1 = session.documents().addDocument(DocumentType.INVOICE, "document1", organization);
+//        DocumentModel document2 = session.documents().addDocument(DocumentType.INVOICE, "document2", organization);
+//        DocumentModel document3 = session.documents().addDocument(DocumentType.INVOICE, "document3", organization);
+//
+//        document1.setSingleAttribute("key1", "value1");
+//        document1.setSingleAttribute("key2", "value21");
+//
+//        document2.setSingleAttribute("key1", "value1");
+//        document2.setSingleAttribute("key2", "value22");
+//
+//        document3.setSingleAttribute("key2", "value21");
+//
+//        commit();
+//        organization = session.organizations().getOrganizationByName("original");
+//
+//        List<DocumentModel> documents = session.documents().searchForDocumentByAttribute("key1", "value1", organization);
+//        Assert.assertEquals(2, documents.size());
+//        Assert.assertTrue(documents.contains(document1));
+//        Assert.assertTrue(documents.contains(document2));
+//
+//        documents = session.documents().searchForDocumentByAttribute("key2", "value21", organization);
+//        Assert.assertEquals(2, documents.size());
+//        Assert.assertTrue(documents.contains(document1));
+//        Assert.assertTrue(documents.contains(document3));
+//
+//        documents = session.documents().searchForDocumentByAttribute("key2", "value22", organization);
+//        Assert.assertEquals(1, documents.size());
+//        Assert.assertTrue(documents.contains(document2));
+//
+//        documents = session.documents().searchForDocumentByAttribute("key3", "value3", organization);
+//        Assert.assertEquals(0, documents.size());
+//    }
 
     @Test
     public void testDocumentSendEvent() {
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/JobReporModelTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/JobReporModelTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/JobReporModelTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -27,31 +27,42 @@
 
 import static org.junit.Assert.assertNotNull;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- */
 public class JobReporModelTest extends AbstractModelTest {
 
     @Test
     public void persistJobFile() {
         OrganizationModel organization = organizationManager.createOrganization("original");
         OpenfactSession session = organizationManager.getSession();
-        JobReportModel report = session.jobReports().createJobReport(organization, "report1");
-        String reportId = report.getId();
+        JobReportModel report1 = session.jobReports().createJobReport(organization, "JobTaskReport");
+        String report1Id = report1.getId();
 
-        Assert.assertNotNull(report);
+        Assert.assertNotNull(report1);
+        Assert.assertEquals(1, session.jobReports().getJobReports(organization).size());
         commit();
 
+
         session = organizationManager.getSession();
-        report = session.jobReports().getJobReportById(organization, reportId);
+        JobReportModel report2 = session.jobReports().createJobReport(organization, "JobTaskReport");
+        String report2Id = report2.getId();
 
-        Assert.assertEquals(report.getJobName(), "report1");
+        Assert.assertNotNull(report2);
+        Assert.assertEquals(2, session.jobReports().getJobReports(organization).size());
 
+        report1 = session.jobReports().getJobReportById(organization, report1Id);
+
+        Assert.assertEquals(report1.getJobName(), "JobTaskReport");
+        Assert.assertEquals(report2.getJobName(), "JobTaskReport");
+        Assert.assertNotEquals(report1, report2);
+
+        commit();
+
+        session = organizationManager.getSession();
         OrganizationModel searchOrganization = organizationManager.getOrganization(organization.getId());
-        JobReportModel persisted = session.jobReports().getJobReportById(searchOrganization, reportId);
+        report1 = session.jobReports().getJobReportById(searchOrganization, report1Id);
+        report2 = session.jobReports().getJobReportById(searchOrganization, report2Id);
 
-        Assert.assertNotNull(persisted);
-        assertEquals(report, persisted);
+        Assert.assertTrue(session.jobReports().removeJobReport(organization, report1));
+        Assert.assertEquals(1, session.jobReports().getJobReports(organization).size());
     }
 
     public static void assertEquals(JobReportModel expected, JobReportModel actual) {
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/AttachedUBLDocumentEntity.java
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/AttachedUBLDocumentEntity.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/AttachedUBLDocumentEntity.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
@@ -1,135 +0,0 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-//
-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
-// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
-// Any modifications to this file will be lost upon recompilation of the source schema. 
-// Generated on: 2016.09.14 at 11:44:49 AM PET 
-//
-
-package org.openfact.models.jpa.entities;
-
-import javax.persistence.*;
-import javax.validation.constraints.NotNull;
-import java.io.Serializable;
-
-@Entity
-@Table(name = "ATTACHED_UBL_DOCUMENT")
-@IdClass(AttachedUBLDocumentEntity.Key.class)
-@NamedQueries(value = {
-        @NamedQuery(name = "getAttachedUBLDocumentDestinyByOrigin", query = "select a.ublDocumentDestiny from AttachedUBLDocumentEntity a where a.ublDocumentOrigin.id=:ublDocumentOriginId"),
-        @NamedQuery(name = "getAttachedUBLDocumentOriginByDestiny", query = "select a.ublDocumentOrigin from AttachedUBLDocumentEntity a where a.ublDocumentDestiny.id=:ublDocumentDestinyId"),
-        @NamedQuery(name = "deleteAttachedUblDocumentByOrganization", query = "delete from AttachedUBLDocumentEntity at where at.ublDocumentOrigin IN (select doc from UBLDocumentEntity doc where doc.organizationId=:organizationId)")
-})
-public class AttachedUBLDocumentEntity {
-
-    @Id
-    @NotNull
-    @ManyToOne(fetch = FetchType.LAZY)
-    @JoinColumn(foreignKey = @ForeignKey, name = "UBL_DOCUMENT_ORIGIN_ID")
-    protected UBLDocumentEntity ublDocumentOrigin;
-
-    @Id
-    @NotNull
-    @ManyToOne(fetch = FetchType.LAZY)
-    @JoinColumn(foreignKey = @ForeignKey, name = "UBL_DOCUMENT_DESTINY_ID")
-    protected UBLDocumentEntity ublDocumentDestiny;
-
-    public UBLDocumentEntity getUblDocumentOrigin() {
-        return ublDocumentOrigin;
-    }
-
-    public void setUblDocumentOrigin(UBLDocumentEntity ublDocument) {
-        this.ublDocumentOrigin = ublDocument;
-    }
-
-    public UBLDocumentEntity getUblDocumentDestiny() {
-        return ublDocumentDestiny;
-    }
-
-    public void setUblDocumentDestiny(UBLDocumentEntity attachedUblDocument) {
-        this.ublDocumentDestiny = attachedUblDocument;
-    }
-
-    public static class Key implements Serializable {
-
-        protected UBLDocumentEntity ublDocumentOrigin;
-
-        protected UBLDocumentEntity ublDocumentDestiny;
-
-        public Key() {
-        }
-
-        public Key(UBLDocumentEntity ublDocument, UBLDocumentEntity attachedUblDocument) {
-            this.ublDocumentOrigin = ublDocument;
-            this.ublDocumentDestiny = attachedUblDocument;
-        }
-
-        public UBLDocumentEntity getUblDocumentOrigin() {
-            return ublDocumentOrigin;
-        }
-
-        public UBLDocumentEntity getUblDocumentDestiny() {
-            return ublDocumentDestiny;
-        }
-
-        @Override
-        public boolean equals(Object o) {
-            if (this == o) return true;
-            if (o == null || getClass() != o.getClass()) return false;
-
-            AttachedUBLDocumentEntity.Key key = (AttachedUBLDocumentEntity.Key) o;
-
-            if (ublDocumentOrigin != null ? !ublDocumentOrigin.getId().equals(key.ublDocumentOrigin != null ? key.ublDocumentOrigin.getId() : null) : key.ublDocumentOrigin != null)
-                return false;
-            if (ublDocumentDestiny != null ? !ublDocumentDestiny.getId().equals(key.ublDocumentDestiny != null ? key.ublDocumentDestiny.getId() : null) : key.ublDocumentDestiny != null)
-                return false;
-
-            return true;
-        }
-
-        @Override
-        public int hashCode() {
-            int result = ublDocumentOrigin != null ? ublDocumentOrigin.getId().hashCode() : 0;
-            result = 31 * result + (ublDocumentDestiny != null ? ublDocumentDestiny.hashCode() : 0);
-            return result;
-        }
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) return true;
-        if (o == null) return false;
-        if (!(o instanceof OrganizationAttributeEntity)) return false;
-
-        AttachedUBLDocumentEntity key = (AttachedUBLDocumentEntity) o;
-
-        if (ublDocumentOrigin != null ? !ublDocumentOrigin.getId().equals(key.ublDocumentOrigin != null ? key.ublDocumentOrigin.getId() : null) : key.ublDocumentOrigin != null)
-            return false;
-        if (ublDocumentDestiny != null ? !ublDocumentDestiny.getId().equals(key.ublDocumentDestiny != null ? key.ublDocumentDestiny.getId() : null) : key.ublDocumentDestiny != null)
-            return false;
-        return true;
-    }
-
-    @Override
-    public int hashCode() {
-        int result = ublDocumentOrigin != null ? ublDocumentOrigin.getId().hashCode() : 0;
-        result = 31 * result + (ublDocumentDestiny != null ? ublDocumentDestiny.hashCode() : 0);
-        return result;
-    }
-
-}
Index: services/src/main/java/org/openfact/services/resources/admin/DocumentsAdminResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/src/main/java/org/openfact/services/resources/admin/DocumentsAdminResource.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ services/src/main/java/org/openfact/services/resources/admin/DocumentsAdminResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -21,6 +21,9 @@
 import org.openfact.common.ClientConnection;
 import org.openfact.events.admin.ResourceType;
 import org.openfact.models.*;
+import org.openfact.models.enums.RequiredAction;
+import org.openfact.models.search.SearchCriteriaFilterModel;
+import org.openfact.models.search.SearchCriteriaFilterOperator;
 import org.openfact.models.search.SearchCriteriaModel;
 import org.openfact.models.search.SearchResultsModel;
 import org.openfact.models.utils.ModelToRepresentation;
@@ -28,10 +31,12 @@
 import org.openfact.representations.idm.DocumentRepresentation;
 import org.openfact.representations.idm.search.SearchCriteriaRepresentation;
 import org.openfact.representations.idm.search.SearchResultsRepresentation;
+import org.openfact.services.ErrorResponse;
 import org.openfact.services.ServicesLogger;
 
 import javax.ws.rs.*;
 import javax.ws.rs.core.*;
+import java.time.LocalDateTime;
 import java.util.*;
 import java.util.stream.Collectors;
 
@@ -85,7 +90,7 @@
     @GET
     @NoCache
     @Produces(MediaType.APPLICATION_JSON)
-    public List<DocumentRepresentation> getInvoices(
+    public List<DocumentRepresentation> getDocuments(
             @QueryParam("filterText") String filterText,
             @QueryParam("documentType") String documentType,
             @QueryParam("documentId") String documentId,
@@ -128,14 +133,68 @@
         auth.requireView();
 
         SearchCriteriaModel criteriaModel = RepresentationToModel.toModel(criteria);
-
         String filterText = criteria.getFilterText();
-        SearchResultsModel<DocumentModel> results = null;
-        if (filterText != null) {
-            results = session.documents().searchForDocument(filterText, criteriaModel, organization);
-        } else {
-            results = session.documents().searchForDocument(criteriaModel, organization);
+
+        DocumentQuery query = session.documents().createQuery(organization);
+
+        // Filtertext
+        if (filterText != null && !filterText.trim().isEmpty()) {
+            query.filterText(filterText, DocumentModel.DOCUMENT_ID, DocumentModel.CUSTOMER_REGISTRATION_NAME, DocumentModel.CUSTOMER_ASSIGNED_ACCOUNT_ID, DocumentModel.CUSTOMER_ELECTRONIC_MAIL);
+        }
+
+        // Filters
+        if (criteriaModel.getFilters() != null && !criteriaModel.getFilters().isEmpty()) {
+            for (SearchCriteriaFilterModel filter : criteriaModel.getFilters()) {
+                if (filter.getName().equalsIgnoreCase(DocumentModel.REQUIRED_ACTIONS)) {
+                    List<String> requiredActions = new ArrayList<>();
+                    if (filter.getValue() instanceof String) {
+                        requiredActions.add((String) filter.getValue());
+                    } else if (filter.getValue() instanceof Collection) {
+                        requiredActions.addAll((Collection) filter.getValue());
+                    } else {
+                        requiredActions.add(String.valueOf(filter.getValue()));
+                    }
+
+                    RequiredAction[] array = requiredActions
+                            .stream()
+                            .map(f -> RequiredAction.valueOf(f.toUpperCase()))
+                            .toArray(size -> new RequiredAction[requiredActions.size()]);
+
+                    query.requiredAction(array);
+                } else if (filter.getName().equalsIgnoreCase(DocumentModel.CREATED_TIMESTAMP)) {
+                    if (filter.getOperator().equals(SearchCriteriaFilterOperator.gt)) {
+                        query.fromDate((LocalDateTime) filter.getValue(), false);
+                    } else if (filter.getOperator().equals(SearchCriteriaFilterOperator.gte)) {
+                        query.fromDate((LocalDateTime) filter.getValue(), true);
+                    } else if (filter.getOperator().equals(SearchCriteriaFilterOperator.lt)) {
+                        query.toDate((LocalDateTime) filter.getValue(), false);
+                    } else if (filter.getOperator().equals(SearchCriteriaFilterOperator.lte)) {
+                        query.toDate((LocalDateTime) filter.getValue(), true);
+                    } else if (filter.getOperator().equals(SearchCriteriaFilterOperator.eq)) {
+                        query.fromDate((LocalDateTime) filter.getValue(), true);
+                        query.toDate((LocalDateTime) filter.getValue(), true);
+                    } else {
+                        throw new BadRequestException("Bad operator on criteria");
+                    }
+                } else {
+                    query.addFilter(filter.getName(), filter.getValue(), filter.getOperator());
+                }
+            }
         }
+
+        DocumentQuery.EntityQuery entityQuery = query.entityQuery();
+        if (criteriaModel.getOrders() != null && !criteriaModel.getOrders().isEmpty()) {
+            criteriaModel.getOrders().stream().forEach(c -> {
+                if (c.isAscending()) {
+                    entityQuery.orderByAsc(c.getName());
+                } else {
+                    entityQuery.orderByDesc(c.getName());
+                }
+            });
+        }
+
+        SearchResultsModel<DocumentModel> results = entityQuery.searchResult().getSearchResult(criteriaModel.getPaging());
+
         SearchResultsRepresentation<DocumentRepresentation> rep = new SearchResultsRepresentation<>();
         List<DocumentRepresentation> items = new ArrayList<>();
         results.getModels().forEach(f -> items.add(ModelToRepresentation.toRepresentation(f)));
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/DocumentLineAttributeEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/DocumentLineAttributeEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/DocumentLineAttributeEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -0,0 +1,119 @@
+/*******************************************************************************
+ * Copyright 2016 Sistcoop, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *******************************************************************************/
+//
+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
+// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
+// Any modifications to this file will be lost upon recompilation of the source schema. 
+// Generated on: 2016.09.14 at 11:44:49 AM PET 
+//
+
+package org.openfact.models.jpa.entities;
+
+import javax.persistence.*;
+import java.io.Serializable;
+
+@Entity
+@Table(name = "DOCUMENT_LINE_ATTRIBUTE")
+@IdClass(DocumentLineAttributeEntity.Key.class)
+@NamedQueries({
+        @NamedQuery(name = "getDocumentLineAttributesByNameAndValue", query = "select attr from DocumentLineAttributeEntity attr where attr.name = :name and attr.value = :value"),
+        @NamedQuery(name = "deleteDocumentLineAttributesByNameAndSendEvent", query = "delete from  DocumentLineAttributeEntity attr where attr.documentLine.id = :sendEventId and attr.name = :name"),
+        @NamedQuery(name = "deleteDocumentLineAttributesByNameAndSendEventOtherThan", query = "delete from  DocumentLineAttributeEntity attr where attr.documentLine.id = :sendEventId and attr.name = :name and attr.id <> :attrId"),
+        @NamedQuery(name = "deleteDocumentLineAttributesByOrganization", query = "delete from DocumentLineAttributeEntity attr where attr.documentLine IN (select line from DocumentLineEntity line join line.document doc where doc.organizationId=:organizationId)")
+})
+public class DocumentLineAttributeEntity {
+
+    @Id
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(foreignKey = @ForeignKey, name = "DOCUMENT_LINE_ID")
+    protected DocumentLineEntity documentLine;
+
+    @Id
+    @Column(name = "NAME")
+    protected String name;
+
+    @Column(name = "VALUE")
+    protected String value;
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getValue() {
+        return value;
+    }
+
+    public void setValue(String value) {
+        this.value = value;
+    }
+
+    public DocumentLineEntity getDocumentLine() {
+        return documentLine;
+    }
+
+    public void setDocumentLine(DocumentLineEntity documentLine) {
+        this.documentLine = documentLine;
+    }
+
+    public static class Key implements Serializable {
+
+        protected DocumentLineEntity documentLine;
+
+        protected String name;
+
+        public Key() {
+        }
+
+        public Key(DocumentLineEntity documentLine, String name) {
+            this.documentLine = documentLine;
+            this.name = name;
+        }
+
+        public DocumentLineEntity getDocumentLine() {
+            return documentLine;
+        }
+
+        public String getName() {
+            return name;
+        }
+
+        @Override
+        public boolean equals(Object o) {
+            if (this == o) return true;
+            if (o == null || getClass() != o.getClass()) return false;
+
+            DocumentLineAttributeEntity.Key key = (DocumentLineAttributeEntity.Key) o;
+
+            if (name != null ? !name.equals(key.name) : key.name != null) return false;
+            if (documentLine != null ? !documentLine.getId().equals(key.documentLine != null ? key.documentLine.getId() : null) : key.documentLine != null)
+                return false;
+
+            return true;
+        }
+
+        @Override
+        public int hashCode() {
+            int result = documentLine != null ? documentLine.getId().hashCode() : 0;
+            result = 31 * result + (name != null ? name.hashCode() : 0);
+            return result;
+        }
+    }
+}
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/SendEventAttachedFileEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/SendEventAttachedFileEntity.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/SendEventAttachedFileEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -30,7 +30,7 @@
 @Table(name = "SEND_EVENT_ATTACH_FILE")
 @IdClass(SendEventAttachedFileEntity.Key.class)
 @NamedQueries(value = {
-        @NamedQuery(name = "deleteSendEventAttachedFilesByOrganization", query = "delete from SendEventAttachedFileEntity att where att.sendEvent IN (select send from SendEventEntity send join send.ublDocument doc where doc.organizationId=:organizationId)")
+        @NamedQuery(name = "deleteSendEventAttachedFilesByOrganization", query = "delete from SendEventAttachedFileEntity att where att.sendEvent IN (select send from SendEventEntity send join send.document doc where doc.organizationId=:organizationId)")
 })
 public class SendEventAttachedFileEntity {
 
Index: testsuite/integration/src/test/java/org/openfact/testsuite/rule/AbstractOpenfactRule.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/rule/AbstractOpenfactRule.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/rule/AbstractOpenfactRule.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -17,32 +17,22 @@
 
 package org.openfact.testsuite.rule;
 
-import io.undertow.servlet.api.DeploymentInfo;
-import io.undertow.servlet.api.ErrorPage;
-import io.undertow.servlet.api.FilterInfo;
-import io.undertow.servlet.api.LoginConfig;
-import io.undertow.servlet.api.SecurityConstraint;
-import io.undertow.servlet.api.SecurityInfo;
-import io.undertow.servlet.api.ServletInfo;
-import io.undertow.servlet.api.WebResourceCollection;
+import io.undertow.servlet.api.*;
 import org.jboss.resteasy.spi.ResteasyDeployment;
 import org.junit.rules.ExternalResource;
 import org.junit.rules.TemporaryFolder;
 import org.openfact.Config;
 import org.openfact.adapters.OpenfactConfigResolver;
+import org.openfact.common.util.Time;
 import org.openfact.models.OpenfactSession;
 import org.openfact.models.OpenfactTransaction;
 import org.openfact.models.OrganizationModel;
-import org.openfact.models.UserModel;
-import org.openfact.models.utils.ModelToRepresentation;
 import org.openfact.representations.idm.OrganizationRepresentation;
 import org.openfact.services.managers.OrganizationManager;
-import org.openfact.testsuite.Retry;
 import org.openfact.testsuite.OpenfactServer;
+import org.openfact.testsuite.Retry;
 import org.openfact.util.JsonSerialization;
-import org.openfact.common.util.Time;
 
-import javax.servlet.DispatcherType;
 import javax.servlet.Servlet;
 import javax.ws.rs.core.Application;
 import java.io.ByteArrayOutputStream;
Index: model/jpa/src/main/java/org/openfact/models/jpa/entities/UBLDocumentRequiredActionEntity.java
===================================================================
--- model/jpa/src/main/java/org/openfact/models/jpa/entities/UBLDocumentRequiredActionEntity.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/models/jpa/entities/DocumentRequiredActionEntity.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -20,17 +20,17 @@
 import java.io.Serializable;
 
 @NamedQueries({
-        @NamedQuery(name = "deleteUblDocumentRequiredActionsByOrganization", query = "delete from UBLDocumentRequiredActionEntity action where action.ublDocument IN (select u from UBLDocumentEntity u where u.organizationId=:organizationId)")
+        @NamedQuery(name = "deleteDocumentRequiredActionsByOrganization", query = "delete from DocumentRequiredActionEntity action where action.document IN (select u from DocumentEntity u where u.organizationId=:organizationId)")
 })
 @Entity
-@Table(name = "UBL_DOCUMENT_REQUIRED_ACTION")
-@IdClass(UBLDocumentRequiredActionEntity.Key.class)
-public class UBLDocumentRequiredActionEntity {
+@Table(name = "DOCUMENT_REQUIRED_ACTION")
+@IdClass(DocumentRequiredActionEntity.Key.class)
+public class DocumentRequiredActionEntity {
 
     @Id
     @ManyToOne(fetch = FetchType.LAZY)
-    @JoinColumn(foreignKey = @ForeignKey, name = "UBL_DOCUMENT_ID")
-    protected UBLDocumentEntity ublDocument;
+    @JoinColumn(foreignKey = @ForeignKey, name = "DOCUMENT_ID")
+    protected DocumentEntity document;
 
     @Id
     @Column(name = "REQUIRED_ACTION")
@@ -44,30 +44,30 @@
         this.action = action;
     }
 
-    public UBLDocumentEntity getUblDocument() {
-        return ublDocument;
+    public DocumentEntity getDocument() {
+        return document;
     }
 
-    public void setUblDocument(UBLDocumentEntity invoice) {
-        this.ublDocument = invoice;
+    public void setDocument(DocumentEntity invoice) {
+        this.document = invoice;
     }
 
     public static class Key implements Serializable {
 
-        protected UBLDocumentEntity ublDocument;
+        protected DocumentEntity document;
 
         protected String action;
 
         public Key() {
         }
 
-        public Key(UBLDocumentEntity invoice, String action) {
-            this.ublDocument = invoice;
+        public Key(DocumentEntity invoice, String action) {
+            this.document = invoice;
             this.action = action;
         }
 
-        public UBLDocumentEntity getUblDocument() {
-            return ublDocument;
+        public DocumentEntity getDocument() {
+            return document;
         }
 
         public String getAction() {
@@ -82,7 +82,7 @@
             Key key = (Key) o;
 
             if (action != key.action) return false;
-            if (ublDocument != null ? !ublDocument.getId().equals(key.ublDocument != null ? key.ublDocument.getId() : null) : key.ublDocument != null)
+            if (document != null ? !document.getId().equals(key.document != null ? key.document.getId() : null) : key.document != null)
                 return false;
 
             return true;
@@ -90,7 +90,7 @@
 
         @Override
         public int hashCode() {
-            int result = ublDocument != null ? ublDocument.getId().hashCode() : 0;
+            int result = document != null ? document.getId().hashCode() : 0;
             result = 31 * result + (action != null ? action.hashCode() : 0);
             return result;
         }
@@ -100,12 +100,12 @@
     public boolean equals(Object o) {
         if (this == o) return true;
         if (o == null) return false;
-        if (!(o instanceof UBLDocumentRequiredActionEntity)) return false;
+        if (!(o instanceof DocumentRequiredActionEntity)) return false;
 
-        UBLDocumentRequiredActionEntity key = (UBLDocumentRequiredActionEntity) o;
+        DocumentRequiredActionEntity key = (DocumentRequiredActionEntity) o;
 
         if (action != key.action) return false;
-        if (ublDocument != null ? !ublDocument.getId().equals(key.ublDocument != null ? key.ublDocument.getId() : null) : key.ublDocument != null)
+        if (document != null ? !document.getId().equals(key.document != null ? key.document.getId() : null) : key.document != null)
             return false;
 
         return true;
@@ -113,7 +113,7 @@
 
     @Override
     public int hashCode() {
-        int result = ublDocument != null ? ublDocument.getId().hashCode() : 0;
+        int result = document != null ? document.getId().hashCode() : 0;
         result = 31 * result + (action != null ? action.hashCode() : 0);
         return result;
     }
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/MigrationVersionTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/MigrationVersionTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/MigrationVersionTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -17,14 +17,6 @@
 
 package org.openfact.testsuite.model;
 
-import org.junit.Assert;
-import org.junit.Test;
-import org.openfact.migration.ModelVersion;
-
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- * @version $Revision: 1 $
- */
 public class MigrationVersionTest {
 
     /*@Test
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/KeyResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/KeyResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/KeyResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,32 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import org.openfact.representations.idm.KeysMetadataRepresentation;
+
+import javax.ws.rs.GET;
+import javax.ws.rs.Produces;
+import javax.ws.rs.core.MediaType;
+
+public interface KeyResource {
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    KeysMetadataRepresentation getKeyMetadata();
+
+}
Index: distribution/feature-packs/server-feature-pack/src/main/resources/content/reports/README.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/content/reports/README.txt	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/content/reports/README.txt	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
@@ -0,0 +1,3 @@
+Reports are used to configure the look and feel of login pages and the account management console. It is not recommended to
+modify the existing built-in themes, instead you should create a new theme that extends a built-in theme. See the theme
+section in the documentation for more details.
\ No newline at end of file
Index: testsuite/integration/src/test/java/org/openfact/testsuite/providers/DocumentProviderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/providers/DocumentProviderTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/providers/DocumentProviderTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -23,6 +23,7 @@
 import static org.junit.Assert.assertThat;
 
 import java.time.LocalDateTime;
+import java.util.Iterator;
 import java.util.List;
 
 import org.junit.Assert;
@@ -63,7 +64,7 @@
         session.documents().addDocument(DocumentType.INVOICE, "F01-001", sistcoop2);
         commit();
 
-        // Try to create ublDocument with duplicate series and number
+        // Try to create document with duplicate series and number
         try {
             sistcoop1 = session.organizations().getOrganizationByName("SISTCOOP1");
             session.documents().addDocument(DocumentType.INVOICE, "F01-001", sistcoop1);
@@ -149,21 +150,9 @@
     public void searchQuery() {
         OrganizationModel sistcoop1 = session.organizations().createOrganization("SISTCOOP1");
         OrganizationModel sistcoop2 = session.organizations().createOrganization("SISTCOOP2");
-        commit();
-
-        session.documents().addDocument(DocumentType.INVOICE, "F01-001", sistcoop1).addRequiredAction(RequiredAction.SEND_TO_CUSTOMER);
-        session.documents().addDocument(DocumentType.INVOICE, "F01-002", sistcoop1).addRequiredAction(RequiredAction.SEND_TO_THIRD_PARTY);
-        session.documents().addDocument(DocumentType.INVOICE, "F01-003", sistcoop1);
-        session.documents().addDocument(DocumentType.CREDIT_NOTE, "C01-001", sistcoop1).addRequiredAction(RequiredAction.SEND_TO_CUSTOMER);
-        session.documents().addDocument(DocumentType.CREDIT_NOTE, "C01-002", sistcoop1).addRequiredAction(RequiredAction.SEND_TO_THIRD_PARTY);
-        session.documents().addDocument(DocumentType.CREDIT_NOTE, "C01-003", sistcoop1);
-
-        session.documents().addDocument(DocumentType.INVOICE, "F01-004", sistcoop2).addRequiredAction(RequiredAction.SEND_TO_CUSTOMER);
-        session.documents().addDocument(DocumentType.INVOICE, "F01-005", sistcoop2).addRequiredAction(RequiredAction.SEND_TO_THIRD_PARTY);
-        session.documents().addDocument(DocumentType.INVOICE, "F01-006", sistcoop2);
-        session.documents().addDocument(DocumentType.CREDIT_NOTE, "F01-004", sistcoop2).addRequiredAction(RequiredAction.SEND_TO_CUSTOMER);
-        session.documents().addDocument(DocumentType.CREDIT_NOTE, "F01-005", sistcoop2).addRequiredAction(RequiredAction.SEND_TO_THIRD_PARTY);
-        session.documents().addDocument(DocumentType.CREDIT_NOTE, "F01-006", sistcoop2);
+
+        addDocuments(sistcoop1);
+        addDocuments(sistcoop2);
         commit();
 
         DocumentQuery query = session.documents().createQuery(sistcoop1);
@@ -198,10 +187,51 @@
 
         query = session.documents().createQuery(sistcoop1);
         query.documentType(DocumentType.INVOICE);
-        query.fromDate(LocalDateTime.now().minusDays(1));
+        query.fromDate(LocalDateTime.now().minusDays(1), true);
         assertThat(query.entityQuery().resultList().getResultList().size(), is(3));
 
         assertThat(query.countQuery().getTotalCount(), is(3));
     }
 
+    @Test
+    public void testScroll() {
+        OrganizationModel sistcoop1 = session.organizations().createOrganization("SISTCOOP1");
+        OrganizationModel sistcoop2 = session.organizations().createOrganization("SISTCOOP2");
+
+        session.documents().addDocument(DocumentType.INVOICE, "F01-001", sistcoop1);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-002", sistcoop1);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-003", sistcoop1);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-004", sistcoop1);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-005", sistcoop1);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-006", sistcoop1);
+
+        session.documents().addDocument(DocumentType.INVOICE, "F01-001", sistcoop2);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-002", sistcoop2);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-003", sistcoop2);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-004", sistcoop2);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-005", sistcoop2);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-006", sistcoop2);
+
+        commit();
+
+        DocumentQuery query = session.documents().createQuery(sistcoop1);
+        ScrollModel<DocumentModel> scrollResult = query.entityQuery().orderByAsc(DocumentModel.CREATED_TIMESTAMP).resultScroll().getScrollResult(2);
+
+        int i = 0;
+        Iterator<DocumentModel> iterator = scrollResult.iterator();
+        while (iterator.hasNext()) {
+            DocumentModel document = iterator.next();
+            Assert.assertTrue(document.getDocumentId().endsWith(String.valueOf(++i)));
+        }
+    }
+
+    public void addDocuments(OrganizationModel organization) {
+        session.documents().addDocument(DocumentType.INVOICE, "F01-001", organization).addRequiredAction(RequiredAction.SEND_TO_CUSTOMER);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-002", organization).addRequiredAction(RequiredAction.SEND_TO_THIRD_PARTY);
+        session.documents().addDocument(DocumentType.INVOICE, "F01-003", organization);
+        session.documents().addDocument(DocumentType.CREDIT_NOTE, "C01-001", organization).addRequiredAction(RequiredAction.SEND_TO_CUSTOMER);
+        session.documents().addDocument(DocumentType.CREDIT_NOTE, "C01-002", organization).addRequiredAction(RequiredAction.SEND_TO_THIRD_PARTY);
+        session.documents().addDocument(DocumentType.CREDIT_NOTE, "C01-003", organization);
+    }
+
 }
Index: wildfly/extensions/src/main/java/org/openfact/provider/wildfly/ModuleThemeProviderFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- wildfly/extensions/src/main/java/org/openfact/provider/wildfly/ModuleThemeProviderFactory.java	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
+++ wildfly/extensions/src/main/java/org/openfact/provider/wildfly/ModuleThemeProviderFactory.java	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.provider.wildfly;
 
 import org.jboss.modules.Module;
@@ -23,9 +6,6 @@
 import org.openfact.Config;
 import org.openfact.theme.JarThemeProviderFactory;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- */
 public class ModuleThemeProviderFactory extends JarThemeProviderFactory {
 
     @Override
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/MultipleOrganizationsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/MultipleOrganizationsTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/MultipleOrganizationsTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.testsuite.model;
 
 import org.junit.Assert;
@@ -25,14 +8,18 @@
 import org.openfact.models.OrganizationModel;
 import org.openfact.models.enums.DocumentType;
 
-/**
- * @author <a href="mailto:mposolda@sistcoop.com">Marek Posolda</a>
- */
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
 public class MultipleOrganizationsTest extends AbstractModelTest {
 
     private OrganizationModel organization1;
     private OrganizationModel organization2;
 
+    Map<OrganizationModel, List<String>> organizationFilesIds = new HashMap<>();
+
     @Before
     @Override
     public void before() throws Exception {
@@ -46,8 +33,8 @@
 
     @Test
     public void testDocuments() {
-        DocumentModel r1invoice1 = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE.toString(), "F01-001", organization1);
-        DocumentModel r2invoice1 = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE.toString(), "F01-001", organization2);
+        DocumentModel r1invoice1 = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE, "F01-001", organization1);
+        DocumentModel r2invoice1 = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE, "F01-001", organization2);
         Assert.assertEquals(r1invoice1.getDocumentId(), r2invoice1.getDocumentId());
         Assert.assertNotEquals(r1invoice1.getId(), r2invoice1.getId());
 
@@ -59,7 +46,7 @@
         organization2 = model.getOrganization("id2");
 
         session.documents().removeDocument(r1invoice1.getId(), organization1);
-        DocumentModel invoice2 = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE.toString(), "F01-002", organization1);
+        DocumentModel invoice2 = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE, "F01-002", organization1);
         session.documents().removeDocument(invoice2.getId(), organization1);
         Assert.assertEquals(0, session.documents().searchForDocument("F01", organization1).size());
         Assert.assertEquals(2, session.documents().searchForDocument("F01", organization2).size());
@@ -67,35 +54,34 @@
 
     @Test
     public void testFiles() {
-        FileModel r1file1 = session.files().getFileByFileName(organization1, "file1");
-        FileModel r2file1 = session.files().getFileByFileName(organization2, "file1");
+        FileModel o1file1 = session.files().getFileById(organization1, organizationFilesIds.get(organization1).get(0));
+        FileModel o2file1 = session.files().getFileById(organization2, organizationFilesIds.get(organization2).get(0));
 
-        Assert.assertEquals(r1file1.getFileName(), r2file1.getFileName());
-        Assert.assertNotEquals(r1file1.getId(), r2file1.getId());
-
-        // Test searching
-        //Assert.assertEquals(2, session.files().searchForFile(organization1, "D01").size());
+        Assert.assertEquals(o1file1.getFileName(), o2file1.getFileName());
+        Assert.assertNotEquals(o1file1.getId(), o2file1.getId());
 
         commit();
         organization1 = model.getOrganization("id1");
         organization2 = model.getOrganization("id2");
 
-        session.files().removeFile(organization1, r1file1);
-        Assert.assertNull(session.files().getFileById(organization1, r1file1.getId()));
+        session.files().removeFile(organization1, o1file1);
+        Assert.assertNull(session.files().getFileById(organization1, o1file1.getId()));
 
-        FileModel file2 = session.files().getFileByFileName(organization1, "file2");
+        FileModel file2 = session.files().getFileById(organization1, organizationFilesIds.get(organization1).get(1));
         session.files().removeFile(organization1, file2);
-        Assert.assertNull(session.files().getFileByFileName(organization1, "file1"));
-        Assert.assertNotNull(session.files().getFileByFileName(organization2, "file1"));
-        Assert.assertNotNull(session.files().getFileByFileName(organization2, "file2"));
+        Assert.assertNull(session.files().getFileById(organization1, organizationFilesIds.get(organization1).get(1)));
+        Assert.assertNotNull(session.files().getFileById(organization2, organizationFilesIds.get(organization2).get(0)));
+        Assert.assertNotNull(session.files().getFileById(organization2, organizationFilesIds.get(organization2).get(1)));
     }
 
     private void createObjects(OrganizationModel organization) {
-        organizationManager.getSession().documents().addDocument(DocumentType.INVOICE.toString(), "F01-001", organization);
-        organizationManager.getSession().documents().addDocument(DocumentType.INVOICE.toString(), "F01-002", organization);
+        organizationManager.getSession().documents().addDocument(DocumentType.INVOICE, "F01-001", organization);
+        organizationManager.getSession().documents().addDocument(DocumentType.INVOICE, "F01-002", organization);
 
-        organizationManager.getSession().files().createFile(organization, "file1", new byte[]{1, 2, 3});
-        organizationManager.getSession().files().createFile(organization, "file2", new byte[]{1, 2, 3});
+        FileModel file1 = organizationManager.getSession().files().createFile(organization, "file1", new byte[]{1, 2, 3});
+        FileModel file2 = organizationManager.getSession().files().createFile(organization, "file2", new byte[]{1, 2, 3});
+
+        organizationFilesIds.put(organization, Arrays.asList(file1.getId(), file2.getId()));
     }
 
 }
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/DocumentResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/DocumentResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/DocumentResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,72 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import org.openfact.representations.idm.DocumentRepresentation;
+import org.openfact.representations.idm.SendEventRepresentation;
+
+import javax.ws.rs.*;
+import javax.ws.rs.core.MediaType;
+import javax.ws.rs.core.Response;
+import java.util.List;
+
+@Consumes(MediaType.APPLICATION_JSON)
+@Produces(MediaType.APPLICATION_JSON)
+public interface DocumentResource {
+
+    @GET
+    public DocumentRepresentation toRepresentation();
+
+    @PUT
+    public void update(DocumentRepresentation documentRepresentation);
+
+    @DELETE
+    public void remove();
+
+    @GET
+    @Path("representation/json")
+    @Produces(MediaType.APPLICATION_JSON)
+    public Response jsonRepresentation();
+
+    @GET
+    @Path("representation/xml")
+    @Produces("application/xml")
+    public Response downloadXml();
+
+    @Path("report")
+    @GET
+    public Response report(@QueryParam("theme") String theme,
+                           @QueryParam("format") String format);
+
+    @POST
+    @Path("send-to-customer")
+    public void sendToCustomer();
+
+    @POST
+    @Path("send-to-third-party")
+    public void sendToThirdParty();
+
+    @POST
+    @Path("send-to-third-party-by-email")
+    public void sendToCustomEmail();
+
+    @GET
+    @Path("send-events")
+    public List<SendEventRepresentation> sendedEvents();
+
+}
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/InvoicesResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/InvoicesResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/InvoicesResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import javax.ws.rs.Consumes;
+import javax.ws.rs.POST;
+import javax.ws.rs.Path;
+import javax.ws.rs.Produces;
+import javax.ws.rs.core.MediaType;
+
+public interface InvoicesResource {
+
+    @POST
+    @Path("upload")
+    @Consumes("multipart/form-data")
+    @Produces(MediaType.APPLICATION_JSON)
+    public void upload();
+
+}
Index: wildfly/extensions/src/main/java/org/openfact/provider/wildfly/ModuleProviderLoaderFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- wildfly/extensions/src/main/java/org/openfact/provider/wildfly/ModuleProviderLoaderFactory.java	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
+++ wildfly/extensions/src/main/java/org/openfact/provider/wildfly/ModuleProviderLoaderFactory.java	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.provider.wildfly;
 
 import org.jboss.modules.Module;
@@ -24,9 +7,6 @@
 import org.openfact.provider.ProviderLoader;
 import org.openfact.provider.ProviderLoaderFactory;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- */
 public class ModuleProviderLoaderFactory implements ProviderLoaderFactory {
 
     @Override
Index: testsuite/integration/src/test/java/org/openfact/testsuite/model/ConcurrentTransactionsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/model/ConcurrentTransactionsTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/model/ConcurrentTransactionsTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.testsuite.model;
 
 import org.jboss.logging.Logger;
@@ -27,9 +10,6 @@
 import java.util.concurrent.CountDownLatch;
 import java.util.concurrent.atomic.AtomicReference;
 
-/**
- * @author <a href="mailto:mposolda@redhat.com">Marek Posolda</a>
- */
 public class ConcurrentTransactionsTest extends AbstractModelTest {
 
     private static final Logger logger = Logger.getLogger(ConcurrentTransactionsTest.class);
@@ -68,15 +48,15 @@
                             // Read client
                             OrganizationModel organization = session.organizations().getOrganizationByName("original");
                             DocumentModel document = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE.toString(), "F01-123", organization);
-                            logger.info("transaction1: Read ublDocument finished");
+                            logger.info("transaction1: Read document finished");
                             readLatch.countDown();
 
                             // Wait until thread2 updates client and commits
                             updateLatch.await();
-                            logger.info("transaction1: Going to read ublDocument again");
+                            logger.info("transaction1: Going to read document again");
 
                             document = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE.toString(), "F01-123", organization);
-                            logger.info("transaction1: ublDocument email: " + document.getCustomerElectronicMail());
+                            logger.info("transaction1: document email: " + document.getCustomerElectronicMail());
                         } catch (Exception e) {
                             throw new RuntimeException(e);
                         }
@@ -103,7 +83,7 @@
 
 
                             readLatch.await();
-                            logger.info("transaction2: Going to update ublDocument currency code");
+                            logger.info("transaction2: Going to update document currency code");
 
                             OrganizationModel organization = session.organizations().getOrganizationByName("original");
                             DocumentModel document = session.documents().getDocumentByTypeAndDocumentId(DocumentType.INVOICE.toString(), "F01-123", organization);
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/ComponentResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/ComponentResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/ComponentResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,39 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.openfact.admin.client.resource;
+
+import org.openfact.representations.idm.ComponentRepresentation;
+
+import javax.ws.rs.Consumes;
+import javax.ws.rs.DELETE;
+import javax.ws.rs.GET;
+import javax.ws.rs.PUT;
+import javax.ws.rs.core.MediaType;
+
+public interface ComponentResource {
+
+    @GET
+    public ComponentRepresentation toRepresentation();
+
+    @PUT
+    @Consumes(MediaType.APPLICATION_JSON)
+    public void update(ComponentRepresentation rep);
+
+    @DELETE
+    public void remove();
+
+}
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/DocumentsResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/DocumentsResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/DocumentsResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,51 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import org.openfact.representations.idm.DocumentRepresentation;
+import org.openfact.representations.idm.search.SearchCriteriaRepresentation;
+import org.openfact.representations.idm.search.SearchResultsRepresentation;
+
+import javax.ws.rs.*;
+import javax.ws.rs.core.MediaType;
+import java.util.List;
+
+public interface DocumentsResource {
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    List<DocumentRepresentation> search(@QueryParam("documentType") String documentType,
+                                        @QueryParam("documentId") String documentId,
+                                        @QueryParam("first") Integer firstResult,
+                                        @QueryParam("max") Integer maxResults);
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    List<DocumentRepresentation> search(@QueryParam("filterText") String filterText,
+                                        @QueryParam("first") Integer firstResult,
+                                        @QueryParam("max") Integer maxResults);
+
+    @Path("search")
+    @POST
+    @Produces(MediaType.APPLICATION_JSON)
+    SearchResultsRepresentation<DocumentRepresentation> search(SearchCriteriaRepresentation criteria);
+
+    @Path("{documentId}")
+    DocumentResource get(@PathParam("documentId") String documentId);
+
+}
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/ComponentsResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/ComponentsResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/ComponentsResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,60 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.openfact.admin.client.resource;
+
+import org.openfact.representations.idm.ComponentRepresentation;
+
+import javax.ws.rs.Consumes;
+import javax.ws.rs.GET;
+import javax.ws.rs.POST;
+import javax.ws.rs.Path;
+import javax.ws.rs.PathParam;
+import javax.ws.rs.Produces;
+import javax.ws.rs.QueryParam;
+import javax.ws.rs.core.MediaType;
+import javax.ws.rs.core.Response;
+import java.util.List;
+
+public interface ComponentsResource {
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<ComponentRepresentation> query();
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<ComponentRepresentation> query(@QueryParam("parent") String parent);
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<ComponentRepresentation> query(@QueryParam("parent") String parent,
+                                               @QueryParam("type") String type);
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<ComponentRepresentation> query(@QueryParam("parent") String parent,
+                                               @QueryParam("type") String type,
+                                               @QueryParam("name") String name);
+
+    @POST
+    @Consumes(MediaType.APPLICATION_JSON)
+    Response add(ComponentRepresentation rep);
+
+    @Path("{id}")
+    ComponentResource component(@PathParam("id") String id);
+
+
+}
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/DebitNotesResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/DebitNotesResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/DebitNotesResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import javax.ws.rs.Consumes;
+import javax.ws.rs.POST;
+import javax.ws.rs.Path;
+import javax.ws.rs.Produces;
+import javax.ws.rs.core.MediaType;
+
+public interface DebitNotesResource {
+
+    @POST
+    @Path("upload")
+    @Consumes("multipart/form-data")
+    @Produces(MediaType.APPLICATION_JSON)
+    public void upload();
+
+}
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/JobReportsResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/JobReportsResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/JobReportsResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import org.jboss.resteasy.annotations.cache.NoCache;
+import org.openfact.representations.idm.JobReportRepresentation;
+
+import javax.ws.rs.GET;
+import javax.ws.rs.Path;
+import javax.ws.rs.Produces;
+import javax.ws.rs.QueryParam;
+import javax.ws.rs.core.MediaType;
+import java.util.List;
+
+public interface JobReportsResource {
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<JobReportRepresentation> getReports(
+            @QueryParam("jobName") List<String> jobNames,
+            @QueryParam("dateFrom") String dateFrom,
+            @QueryParam("dateTo") String dateTo,
+            @QueryParam("first") Integer firstResult,
+            @QueryParam("max") Integer maxResults);
+
+    @GET
+    @Path("providers")
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<String> getFile();
+
+}
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/ServerInfoResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/ServerInfoResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/ServerInfoResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import org.openfact.representations.info.ServerInfoRepresentation;
+
+import javax.ws.rs.GET;
+import javax.ws.rs.Path;
+import javax.ws.rs.Produces;
+import javax.ws.rs.core.MediaType;
+
+@Path("/admin/serverinfo")
+public interface ServerInfoResource {
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    ServerInfoRepresentation getInfo();
+
+}
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/CreditNotesResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/CreditNotesResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/CreditNotesResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import javax.ws.rs.Consumes;
+import javax.ws.rs.POST;
+import javax.ws.rs.Path;
+import javax.ws.rs.Produces;
+import javax.ws.rs.core.MediaType;
+
+public interface CreditNotesResource {
+
+    @POST
+    @Path("upload")
+    @Consumes("multipart/form-data")
+    @Produces(MediaType.APPLICATION_JSON)
+    public void upload();
+
+}
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/OrganizationResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/OrganizationResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/OrganizationResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,104 @@
+package org.openfact.admin.client.resource;
+
+import org.jboss.resteasy.annotations.cache.NoCache;
+import org.openfact.representations.idm.AdminEventRepresentation;
+import org.openfact.representations.idm.EventRepresentation;
+import org.openfact.representations.idm.OrganizationEventsConfigRepresentation;
+import org.openfact.representations.idm.OrganizationRepresentation;
+
+import javax.ws.rs.*;
+import javax.ws.rs.core.MediaType;
+import java.util.List;
+
+public interface OrganizationResource {
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    public OrganizationRepresentation toRepresentation();
+
+    @PUT
+    @Consumes(MediaType.APPLICATION_JSON)
+    void update(OrganizationRepresentation organizationRepresentation);
+
+    @DELETE
+    void remove();
+
+    @Path("documents")
+    DocumentsResource documents();
+
+    @Path("invoices")
+    public InvoicesResource invoices();
+
+    @Path("credit-notes")
+    public CreditNotesResource creditNotes();
+
+    @Path("debit-notes")
+    public DebitNotesResource debitNotes();
+
+    @Path("job-reports")
+    public JobReportsResource jobReports();
+
+    @Path("storage-files")
+    public StorageFilesResource storageFiles();
+
+    @DELETE
+    @Path("events")
+    public void clearEvents();
+
+    @GET
+    @Path("events")
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<EventRepresentation> getEvents();
+
+    @Path("events")
+    @GET
+    @NoCache
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<EventRepresentation> getEvents(@QueryParam("type") List<String> types,
+                                               @QueryParam("user") String user,
+                                               @QueryParam("dateFrom") String dateFrom,
+                                               @QueryParam("dateTo") String dateTo,
+                                               @QueryParam("ipAddress") String ipAddress,
+                                               @QueryParam("first") Integer firstResult,
+                                               @QueryParam("max") Integer maxResults);
+
+    @DELETE
+    @Path("admin-events")
+    public void clearAdminEvents();
+
+    @GET
+    @Path("admin-events")
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<AdminEventRepresentation> getAdminEvents();
+
+    @GET
+    @Path("admin-events")
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<AdminEventRepresentation> getAdminEvents(@QueryParam("operationTypes") List<String> operationTypes,
+                                                         @QueryParam("authOrganization") String authOrganization,
+                                                         @QueryParam("authUser") String authUser,
+                                                         @QueryParam("authIpAddress") String authIpAddress,
+                                                         @QueryParam("resourcePath") String resourcePath,
+                                                         @QueryParam("dateFrom") String dateFrom,
+                                                         @QueryParam("dateTo") String dateTo,
+                                                         @QueryParam("first") Integer firstResult,
+                                                         @QueryParam("max") Integer maxResults,
+                                                         @QueryParam("resourceTypes") List<String> resourceTypes);
+
+    @GET
+    @Path("events/config")
+    @Produces(MediaType.APPLICATION_JSON)
+    public OrganizationEventsConfigRepresentation getOrganizationEventsConfig();
+
+    @PUT
+    @Path("events/config")
+    @Consumes(MediaType.APPLICATION_JSON)
+    public void updateOrganizationEventsConfig(OrganizationEventsConfigRepresentation rep);
+
+    @Path("components")
+    public ComponentsResource components();
+
+    @Path("keys")
+    public KeyResource keys();
+
+}
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/StorageFilesResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/StorageFilesResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/StorageFilesResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,34 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import org.jboss.resteasy.annotations.cache.NoCache;
+
+import javax.ws.rs.GET;
+import javax.ws.rs.Path;
+import javax.ws.rs.PathParam;
+import javax.ws.rs.core.Response;
+
+public interface StorageFilesResource {
+
+    @GET
+    @Path("{idFile}")
+    @NoCache
+    public Response getFile(@PathParam("idFile") String idFile);
+
+}
Index: distribution/feature-packs/server-feature-pack/src/main/resources/configuration/domain/template.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/configuration/domain/template.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/configuration/domain/template.xml	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
@@ -76,10 +76,8 @@
                 </servlet-container>
                 <handlers>
                     <reverse-proxy name="lb-handler">
-                        <host name="host1" outbound-socket-binding="remote-host1" scheme="ajp" path="/"
-                              instance-id="myroute1"/>
-                        <host name="host2" outbound-socket-binding="remote-host2" scheme="ajp" path="/"
-                              instance-id="myroute2"/>
+                        <host name="host1" outbound-socket-binding="remote-host1" scheme="ajp" path="/" instance-id="myroute1"/>
+                        <host name="host2" outbound-socket-binding="remote-host2" scheme="ajp" path="/" instance-id="myroute2"/>
                     </reverse-proxy>
                 </handlers>
                 <filters>
Index: integration/admin-client/src/main/java/org/openfact/admin/client/resource/OrganizationsResource.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integration/admin-client/src/main/java/org/openfact/admin/client/resource/OrganizationsResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ integration/admin-client/src/main/java/org/openfact/admin/client/resource/OrganizationsResource.java	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2016 Red Hat, Inc. and/or its affiliates
+ * and other contributors as indicated by the @author tags.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.openfact.admin.client.resource;
+
+import org.openfact.representations.idm.OrganizationRepresentation;
+
+import javax.ws.rs.Consumes;
+import javax.ws.rs.GET;
+import javax.ws.rs.POST;
+import javax.ws.rs.Path;
+import javax.ws.rs.PathParam;
+import javax.ws.rs.Produces;
+import javax.ws.rs.core.MediaType;
+import java.util.List;
+
+@Path("/admin/organizations")
+@Consumes(MediaType.APPLICATION_JSON)
+public interface OrganizationsResource {
+
+    @Path("/{organization}")
+    public OrganizationResource organization(@PathParam("organization") String organization);
+
+    @POST
+    @Consumes(MediaType.APPLICATION_JSON)
+    public void create(OrganizationRepresentation organizationRepresentation);
+
+    @GET
+    @Produces(MediaType.APPLICATION_JSON)
+    public List<OrganizationRepresentation> findAll();
+
+}
Index: wildfly/extensions/src/main/java/org/openfact/provider/wildfly/ModuleReportThemeProviderFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- wildfly/extensions/src/main/java/org/openfact/provider/wildfly/ModuleReportThemeProviderFactory.java	(revision c882bc33ff6147db3f9c41f173e7e3a532c7870b)
+++ wildfly/extensions/src/main/java/org/openfact/provider/wildfly/ModuleReportThemeProviderFactory.java	(revision ee77cb8def135d39bdc486966a20f3bec4ebd1c4)
@@ -1,20 +1,3 @@
-/*******************************************************************************
- * Copyright 2016 Sistcoop, Inc. and/or its affiliates
- * and other contributors as indicated by the @author tags.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *******************************************************************************/
-
 package org.openfact.provider.wildfly;
 
 import org.jboss.modules.Module;
@@ -22,11 +5,7 @@
 import org.jboss.modules.ModuleIdentifier;
 import org.openfact.Config;
 import org.openfact.report.JarReportThemeProviderFactory;
-import org.openfact.theme.JarThemeProviderFactory;
 
-/**
- * @author <a href="mailto:carlosthe19916@sistcoop.com">Carlos Feria</a>
- */
 public class ModuleReportThemeProviderFactory extends JarReportThemeProviderFactory {
 
     @Override
@@ -37,7 +16,7 @@
                 for (String moduleSpec : modules) {
                     Module module = Module.getContextModuleLoader().loadModule(ModuleIdentifier.fromString(moduleSpec));
                     ModuleClassLoader classLoader = module.getClassLoader();
-                    loadThemes(classLoader, classLoader.getResourceAsStream(OPENFACT_THEMES_JSON));
+                    loadThemes(classLoader, classLoader.getResourceAsStream(OPENFACT_REPORT_THEMES_JSON));
                 }
             } catch (Exception e) {
                 throw new RuntimeException("Failed to load report themes", e);
Index: testsuite/integration/src/test/java/org/openfact/testsuite/providers/UBLReaderWriterProviderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- testsuite/integration/src/test/java/org/openfact/testsuite/providers/UBLReaderWriterProviderTest.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ testsuite/integration/src/test/java/org/openfact/testsuite/providers/UBLReaderWriterProviderTest.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -39,16 +39,16 @@
     @Test
     public void getInvoiceDocument() throws Exception {
         List<InvoiceModel> documents = session.documents().getDocuments(organization);
-        InvoiceModel ublDocument = documents.getObject(0);
+        InvoiceModel document = documents.getObject(0);
 
         Set<InvoiceReaderWriterProvider> providers = session.getAllProviders(InvoiceReaderWriterProvider.class);
         for (InvoiceReaderWriterProvider provider : providers) {
-            byte[] bytes = ublDocument.getXmlDocument();
+            byte[] bytes = document.getXmlDocument();
             InvoiceType invoiceType = provider.read(bytes);
 
             assertThat(invoiceType, is(notNullValue()));
 
-            Document xml = provider.writeAsDocument(organization, invoiceType, ublDocument.getAttributes());
+            Document xml = provider.writeAsDocument(organization, invoiceType, document.getAttributes());
 
             assertThat(xml, is(notNullValue()));
         }
Index: model/jpa/src/main/java/org/openfact/connections/jpa/updater/liquibase/LiquibaseJpaUpdaterProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- model/jpa/src/main/java/org/openfact/connections/jpa/updater/liquibase/LiquibaseJpaUpdaterProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ model/jpa/src/main/java/org/openfact/connections/jpa/updater/liquibase/LiquibaseJpaUpdaterProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -211,7 +211,7 @@
     @SuppressWarnings("unchecked")
     private List<ChangeSet> getLiquibaseUnrunChangeSets(Liquibase liquibase) {
         // TODO tracked as: https://issues.jboss.org/browse/OPENFACT-3730
-        // TODO: When https://liquibase.jira.com/browse/CORE-2919 is resolved, replace the following two lines with:
+        // TODO: When https://liquibase.jira.com/browse/CORE-2919 is resolved, replace the following two getDocumentLines with:
         // List<ChangeSet> changeSets = liquibase.listUnrunChangeSets((Contexts) null, new LabelExpression(), false);
         Method listUnrunChangeSets = Reflections.findDeclaredMethod(Liquibase.class, "listUnrunChangeSets", Contexts.class, LabelExpression.class, boolean.class);
         return Reflections.invokeMethod(true, listUnrunChangeSets, List.class, liquibase, (Contexts) null, new LabelExpression(), false);
Index: services/src/main/java/org/openfact/services/scheduled/SendToCustomerOrganizationScheduleTaskProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/src/main/java/org/openfact/services/scheduled/SendToCustomerOrganizationScheduleTaskProvider.java	(revision 7c912aac91b47d619e30ae034af01f86eaf5c881)
+++ services/src/main/java/org/openfact/services/scheduled/SendToCustomerOrganizationScheduleTaskProvider.java	(revision dc4c453c5d1fe22b6a5654752ce6db357ea3e29b)
@@ -73,39 +73,33 @@
     private long sendDocuments(OpenfactSession session, OrganizationModel organization) {
         long readCount = 0;
 
-        ScrollModel<List<DocumentModel>> scroll = session.documents()
-                .createQuery(organization)
-                .requiredAction(RequiredAction.SEND_TO_CUSTOMER)
-                .entityQuery()
-                .resultScroll().getScrollResultList(100);
+        ScrollModel<List<DocumentModel>> scroll = session.documents().createQuery(organization)
+                .requiredAction(RequiredAction.SEND_TO_CUSTOMER).enabled(true).customerSendEventFailures(retries, false)
+                .entityQuery().resultScroll().getScrollResultList(100);
+
         Iterator<List<DocumentModel>> iterator = scroll.iterator();
-
         while (iterator.hasNext()) {
-            List<DocumentModel> invoices = iterator.next();
+            List<DocumentModel> document = iterator.next();
 
-            readCount += invoices.size();
+            readCount += document.size();
 
-            invoices.stream()
-                    .filter(p -> p.sendEventCount(new HashMap<String, String>() {{
-                        put(DocumentModel.SEND_EVENT_DESTINY, DestinyType.CUSTOMER.toString());
-                    }}) < retries)
-                    .forEach(c -> {
-                        DocumentManager manager = new DocumentManager(session);
-                        SendEventModel sendEvent = c.addSendEvent(DestinyType.CUSTOMER);
-                        try {
-                            manager.sendToCustomerParty(organization, c, sendEvent);
-                            if (sendEvent.getResult().equals(SendEventStatus.SUCCESS)) {
-                                c.removeRequiredAction(RequiredAction.SEND_TO_CUSTOMER);
-                            }
-                        } catch (ModelInsuficientData e) {
-                            sendEvent.setResult(SendEventStatus.ERROR);
-                            sendEvent.setDescription(e.getMessage());
-                        } catch (SendException e) {
-                            sendEvent.setResult(SendEventStatus.ERROR);
-                            sendEvent.setDescription("Internal Server Error");
-                            logger.error("Internal server error", e);
-                        }
-                    });
+            document.stream().forEach(c -> {
+                DocumentManager manager = new DocumentManager(session);
+                SendEventModel sendEvent = c.addSendEvent(DestinyType.CUSTOMER);
+                try {
+                    manager.sendToCustomerParty(organization, c, sendEvent);
+                    if (sendEvent.getResult().equals(SendEventStatus.SUCCESS)) {
+                        c.removeRequiredAction(RequiredAction.SEND_TO_CUSTOMER);
+                    }
+                } catch (ModelInsuficientData e) {
+                    sendEvent.setResult(SendEventStatus.ERROR);
+                    sendEvent.setDescription(e.getMessage());
+                } catch (SendException e) {
+                    sendEvent.setResult(SendEventStatus.ERROR);
+                    sendEvent.setDescription("Internal Server Error");
+                    logger.error("Internal server error", e);
+                }
+            });
         }
         return readCount;
     }
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/mvel/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/mvel/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/mvel/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-
-<module xmlns="urn:jboss:module:1.3" name="org.mvel" slot="main">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.mvel:mvel2}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api" export="false" slot="main" services="import" optional="false"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/antlr/3.5/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/antlr/3.5/module.xml	(revision a592b834351ab48799dbac2f1fd29819dbeeb0ac)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/antlr/3.5/module.xml	(revision a592b834351ab48799dbac2f1fd29819dbeeb0ac)
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.antlr" slot="3.5">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.antlr:antlr-runtime}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/aopalliance/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/aopalliance/main/module.xml	(revision a592b834351ab48799dbac2f1fd29819dbeeb0ac)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/aopalliance/main/module.xml	(revision a592b834351ab48799dbac2f1fd29819dbeeb0ac)
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="aopalliance">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${aopalliance:aopalliance}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api"/>
-        <module name="javax.inject.api"/>
-        <module name="javax.enterprise.api"/>
-        <module name="org.slf4j"/>
-        <module name="org.apache.commons.logging"/>
-        <module name="org.openfact.openfact-core"/>
-        <module name="org.openfact.openfact-common"/>
-        <module name="org.openfact.openfact-server-spi"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/apache/ant/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/apache/ant/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/apache/ant/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.apache.ant" slot="main">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.apache.ant:ant}"/>
-        <artifact name="${org.apache.ant:ant-launcher}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/apache/maven/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/apache/maven/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/apache/maven/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.apache.maven" slot="main">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.apache.maven:maven-aether-provider}"/>
-        <artifact name="${org.apache.maven:maven-artifact}"/>
-        <artifact name="${org.apache.maven:maven-compat}"/>
-        <artifact name="${org.apache.maven:maven-core}"/>
-        <artifact name="${org.apache.maven:maven-model}"/>
-        <artifact name="${org.apache.maven:maven-model-builder}"/>
-        <artifact name="${org.apache.maven:maven-plugin-api}"/>
-        <artifact name="${org.apache.maven:maven-repository-metadata}"/>
-        <artifact name="${org.apache.maven:maven-settings}"/>
-        <artifact name="${org.apache.maven:maven-settings-builder}"/>
-    </resources>
-    <dependencies>
-        <module name="com.google.guava"/>
-        <module name="javax.api"/>
-        <module name="javax.inject.api"/>
-        <module name="org.apache.maven.wagon"/>
-        <module name="org.codehouse.plexus"/>
-        <module name="org.eclipse.aether" slot="kie"/>
-        <module name="org.eclipse.sisu"/>
-        <module name="org.sonatype.plexus"/>
-        <module name="org.sonatype.sisu"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/eclipse/sisu/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/eclipse/sisu/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/eclipse/sisu/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.eclipse.sisu" slot="main">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.eclipse.sisu:org.eclipse.sisu.inject}"/>
-        <artifact name="${org.eclipse.sisu:org.eclipse.sisu.plexus}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api"/>
-        <module name="javax.enterprise.api"/>
-        <module name="javax.inject.api"/>
-        <module name="org.codehouse.plexus"/>
-        <module name="org.sonatype.sisu"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/eclipse/aether/kie/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/eclipse/aether/kie/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/eclipse/aether/kie/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,39 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.eclipse.aether" slot="kie">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.eclipse.aether:aether-api}"/>
-        <artifact name="${org.eclipse.aether:aether-connector-basic}"/>
-        <artifact name="${org.eclipse.aether:aether-spi}"/>
-        <artifact name="${org.eclipse.aether:aether-impl}"/>
-        <artifact name="${org.eclipse.aether:aether-transport-file}"/>
-        <artifact name="${org.eclipse.aether:aether-transport-http}"/>
-        <artifact name="${org.eclipse.aether:aether-transport-wagon}"/>
-        <artifact name="${org.eclipse.aether:aether-util}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api"/>
-        <module name="javax.inject.api"/>
-        <module name="org.apache.httpcomponents"/>
-        <module name="org.apache.maven.wagon"/>
-        <module name="org.eclipse.sisu"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/sonatype/sisu/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/sonatype/sisu/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/sonatype/sisu/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.sonatype.sisu" slot="main">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.sonatype.sisu:sisu-guice::no_aop}"/>
-    </resources>
-    <dependencies>
-        <module name="aopalliance"/>
-        <module name="com.google.guava"/>
-        <module name="javax.api"/>
-        <module name="javax.inject.api"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/sonatype/plexus/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/sonatype/plexus/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/sonatype/plexus/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.sonatype.plexus" slot="main">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.sonatype.plexus:plexus-cipher}"/>
-        <artifact name="${org.sonatype.plexus:plexus-sec-dispatcher}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api"/>
-        <module name="org.codehouse.plexus"/>
-        <module name="org.eclipse.sisu"/>
-        <module name="org.sonatype.sisu"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/codehouse/plexus/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/codehouse/plexus/main/module.xml	(revision a592b834351ab48799dbac2f1fd29819dbeeb0ac)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/codehouse/plexus/main/module.xml	(revision a592b834351ab48799dbac2f1fd29819dbeeb0ac)
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.codehouse.plexus" slot="main">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.codehaus.plexus:plexus-classworlds}"/>
-        <artifact name="${org.codehaus.plexus:plexus-component-annotations}"/>
-        <artifact name="${org.codehaus.plexus:plexus-interpolation}"/>
-        <artifact name="${org.codehaus.plexus:plexus-utils}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/apache/maven/wagon/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/apache/maven/wagon/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/apache/maven/wagon/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-
-<module xmlns="urn:jboss:module:1.3" name="org.apache.maven.wagon" slot="main">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.apache.maven.wagon:wagon-http}"/>
-        <artifact name="${org.apache.maven.wagon:wagon-http-shared}"/>
-        <artifact name="${org.apache.maven.wagon:wagon-provider-api}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api" export="false" slot="main" services="import" optional="false"/>
-        <module name="org.apache.commons.io" export="false" slot="main" services="import" optional="false"/>
-        <module name="org.apache.commons.lang" export="false" slot="main" services="import" optional="false"/>
-        <module name="org.apache.commons.logging" export="false" slot="main" services="import" optional="false"/>
-        <module name="org.apache.httpcomponents" export="false" slot="main" services="import" optional="false"/>
-        <module name="org.codehouse.plexus" export="false" slot="main" services="import" optional="false"/>
-        <module name="sun.jdk" export="false" slot="main" services="import" optional="false"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/openfact/openfact-core/main/module.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/openfact/openfact-core/main/module.xml	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/openfact/openfact-core/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -29,10 +29,11 @@
         <module name="com.fasterxml.jackson.core.jackson-annotations"/>
         <module name="com.fasterxml.jackson.core.jackson-databind"/>
         <module name="com.fasterxml.jackson.jaxrs.jackson-jaxrs-json-provider"/>
+        <module name="com.fasterxml.jackson.datatype.jackson-datatype-jsr310"/>
         <module name="org.openfact.openfact-common"/>
-        <module name="org.bouncycastle" />
+        <module name="org.bouncycastle"/>
         <module name="javax.api"/>
         <module name="javax.activation.api"/>
-        <module name="sun.jdk" optional="true" />
+        <module name="sun.jdk" optional="true"/>
     </dependencies>
 </module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/mongodb/mongo-java-driver/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/mongodb/mongo-java-driver/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/mongodb/mongo-java-driver/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.mongodb.mongo-java-driver">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-
-    <resources>
-        <artifact name="${org.mongodb:mongo-java-driver}"/>
-    </resources>
-
-    <dependencies>
-        <module name="javax.api"/>
-    </dependencies>
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/openfact/openfact-services/main/module.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/openfact/openfact-services/main/module.xml	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/openfact/openfact-services/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -48,10 +48,11 @@
         <module name="com.fasterxml.jackson.core.jackson-annotations"/>
         <module name="com.fasterxml.jackson.core.jackson-databind"/>
         <module name="com.fasterxml.jackson.jaxrs.jackson-jaxrs-json-provider"/>
+        <module name="com.fasterxml.jackson.datatype.jackson-datatype-jsr310"/>
         <module name="com.google.zxing.core"/>
         <module name="com.google.zxing.javase"/>
         <module name="org.jboss.logging"/>
-        <module name="org.bouncycastle" />
+        <module name="org.bouncycastle"/>
         <module name="javax.api"/>
         <module name="javax.activation.api"/>
         <module name="org.apache.httpcomponents"/>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/eclipse/jdt/core/compiler/ecj/main/module.xml
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/eclipse/jdt/core/compiler/ecj/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/eclipse/jdt/core/compiler/ecj/main/module.xml	(revision 5ec6955162801a9e01251feccdc74b346cbf80e4)
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-    Copyright 2016 Sistcoop, Inc. and/or its affiliates
-    and other contributors as indicated by the @author tags.
-   
-    Licensed under the Apache License, Version 2.0 (the "License");
-    you may not use this file except in compliance with the License.
-    You may obtain a copy of the License at
-   
-    http://www.apache.org/licenses/LICENSE-2.0
-   
-    Unless required by applicable law or agreed to in writing, software
-    distributed under the License is distributed on an "AS IS" BASIS,
-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-    See the License for the specific language governing permissions and
-    limitations under the License.
- -->
-<module xmlns="urn:jboss:module:1.3" name="org.eclipse.jdt.core.compiler.ecj">
-    <properties>
-        <property name="jboss.api" value="private"/>
-    </properties>
-    <resources>
-        <artifact name="${org.eclipse.jdt.core.compiler:ecj}"/>
-    </resources>
-    <dependencies>
-        <module name="javax.api"/>
-        <module name="javax.inject.api"/>
-        <module name="javax.enterprise.api"/>
-        <module name="org.slf4j"/>
-        <module name="org.apache.commons.logging"/>
-        <module name="org.openfact.openfact-core"/>
-        <module name="org.openfact.openfact-common"/>
-        <module name="org.openfact.openfact-server-spi"/>
-    </dependencies>
-
-</module>
Index: distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/openfact/openfact-server-subsystem/main/server-war/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/openfact/openfact-server-subsystem/main/server-war/WEB-INF/web.xml	(revision 734c3cb598025035d148ebf52e5294e3e4c46289)
+++ distribution/feature-packs/server-feature-pack/src/main/resources/modules/system/layers/openfact/org/openfact/openfact-server-subsystem/main/server-war/WEB-INF/web.xml	(revision a755be1b0a430e906943b2f34a3aa1223210c7ea)
@@ -69,7 +69,6 @@
         <url-pattern>/*</url-pattern>
     </servlet-mapping>
 
-
     <security-constraint>
         <web-resource-collection>
             <web-resource-name>Admin Rest</web-resource-name>
