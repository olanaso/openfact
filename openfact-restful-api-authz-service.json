{
  "allowRemoteResourceManagement": true,
  "policyEnforcementMode": "ENFORCING",
  "resources": [
    {
      "name": "User Self Profile Resource",
      "uri": "/api/profile",
      "type": "http://openfact.com/self-profile",
      "scopes": [
        {
          "name": "self-profile:view"
        }
      ]
    },
    {
      "name": "User Resource",
      "uri": "/api/users/*",
      "type": "http://openfact.com/users",
      "scopes": [
        {
          "name": "user:view"
        },
        {
          "name": "user:manage"
        }
      ]
    },
    {
      "name": "Company Resource",
      "uri": "/api/companies/*",
      "type": "http://openfact.com/companies",
      "scopes": [
        {
          "name": "company:view"
        },
        {
          "name": "company:manage"
        }
      ]
    }
  ],
  "policies": [
    {
      "name": "Any User Policy",
      "description": "Defines that only users from well known clients are allowed to access",
      "type": "role",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "roles": "[{\"id\":\"user\",\"required\":true}]"
      }
    },
    {
      "name": "Only Owner Policy",
      "description": "Defines that only the resource owner is allowed to do something",
      "type": "js",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "code": "var context = $evaluation.getContext();\nvar identity = context.getIdentity();\nvar permission = $evaluation.getPermission();\n\nif (permission.getResource() && permission.getResource().getOwner() == identity.getId()) {\n    $evaluation.grant();\n}"
      }
    },
    {
      "name": "View Self Profile Permission",
      "description": "Defines who is allowed to view an user self profile",
      "type": "scope",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "scopes": "[\"self-profile:view\"]",
        "applyPolicies": "[\"Any User Policy\"]"
      }
    },
    {
      "name": "View User Permission",
      "description": "Defines who is allowed to view an user",
      "type": "scope",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "scopes": "[\"user:view\"]",
        "applyPolicies": "[\"Any User Policy\"]"
      }
    },
    {
      "name": "Manage User Permission",
      "description": "Defines who is allowed to manage an user",
      "type": "scope",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "scopes": "[\"user:manage\"]",
        "applyPolicies": "[\"Only Owner Policy\"]"
      }
    },
    {
      "name": "View Company Permission",
      "description": "Defines who is allowed to view a company",
      "type": "scope",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "scopes": "[\"company:view\"]",
        "applyPolicies": "[\"Any User Policy\"]"
      }
    },
    {
      "name": "Manage Company Permission",
      "description": "Defines who is allowed to manage an company",
      "type": "scope",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "scopes": "[\"company:manage\"]",
        "applyPolicies": "[\"Only Owner Policy\"]"
      }
    },
    {
      "name": "View Document Permission",
      "description": "Defines who is allowed to view a document",
      "type": "scope",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "scopes": "[\"company:view\"]",
        "applyPolicies": "[\"Any User Policy\"]"
      }
    }
  ],
  "scopes": [
    {
      "name": "self-profile:view"
    },
    {
      "name": "user:view"
    },
    {
      "name": "user:manage"
    },
    {
      "name": "company:view"
    },
    {
      "name": "company:manage"
    }
  ]
}